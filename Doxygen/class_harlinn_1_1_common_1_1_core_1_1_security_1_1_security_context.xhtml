<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Security::SecurityContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Security::SecurityContext Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A wrapper for the <a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a> CtxtHandle type.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCSecurity.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Security::SecurityContext:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context__inherit__graph.svg" width="732" height="1088"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a40cd2aec524164bc4b146de8ccda879d" id="r_a40cd2aec524164bc4b146de8ccda879d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a40cd2aec524164bc4b146de8ccda879d">SecurityContext</a> ()</td></tr>
<tr class="separator:a40cd2aec524164bc4b146de8ccda879d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed92717ae8aab6b846d501527cb42135" id="r_aed92717ae8aab6b846d501527cb42135"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed92717ae8aab6b846d501527cb42135">SecurityContext</a> (const CtxtHandle &amp;handle)</td></tr>
<tr class="separator:aed92717ae8aab6b846d501527cb42135"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39be993fd27ae3cab7cbc1f41256e670" id="r_a39be993fd27ae3cab7cbc1f41256e670"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a39be993fd27ae3cab7cbc1f41256e670">SecurityContext</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;other)=delete</td></tr>
<tr class="separator:a39be993fd27ae3cab7cbc1f41256e670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6addd7ef6e24d0d160fcc9565a0bf9a" id="r_aa6addd7ef6e24d0d160fcc9565a0bf9a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa6addd7ef6e24d0d160fcc9565a0bf9a">SecurityContext</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aa6addd7ef6e24d0d160fcc9565a0bf9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5aea61fe143c54e97e0fd2efb411fd5" id="r_aa5aea61fe143c54e97e0fd2efb411fd5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa5aea61fe143c54e97e0fd2efb411fd5">~SecurityContext</a> ()</td></tr>
<tr class="separator:aa5aea61fe143c54e97e0fd2efb411fd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d9cc1b81412550a71731724bbfa3594" id="r_a4d9cc1b81412550a71731724bbfa3594"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d9cc1b81412550a71731724bbfa3594">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;other)=delete</td></tr>
<tr class="separator:a4d9cc1b81412550a71731724bbfa3594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1c24976f4cad8867b887c25a6c1c057" id="r_ab1c24976f4cad8867b887c25a6c1c057"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab1c24976f4cad8867b887c25a6c1c057">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:ab1c24976f4cad8867b887c25a6c1c057"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7cbcc73cd8d1b2a2460d5641f31108e" id="r_ad7cbcc73cd8d1b2a2460d5641f31108e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad7cbcc73cd8d1b2a2460d5641f31108e">Close</a> ()</td></tr>
<tr class="separator:ad7cbcc73cd8d1b2a2460d5641f31108e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21e90e9ab9251fdcf472b32323dcdc13" id="r_a21e90e9ab9251fdcf472b32323dcdc13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21e90e9ab9251fdcf472b32323dcdc13">Encrypt</a> (unsigned long qualityOfProtection, PSecBufferDesc message, unsigned long messageSeqNumber) const</td></tr>
<tr class="separator:a21e90e9ab9251fdcf472b32323dcdc13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04d23738d949ceff921c1a5555ca5567" id="r_a04d23738d949ceff921c1a5555ca5567"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a04d23738d949ceff921c1a5555ca5567">Decrypt</a> (PSecBufferDesc message, unsigned long messageSeqNumber, unsigned long *qualityOfProtection) const</td></tr>
<tr class="separator:a04d23738d949ceff921c1a5555ca5567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cf4b9f5071b62d7f5828385ab84fe8c" id="r_a6cf4b9f5071b62d7f5828385ab84fe8c"><td class="memItemLeft" align="right" valign="top">SECURITY_STATUS&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6cf4b9f5071b62d7f5828385ab84fe8c">MakeSignature</a> (ULONG qualityOfProtection, PSecBufferDesc message, unsigned long messageSeqNumber) const</td></tr>
<tr class="separator:a6cf4b9f5071b62d7f5828385ab84fe8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30c2f03a23a0cfce845abb1aa52c03c5" id="r_a30c2f03a23a0cfce845abb1aa52c03c5"><td class="memItemLeft" align="right" valign="top">SECURITY_STATUS&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a30c2f03a23a0cfce845abb1aa52c03c5">VerifySignature</a> (PSecBufferDesc message, unsigned long messageSeqNumber, unsigned long *qualityOfProtection) const</td></tr>
<tr class="separator:a30c2f03a23a0cfce845abb1aa52c03c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56aba7ae6eca5a6906bef83c39ce4692" id="r_a56aba7ae6eca5a6906bef83c39ce4692"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56aba7ae6eca5a6906bef83c39ce4692">CompleteAuthToken</a> (PSecBufferDesc pToken) const</td></tr>
<tr class="separator:a56aba7ae6eca5a6906bef83c39ce4692"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a98c61918bf056e3ee45367cd66fd1208" id="r_a98c61918bf056e3ee45367cd66fd1208"><td class="memItemLeft" align="right" valign="top">static SECURITY_STATUS&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a98c61918bf056e3ee45367cd66fd1208">Initialize</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_credentials_handle.xhtml">CredentialsHandle</a> &amp;clientCredentialsHandle, PCtxtHandle context, const wchar_t *targetName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ab295ec841a5111437cb461ed3060cde1">InitializeSecurityContextRequestedFlags</a> contextRequestedFlags, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ac399dbd0e8af41596c1a5955efe1766f">SecurityDataRepresentation</a> targetDataRepresentation, PSecBufferDesc securityPackageInput, PCtxtHandle newContext, PSecBufferDesc output, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#a3609bcca569e22bd81495156b0e88201">InitializeSecurityContextFlags</a> *contextFlags, PTimeStamp expiryTimeStamp)</td></tr>
<tr class="memdesc:a98c61918bf056e3ee45367cd66fd1208"><td class="mdescLeft">&#160;</td><td class="mdescRight">The Initialize function initiates the client side, outbound security context from a credential handle. The function is used to build a security context between the client application and a remote peer.  <br /></td></tr>
<tr class="separator:a98c61918bf056e3ee45367cd66fd1208"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0b49fdf614d108003f786753346f9aa" id="r_ad0b49fdf614d108003f786753346f9aa"><td class="memItemLeft" align="right" valign="top">static SECURITY_STATUS&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad0b49fdf614d108003f786753346f9aa">Accept</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_credentials_handle.xhtml">CredentialsHandle</a> &amp;serverCredentialsHandle, PCtxtHandle context, PSecBufferDesc input, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#af57b773fa77c56a13a6d6ec6f34a593e">AcceptSecurityContextRequestedFlags</a> contextRequestedFlags, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ac399dbd0e8af41596c1a5955efe1766f">SecurityDataRepresentation</a> targetDataRepresentation, PCtxtHandle newContext, PSecBufferDesc output, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ac2e01832d41a95fb7468d5eb1ea3dd9c">AcceptSecurityContextFlags</a> *contextFlags, PTimeStamp expiryTimeStamp)</td></tr>
<tr class="memdesc:ad0b49fdf614d108003f786753346f9aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">The Accept function enables the server component of a transport application to establish a security context between the server and a remote client.  <br /></td></tr>
<tr class="separator:ad0b49fdf614d108003f786753346f9aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a0eacf2e7f428afc932d9b89db494c751" id="r_a0eacf2e7f428afc932d9b89db494c751"><td class="memItemLeft" align="right" valign="top">static constexpr CtxtHandle&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0eacf2e7f428afc932d9b89db494c751">InvalidHandle</a> = { ( (ULONG_PTR)( (INT_PTR)-1 ) ),( (ULONG_PTR)( (INT_PTR)-1 ) ) }</td></tr>
<tr class="separator:a0eacf2e7f428afc932d9b89db494c751"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ab7fe03d52d67a490795240402ffa7496" id="r_ab7fe03d52d67a490795240402ffa7496"><td class="memItemLeft" align="right" valign="top">CtxtHandle&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab7fe03d52d67a490795240402ffa7496">handle_</a></td></tr>
<tr class="separator:ab7fe03d52d67a490795240402ffa7496"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A wrapper for the <a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a> CtxtHandle type. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a40cd2aec524164bc4b146de8ccda879d" name="a40cd2aec524164bc4b146de8ccda879d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40cd2aec524164bc4b146de8ccda879d">&#9670;&#160;</a></span>SecurityContext() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Security::SecurityContext::SecurityContext </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aed92717ae8aab6b846d501527cb42135" name="aed92717ae8aab6b846d501527cb42135"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed92717ae8aab6b846d501527cb42135">&#9670;&#160;</a></span>SecurityContext() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Security::SecurityContext::SecurityContext </td>
          <td>(</td>
          <td class="paramtype">const CtxtHandle &amp;</td>          <td class="paramname"><span class="paramname"><em>handle</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a39be993fd27ae3cab7cbc1f41256e670" name="a39be993fd27ae3cab7cbc1f41256e670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39be993fd27ae3cab7cbc1f41256e670">&#9670;&#160;</a></span>SecurityContext() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Security::SecurityContext::SecurityContext </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6addd7ef6e24d0d160fcc9565a0bf9a" name="aa6addd7ef6e24d0d160fcc9565a0bf9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6addd7ef6e24d0d160fcc9565a0bf9a">&#9670;&#160;</a></span>SecurityContext() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Security::SecurityContext::SecurityContext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa5aea61fe143c54e97e0fd2efb411fd5" name="aa5aea61fe143c54e97e0fd2efb411fd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5aea61fe143c54e97e0fd2efb411fd5">&#9670;&#160;</a></span>~SecurityContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Security::SecurityContext::~SecurityContext </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad0b49fdf614d108003f786753346f9aa" name="ad0b49fdf614d108003f786753346f9aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0b49fdf614d108003f786753346f9aa">&#9670;&#160;</a></span>Accept()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static SECURITY_STATUS Harlinn::Common::Core::Security::SecurityContext::Accept </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_credentials_handle.xhtml">CredentialsHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>serverCredentialsHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PCtxtHandle</td>          <td class="paramname"><span class="paramname"><em>context</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>input</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#af57b773fa77c56a13a6d6ec6f34a593e">AcceptSecurityContextRequestedFlags</a></td>          <td class="paramname"><span class="paramname"><em>contextRequestedFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ac399dbd0e8af41596c1a5955efe1766f">SecurityDataRepresentation</a></td>          <td class="paramname"><span class="paramname"><em>targetDataRepresentation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PCtxtHandle</td>          <td class="paramname"><span class="paramname"><em>newContext</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>output</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ac2e01832d41a95fb7468d5eb1ea3dd9c">AcceptSecurityContextFlags</a> *</td>          <td class="paramname"><span class="paramname"><em>contextFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PTimeStamp</td>          <td class="paramname"><span class="paramname"><em>expiryTimeStamp</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The Accept function enables the server component of a transport application to establish a security context between the server and a remote client. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serverCredentialsHandle</td><td>The credentials of the server. </td></tr>
    <tr><td class="paramname">context</td><td>A pointer to a CtxtHandle for a partially accepted security context or nullptr if this is the initial call to Accept. </td></tr>
    <tr><td class="paramname">input</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a SecBufferDesc structure generated by a client call to InitializeSecurityContext (General) that contains the input buffer descriptor. </p>
<p>When using the Schannel SSP, the first buffer must be of type SECBUFFER_TOKEN and contain the security token received from the client. The second buffer should be of type SECBUFFER_EMPTY. </p>
<p>When using the Negotiate, Kerberos, or NTLM SSPs, channel binding information can be specified by passing in a SecBuffer structure of type SECBUFFER_CHANNEL_BINDINGS in addition to the buffers generated by the call to the Initialize function. The channel binding information for the channel binding buffer can be obtained by calling the QueryContextAttributes function on the Schannel context the client used to authenticate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contextRequestedFlags</td><td>Values from the AcceptSecurityContextRequestedFlags enumeration indicating the requested capabilities of the security context. </td></tr>
    <tr><td class="paramname">targetDataRepresentation</td><td>The data representation, such as byte ordering, on the target. </td></tr>
    <tr><td class="paramname">newContext</td><td>A pointer to a CtxtHandle structure. On the first call to Accept, this pointer receives the new context handle. On subsequent calls, newContext can be the same as the handle specified in the context parameter. </td></tr>
    <tr><td class="paramname">output</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a SecBufferDesc structure that contains the output buffer descriptor. This buffer is sent to the client for input into additional calls to Initialize. An output buffer may be generated even if the function returns SEC_E_OK. Any buffer generated must be sent back to the client application. </p>
<p>When using Schannel, on output, this buffer receives a token for the security context. The token must be sent to the client. The function can also return a buffer of type SECBUFFER_EXTRA. In addition, the caller must pass in a buffer of type SECBUFFER_ALERT. On output, if an alert is generated, this buffer contains information about that alert, and the function fails. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contextFlags</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a variable that receives a set of bit flags that indicate the attributes of the established context. </p>
<p>Do not check for security-related attributes until the final function call returns successfully. Attribute flags not related to security, such as the ASC_RET_ALLOCATED_MEMORY flag, can be checked before the final return. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">expiryTimeStamp</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a TimeStamp structure that receives the expiration time of the context. We recommend that the security package always return this value in local time. </p>
<p>This parameter is set to a constant maximum time. There is no expiration time for Digest security contexts or credentials or when using the Digest SSP. </p>
<p>This is optional when using the Schannel SSP. When the remote party has supplied a certificate to be used for authentication, this parameter receives the expiration time for that certificate. If no certificate was supplied, a maximum time value is returned. </p>
<p>Until the last call of the authentication process, the expiration time for the context can be incorrect because more information will be provided during later stages of the negotiation. Therefore, expiryTimeStamp must be NULL until the last call to the function. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a id="ad7cbcc73cd8d1b2a2460d5641f31108e" name="ad7cbcc73cd8d1b2a2460d5641f31108e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7cbcc73cd8d1b2a2460d5641f31108e">&#9670;&#160;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::Security::SecurityContext::Close </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a56aba7ae6eca5a6906bef83c39ce4692" name="a56aba7ae6eca5a6906bef83c39ce4692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56aba7ae6eca5a6906bef83c39ce4692">&#9670;&#160;</a></span>CompleteAuthToken()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::Security::SecurityContext::CompleteAuthToken </td>
          <td>(</td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>pToken</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a04d23738d949ceff921c1a5555ca5567" name="a04d23738d949ceff921c1a5555ca5567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04d23738d949ceff921c1a5555ca5567">&#9670;&#160;</a></span>Decrypt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Security::SecurityContext::Decrypt </td>
          <td>(</td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>message</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long</td>          <td class="paramname"><span class="paramname"><em>messageSeqNumber</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long *</td>          <td class="paramname"><span class="paramname"><em>qualityOfProtection</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a21e90e9ab9251fdcf472b32323dcdc13" name="a21e90e9ab9251fdcf472b32323dcdc13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21e90e9ab9251fdcf472b32323dcdc13">&#9670;&#160;</a></span>Encrypt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::Security::SecurityContext::Encrypt </td>
          <td>(</td>
          <td class="paramtype">unsigned long</td>          <td class="paramname"><span class="paramname"><em>qualityOfProtection</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>message</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long</td>          <td class="paramname"><span class="paramname"><em>messageSeqNumber</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a98c61918bf056e3ee45367cd66fd1208" name="a98c61918bf056e3ee45367cd66fd1208"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98c61918bf056e3ee45367cd66fd1208">&#9670;&#160;</a></span>Initialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static SECURITY_STATUS Harlinn::Common::Core::Security::SecurityContext::Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_credentials_handle.xhtml">CredentialsHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>clientCredentialsHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PCtxtHandle</td>          <td class="paramname"><span class="paramname"><em>context</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>targetName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ab295ec841a5111437cb461ed3060cde1">InitializeSecurityContextRequestedFlags</a></td>          <td class="paramname"><span class="paramname"><em>contextRequestedFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ac399dbd0e8af41596c1a5955efe1766f">SecurityDataRepresentation</a></td>          <td class="paramname"><span class="paramname"><em>targetDataRepresentation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>securityPackageInput</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PCtxtHandle</td>          <td class="paramname"><span class="paramname"><em>newContext</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>output</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#a3609bcca569e22bd81495156b0e88201">InitializeSecurityContextFlags</a> *</td>          <td class="paramname"><span class="paramname"><em>contextFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PTimeStamp</td>          <td class="paramname"><span class="paramname"><em>expiryTimeStamp</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The Initialize function initiates the client side, outbound security context from a credential handle. The function is used to build a security context between the client application and a remote peer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">credentialsHandle</td><td>The <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_credentials_handle.xhtml" title="A wrapper for the Windows CredHandle type.">CredentialsHandle</a> to initialize the security context from </td></tr>
    <tr><td class="paramname">context</td><td>A pointer to a CtxtHandle for a partially initialized security context or nullptr if this is the initial call to Initialize. </td></tr>
    <tr><td class="paramname">targetName</td><td>A pointer to a null-terminated string that indicates the target of the context. The interpretation of this string is determined by the security package, like: <ul>
<li>
Digest: Null-terminated string that uniquely identifies the URI of the requested resource. The string must be composed of characters that are allowed in a URI and must be representable by the US ASCII code set. Percent encoding can be used to represent characters outside the US ASCII code set.  </li>
<li>
Kerberos, Negotiate or NTLM: Service principal name (SPN) or the security context of the destination server  </li>
<li>
Null-terminated string that uniquely identifies the target server. Schannel uses this value to verify the server certificate. Schannel also uses this value to locate the session in the session cache when reestablishing a connection. The cached session is used only if all of the following conditions are met: <ul>
<li>
The target name is the same. </li>
<li>
The cache entry has not expired. </li>
<li>
The application process that calls the function is the same. </li>
<li>
The logon session is the same. </li>
<li>
The credential handle is the same. </li>
</ul>
</li>
</ul>
</td></tr>
    <tr><td class="paramname">contextRequestedFlags</td><td>Values from the InitializeSecurityContextRequestedFlags enumeration indicating the requested capabilities of the security context. </td></tr>
    <tr><td class="paramname">targetDataRepresentation</td><td>The data representation, such as byte ordering, on the target. </td></tr>
    <tr><td class="paramname">securityPackageInput</td><td>A pointer to a SecBufferDesc structure that contains pointers to the buffers supplied as input to the package. Unless the client context was initiated by the server, the value of this parameter must be NULL on the first call to the function. On subsequent calls to the function or when the client context was initiated by the server, the value of this parameter is a pointer to a buffer allocated with enough memory to hold the token returned by the remote computer. </td></tr>
    <tr><td class="paramname">newContext</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a CtxtHandle structure. On the first call to Initialize, this pointer receives the new context handle. On the second call, newContext can be the same as the handle specified in the context parameter. </p>
<p>When using the Schannel SSP, on calls after the first call, pass the handle returned here as the context parameter and specify nullptr for newContext. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">output</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a SecBufferDesc structure that contains pointers to the SecBuffer structure that receives the output data. If a buffer was typed as SEC_READWRITE in the input, it will be there on output. The system will allocate a buffer for the security token if requested (through <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ab295ec841a5111437cb461ed3060cde1a14ed491b2429e2ebde9d1e83fae2bb89">InitializeSecurityContextRequestedFlags::AllocateMemory</a>) and fill in the address in the buffer descriptor for the security token. </p>
<p>When using the Microsoft Digest SSP, this parameter receives the challenge response that must be sent to the server. </p>
<p>When using the Schannel SSP, if the <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml#ab295ec841a5111437cb461ed3060cde1a14ed491b2429e2ebde9d1e83fae2bb89">InitializeSecurityContextRequestedFlags::AllocateMemory</a> flag is specified, the Schannel SSP will allocate memory for the bufferand put the appropriate information in the SecBufferDesc. In addition, the caller must pass in a buffer of type SECBUFFER_ALERT.On output, if an alert is generated, this buffer contains information about that alert, and the function fails. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contextFlags</td><td>A pointer to a variable to receive a set of bit flags that indicate the attributes of the established context. </td></tr>
    <tr><td class="paramname">expiryTimeStamp</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>A pointer to a TimeStamp structure that receives the expiration time of the context. It is recommended that the security package always return this value in local time. This parameter is optional and NULL should be passed for short-lived clients. </p>
<p>There is no expiration time for Microsoft Digest SSP security contexts or credentials. </p>
<dl class="section return"><dt>Returns</dt><dd>If the function succeeds, the function returns one of the following success codes: <ul>
<li>
SEC_I_COMPLETE_AND_CONTINUE: The client must call CompleteAuthToken and then pass the output to the server. The client then waits for a returned token and passes it, in another call, to Initialize  </li>
<li>
SEC_I_COMPLETE_NEEDED: The client must finish building the message and then call the CompleteAuthToken function.  </li>
<li>
SEC_I_CONTINUE_NEEDED: The client must send the output token to the server and wait for a return token. The returned token is then passed in another call to Initialize. The output token can be empty.  </li>
<li>
SEC_I_INCOMPLETE_CREDENTIALS: Use with Schannel. The server has requested client authentication, and the supplied credentials either do not include a certificate or the certificate was not issued by a certification authority that is trusted by the server.  </li>
<li>
<p class="startli"></p>
<p class="interli">SEC_E_INCOMPLETE_MESSAGE: Use with Schannel. <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml">Data</a> for the whole message was not read from the wire. </p>
<p class="interli"></p>
<p class="interli">When this value is returned, the pInput buffer contains a SecBuffer structure with a BufferType member of SECBUFFER_MISSING.The cbBuffer member of SecBuffer contains a value that indicates the number of additional bytes that the function must read from the client before this function succeeds. While this number is not always accurate, using it can help improve performance by avoiding multiple calls to this function. </p>
<p class="endli"></p>
</li>
<li>
SEC_E_OK: The security context was successfully initialized. There is no need for another InitializeSecurityContext (General) call. If the function returns an output token, that is, if the SECBUFFER_TOKEN in output is of nonzero length, that token must be sent to the server.  </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a6cf4b9f5071b62d7f5828385ab84fe8c" name="a6cf4b9f5071b62d7f5828385ab84fe8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cf4b9f5071b62d7f5828385ab84fe8c">&#9670;&#160;</a></span>MakeSignature()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SECURITY_STATUS Harlinn::Common::Core::Security::SecurityContext::MakeSignature </td>
          <td>(</td>
          <td class="paramtype">ULONG</td>          <td class="paramname"><span class="paramname"><em>qualityOfProtection</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>message</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long</td>          <td class="paramname"><span class="paramname"><em>messageSeqNumber</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d9cc1b81412550a71731724bbfa3594" name="a4d9cc1b81412550a71731724bbfa3594"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d9cc1b81412550a71731724bbfa3594">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp; Harlinn::Common::Core::Security::SecurityContext::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab1c24976f4cad8867b887c25a6c1c057" name="ab1c24976f4cad8867b887c25a6c1c057"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1c24976f4cad8867b887c25a6c1c057">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp; Harlinn::Common::Core::Security::SecurityContext::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a> &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a30c2f03a23a0cfce845abb1aa52c03c5" name="a30c2f03a23a0cfce845abb1aa52c03c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30c2f03a23a0cfce845abb1aa52c03c5">&#9670;&#160;</a></span>VerifySignature()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SECURITY_STATUS Harlinn::Common::Core::Security::SecurityContext::VerifySignature </td>
          <td>(</td>
          <td class="paramtype">PSecBufferDesc</td>          <td class="paramname"><span class="paramname"><em>message</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long</td>          <td class="paramname"><span class="paramname"><em>messageSeqNumber</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long *</td>          <td class="paramname"><span class="paramname"><em>qualityOfProtection</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab7fe03d52d67a490795240402ffa7496" name="ab7fe03d52d67a490795240402ffa7496"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7fe03d52d67a490795240402ffa7496">&#9670;&#160;</a></span>handle_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CtxtHandle Harlinn::Common::Core::Security::SecurityContext::handle_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0eacf2e7f428afc932d9b89db494c751" name="a0eacf2e7f428afc932d9b89db494c751"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0eacf2e7f428afc932d9b89db494c751">&#9670;&#160;</a></span>InvalidHandle</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CtxtHandle Harlinn::Common::Core::Security::SecurityContext::InvalidHandle = { ( (ULONG_PTR)( (INT_PTR)-1 ) ),( (ULONG_PTR)( (INT_PTR)-1 ) ) }</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_security_8h.xhtml">HCCSecurity.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml">Security</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_security_1_1_security_context.xhtml">SecurityContext</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
