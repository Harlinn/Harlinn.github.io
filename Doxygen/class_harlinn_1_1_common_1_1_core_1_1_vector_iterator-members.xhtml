<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a3a7d5fbcebb3c4de3b9b63817b0af78a">Base</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a482f54c081234db2ce5e55bab5ad377b">difference_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a672b304344ce5ea2b1e530c0193f2678">iterator_category</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a518d127825d1afa937ea9e876154b318">iterator_concept</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a9524dc9a94788465d53a872d2aa4e243">operator bool</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#ad7ae6ecd7fb46c451fd30694427838cc">operator!=</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#aee6c95ad40be36605a6c3c11fc0e7bbe">operator!=</a>(nullptr_t) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a117477636f5c68909913d5f278a5eb81">operator*</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#abeb12fdb77158f4e7f7b231fdbb5e52d">operator+</a>(const DiffT offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#ae897a1c5015ef65430ceca276401d985">Harlinn::Common::Core::VectorConstIterator::operator+</a>(const difference_type offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a13ad33e05a6d293f877eb89e911cbbc0">operator++</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a4af3a598810fd440e262ff6fdac41da6">operator++</a>(int) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#ac3a38cea6866cb36bb45299fa7942db8">operator+=</a>(const difference_type offset) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a1ef429eabd210d46740f8f17418597b5">operator-</a>(const VectorIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a6708a8325de128172f4dd364e70d8518">operator-</a>(const DiffT offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a9f9c8821a6a5bde68d0b796dbc46b489">Harlinn::Common::Core::VectorConstIterator::operator-</a>(const difference_type offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a35949cceb45dc117a5e5a15780668cb9">Harlinn::Common::Core::VectorConstIterator::operator-</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#affd6480f00f64ca133901441f122e9d4">operator--</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a2778985762fe5531bca7b27c993597f3">operator--</a>(int) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a5907ec166099921025cb93002fbb84e7">operator-=</a>(const difference_type offset) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#aa47bd3e47859aa6029652640878c9c98">operator-&gt;</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#adca44db390da6e9fddeb5100025d5693">operator&lt;</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a5e8882888273a1baf71fbdbd1a22b654">operator&lt;=</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a78cfd50930a770d7778486084e187421">operator==</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#aa81ecc97e173ae8a3a11bf147f7e8d9a">operator==</a>(nullptr_t) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a972adb1c282497bd7f0a64d84a5126a5">operator&gt;</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#aabe8b43c75d24e0036713fb416de19bc">operator&gt;=</a>(const VectorConstIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#ac9c49b0f0173988857fa21c4b0e08201">operator[]</a>(const difference_type offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#ac3c3ece5cbe94c7fa94115798ead2dc2">OwnerVector</a> class</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#ad878c949912d5946dd8b36cc815b5365">pointer</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a137c1980976a84152eecd31f3d30af91">ptr_</a></td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a86988162ea197d17f843e96ccc7b22fc">reference</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#ae275b4c66d3302801a9fe2f873aeed79">swap</a>(VectorIterator &amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#adfb97205959eaf8ec3fc927f998a22ab">Harlinn::Common::Core::VectorConstIterator::swap</a>(VectorConstIterator &amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a14187686ff3a44f6018b3a0472370454">value_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#af815f7d36a32835177c1cea0435c2770">VectorBase</a> class</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a40454e4e642f3f6c8f84a5e37dded4a7">VectorConstIterator</a>(value_type *ptr) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml#a16c848d63315fb29f584774383374fa6">VectorConstIterator</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_const_iterator.xhtml">Harlinn::Common::Core::VectorConstIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#aaa25c886c727c1d0de5247525401d5e7">VectorIterator</a>(value_type *ptr) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml#a06703355340b2e1cd42f10e5eabead67">VectorIterator</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_vector_iterator.xhtml">Harlinn::Common::Core::VectorIterator&lt; VectorT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
