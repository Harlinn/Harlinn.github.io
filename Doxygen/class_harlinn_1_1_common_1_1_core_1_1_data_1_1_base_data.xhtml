<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Data::BaseData&lt; ObjectT, KeyT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Data::BaseData&lt; ObjectT, KeyT &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCData.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Data::BaseData&lt; ObjectT, KeyT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data__inherit__graph.svg" width="194" height="168"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::Data::BaseData&lt; ObjectT, KeyT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data__coll__graph.svg" width="194" height="168"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa08838d11c5225e19fc5d82835d0d577" id="r_aa08838d11c5225e19fc5d82835d0d577"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa08838d11c5225e19fc5d82835d0d577">Base</a> = std::enable_shared_from_this&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a>&lt;ObjectT, KeyT&gt;&gt;</td></tr>
<tr class="separator:aa08838d11c5225e19fc5d82835d0d577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f5e3707bc5de1ef2f302891f427a23c" id="r_a9f5e3707bc5de1ef2f302891f427a23c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a> = ObjectT</td></tr>
<tr class="separator:a9f5e3707bc5de1ef2f302891f427a23c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10a366dd7d846b2a928b44e8765b901f" id="r_a10a366dd7d846b2a928b44e8765b901f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a> = KeyT</td></tr>
<tr class="separator:a10a366dd7d846b2a928b44e8765b901f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4747ba71975b0579c4c4ef436717d3d4" id="r_a4747ba71975b0579c4c4ef436717d3d4"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4747ba71975b0579c4c4ef436717d3d4">BaseData</a> ()=default</td></tr>
<tr class="separator:a4747ba71975b0579c4c4ef436717d3d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3bd8859ce4cf9875356956b93b477c" id="r_a3f3bd8859ce4cf9875356956b93b477c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f3bd8859ce4cf9875356956b93b477c">~BaseData</a> ()=default</td></tr>
<tr class="separator:a3f3bd8859ce4cf9875356956b93b477c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50fa6a323600c8e0bda7b8bd48f761c2" id="r_a50fa6a323600c8e0bda7b8bd48f761c2"><td class="memTemplParams" colspan="2">template&lt;IO::StreamWriter StreamT&gt; </td></tr>
<tr class="memitem:a50fa6a323600c8e0bda7b8bd48f761c2"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a50fa6a323600c8e0bda7b8bd48f761c2">WriteTo</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_writer.xhtml">IO::BinaryWriter</a>&lt; StreamT &gt; &amp;destination) const</td></tr>
<tr class="separator:a50fa6a323600c8e0bda7b8bd48f761c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11dc762db5e3d6f0ea3cfea1eaba873d" id="r_a11dc762db5e3d6f0ea3cfea1eaba873d"><td class="memTemplParams" colspan="2">template&lt;IO::StreamReader StreamT&gt; </td></tr>
<tr class="memitem:a11dc762db5e3d6f0ea3cfea1eaba873d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a11dc762db5e3d6f0ea3cfea1eaba873d">ReadFrom</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">IO::BinaryReader</a>&lt; StreamT &gt; &amp;source)</td></tr>
<tr class="separator:a11dc762db5e3d6f0ea3cfea1eaba873d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd41dd2e4c1278f8532fa0fe31c8db38" id="r_abd41dd2e4c1278f8532fa0fe31c8db38"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abd41dd2e4c1278f8532fa0fe31c8db38">GetObjectType</a> () const noexcept=0</td></tr>
<tr class="separator:abd41dd2e4c1278f8532fa0fe31c8db38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb8f9e35dfa4750c60a417baad8b5606" id="r_aeb8f9e35dfa4750c60a417baad8b5606"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeb8f9e35dfa4750c60a417baad8b5606">IsOfType</a> (<a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a> objectType) const noexcept</td></tr>
<tr class="separator:aeb8f9e35dfa4750c60a417baad8b5606"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7320cc050349895352ea95fd2712a67" id="r_ad7320cc050349895352ea95fd2712a67"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15a">Data::ObjectState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad7320cc050349895352ea95fd2712a67">ObjectState</a> () const noexcept</td></tr>
<tr class="separator:ad7320cc050349895352ea95fd2712a67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a461a8084cf9a2de0360c518eaa476591" id="r_a461a8084cf9a2de0360c518eaa476591"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a461a8084cf9a2de0360c518eaa476591">SetObjectState</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15a">Data::ObjectState</a> value) noexcept</td></tr>
<tr class="separator:a461a8084cf9a2de0360c518eaa476591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46da7042fc1ced3ebcec2f74cdb09c84" id="r_a46da7042fc1ced3ebcec2f74cdb09c84"><td class="memItemLeft" align="right" valign="top">constexpr const <a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a46da7042fc1ced3ebcec2f74cdb09c84">Id</a> () const noexcept</td></tr>
<tr class="separator:a46da7042fc1ced3ebcec2f74cdb09c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22361d4751d85f69d60a34b071393a97" id="r_a22361d4751d85f69d60a34b071393a97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22361d4751d85f69d60a34b071393a97">SetId</a> (const <a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a> &amp;value) noexcept</td></tr>
<tr class="separator:a22361d4751d85f69d60a34b071393a97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36193f171a9964b694450ad1f2df8a19" id="r_a36193f171a9964b694450ad1f2df8a19"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a36193f171a9964b694450ad1f2df8a19">Create</a> () const =0</td></tr>
<tr class="separator:a36193f171a9964b694450ad1f2df8a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7fb93e3165ce974ad71162566368e4d" id="r_ab7fb93e3165ce974ad71162566368e4d"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab7fb93e3165ce974ad71162566368e4d">Clone</a> () const</td></tr>
<tr class="separator:ab7fb93e3165ce974ad71162566368e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a484a2927ee4fbcbee16a0dc8deb90cdd" id="r_a484a2927ee4fbcbee16a0dc8deb90cdd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a484a2927ee4fbcbee16a0dc8deb90cdd">AssignTo</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> &amp;target) const</td></tr>
<tr class="separator:a484a2927ee4fbcbee16a0dc8deb90cdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cc1f04794a795466d22466c75c0643e" id="r_a1cc1f04794a795466d22466c75c0643e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1cc1f04794a795466d22466c75c0643e">IsEqualTo</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> &amp;other) const</td></tr>
<tr class="separator:a1cc1f04794a795466d22466c75c0643e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a79e256c295be679d69afe637794860e7" id="r_a79e256c295be679d69afe637794860e7"><td class="memTemplParams" colspan="2">template&lt;IO::StreamReader StreamT&gt; </td></tr>
<tr class="memitem:a79e256c295be679d69afe637794860e7"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a79e256c295be679d69afe637794860e7">ReadObjectType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">IO::BinaryReader</a>&lt; StreamT &gt; &amp;source)</td></tr>
<tr class="separator:a79e256c295be679d69afe637794860e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a2a69430e2fe5628cf75d9d7a3176869f" id="r_a2a69430e2fe5628cf75d9d7a3176869f"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a69430e2fe5628cf75d9d7a3176869f">KIND</a> = {}</td></tr>
<tr class="separator:a2a69430e2fe5628cf75d9d7a3176869f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a719639a843bd60b8866056010439c4ef" id="r_a719639a843bd60b8866056010439c4ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a719639a843bd60b8866056010439c4ef">OnPropertyChanged</a> ()</td></tr>
<tr class="separator:a719639a843bd60b8866056010439c4ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ab97143575fc75452afa12a91c8766964" id="r_ab97143575fc75452afa12a91c8766964"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab97143575fc75452afa12a91c8766964">id_</a></td></tr>
<tr class="separator:ab97143575fc75452afa12a91c8766964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae898a0627bf52c672bfa517e3168eede" id="r_ae898a0627bf52c672bfa517e3168eede"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15a">ObjectState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae898a0627bf52c672bfa517e3168eede">objectState_</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15aa88183b946cc5f0e8c96b2e66e1c74a7e">ObjectState::Unknown</a></td></tr>
<tr class="separator:ae898a0627bf52c672bfa517e3168eede"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aa08838d11c5225e19fc5d82835d0d577" name="aa08838d11c5225e19fc5d82835d0d577"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa08838d11c5225e19fc5d82835d0d577">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::Base = std::enable_shared_from_this&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a>&lt;ObjectT, KeyT&gt;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a10a366dd7d846b2a928b44e8765b901f" name="a10a366dd7d846b2a928b44e8765b901f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10a366dd7d846b2a928b44e8765b901f">&#9670;&#160;</a></span>KeyType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::KeyType = KeyT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f5e3707bc5de1ef2f302891f427a23c" name="a9f5e3707bc5de1ef2f302891f427a23c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f5e3707bc5de1ef2f302891f427a23c">&#9670;&#160;</a></span>ObjectType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::ObjectType = ObjectT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4747ba71975b0579c4c4ef436717d3d4" name="a4747ba71975b0579c4c4ef436717d3d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4747ba71975b0579c4c4ef436717d3d4">&#9670;&#160;</a></span>BaseData()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::BaseData </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f3bd8859ce4cf9875356956b93b477c" name="a3f3bd8859ce4cf9875356956b93b477c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f3bd8859ce4cf9875356956b93b477c">&#9670;&#160;</a></span>~BaseData()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::~<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a484a2927ee4fbcbee16a0dc8deb90cdd" name="a484a2927ee4fbcbee16a0dc8deb90cdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a484a2927ee4fbcbee16a0dc8deb90cdd">&#9670;&#160;</a></span>AssignTo()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::AssignTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a>&lt; ObjectT, KeyT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>target</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7fb93e3165ce974ad71162566368e4d" name="ab7fb93e3165ce974ad71162566368e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7fb93e3165ce974ad71162566368e4d">&#9670;&#160;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> &gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::Clone </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a36193f171a9964b694450ad1f2df8a19" name="a36193f171a9964b694450ad1f2df8a19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36193f171a9964b694450ad1f2df8a19">&#9670;&#160;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a> &gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::Create </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd41dd2e4c1278f8532fa0fe31c8db38" name="abd41dd2e4c1278f8532fa0fe31c8db38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd41dd2e4c1278f8532fa0fe31c8db38">&#9670;&#160;</a></span>GetObjectType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::GetObjectType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">pure virtual</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a46da7042fc1ced3ebcec2f74cdb09c84" name="a46da7042fc1ced3ebcec2f74cdb09c84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46da7042fc1ced3ebcec2f74cdb09c84">&#9670;&#160;</a></span>Id()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::Id </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1cc1f04794a795466d22466c75c0643e" name="a1cc1f04794a795466d22466c75c0643e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cc1f04794a795466d22466c75c0643e">&#9670;&#160;</a></span>IsEqualTo()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::IsEqualTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a>&lt; ObjectT, KeyT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb8f9e35dfa4750c60a417baad8b5606" name="aeb8f9e35dfa4750c60a417baad8b5606"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb8f9e35dfa4750c60a417baad8b5606">&#9670;&#160;</a></span>IsOfType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::IsOfType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a></td>          <td class="paramname"><span class="paramname"><em>objectType</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">virtual</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad7320cc050349895352ea95fd2712a67" name="ad7320cc050349895352ea95fd2712a67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7320cc050349895352ea95fd2712a67">&#9670;&#160;</a></span>ObjectState()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15a">Data::ObjectState</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::ObjectState </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a719639a843bd60b8866056010439c4ef" name="a719639a843bd60b8866056010439c4ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a719639a843bd60b8866056010439c4ef">&#9670;&#160;</a></span>OnPropertyChanged()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::OnPropertyChanged </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a11dc762db5e3d6f0ea3cfea1eaba873d" name="a11dc762db5e3d6f0ea3cfea1eaba873d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11dc762db5e3d6f0ea3cfea1eaba873d">&#9670;&#160;</a></span>ReadFrom()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<div class="memtemplate">
template&lt;IO::StreamReader StreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::ReadFrom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">IO::BinaryReader</a>&lt; StreamT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>source</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a79e256c295be679d69afe637794860e7" name="a79e256c295be679d69afe637794860e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79e256c295be679d69afe637794860e7">&#9670;&#160;</a></span>ReadObjectType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<div class="memtemplate">
template&lt;IO::StreamReader StreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::ReadObjectType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">IO::BinaryReader</a>&lt; StreamT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>source</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a22361d4751d85f69d60a34b071393a97" name="a22361d4751d85f69d60a34b071393a97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22361d4751d85f69d60a34b071393a97">&#9670;&#160;</a></span>SetId()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::SetId </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a461a8084cf9a2de0360c518eaa476591" name="a461a8084cf9a2de0360c518eaa476591"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a461a8084cf9a2de0360c518eaa476591">&#9670;&#160;</a></span>SetObjectState()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::SetObjectState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15a">Data::ObjectState</a></td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a50fa6a323600c8e0bda7b8bd48f761c2" name="a50fa6a323600c8e0bda7b8bd48f761c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50fa6a323600c8e0bda7b8bd48f761c2">&#9670;&#160;</a></span>WriteTo()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<div class="memtemplate">
template&lt;IO::StreamWriter StreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::WriteTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_writer.xhtml">IO::BinaryWriter</a>&lt; StreamT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab97143575fc75452afa12a91c8766964" name="ab97143575fc75452afa12a91c8766964"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab97143575fc75452afa12a91c8766964">&#9670;&#160;</a></span>id_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a10a366dd7d846b2a928b44e8765b901f">KeyType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::id_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a69430e2fe5628cf75d9d7a3176869f" name="a2a69430e2fe5628cf75d9d7a3176869f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a69430e2fe5628cf75d9d7a3176869f">&#9670;&#160;</a></span>KIND</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a9f5e3707bc5de1ef2f302891f427a23c">ObjectType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::KIND = {}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae898a0627bf52c672bfa517e3168eede" name="ae898a0627bf52c672bfa517e3168eede"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae898a0627bf52c672bfa517e3168eede">&#9670;&#160;</a></span>objectState_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ObjectT , typename KeyT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15a">ObjectState</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">Harlinn::Common::Core::Data::BaseData</a>&lt; ObjectT, KeyT &gt;::objectState_ = <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml#a4b7b23ff9cfd3c3ad8bd4103f211d15aa88183b946cc5f0e8c96b2e66e1c74a7e">ObjectState::Unknown</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_data_8h.xhtml">HCCData.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_data.xhtml">Data</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_data_1_1_base_data.xhtml">BaseData</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
