<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::RegistryHandle Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::RegistryHandle Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCRegistry.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::RegistryHandle:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_registry_handle__inherit__graph.svg" width="272" height="258"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::RegistryHandle:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_registry_handle__coll__graph.svg" width="272" height="258"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:adce8a2d1be4403bf9a965a45fed2adb4" id="r_adce8a2d1be4403bf9a965a45fed2adb4"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adce8a2d1be4403bf9a965a45fed2adb4">Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>, HKEY&gt;</td></tr>
<tr class="separator:adce8a2d1be4403bf9a965a45fed2adb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_handle"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_handle')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle&lt; RegistryHandle, HKEY &gt;</a></td></tr>
<tr class="memitem:a18c8eaf7218e23cc413d9ca9a8e31468 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a18c8eaf7218e23cc413d9ca9a8e31468"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a18c8eaf7218e23cc413d9ca9a8e31468">DerivedType</a></td></tr>
<tr class="separator:a18c8eaf7218e23cc413d9ca9a8e31468 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa428c7964441885409f184d7e34acbce inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_aa428c7964441885409f184d7e34acbce"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a></td></tr>
<tr class="separator:aa428c7964441885409f184d7e34acbce inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac7635e745d3806d89303f983e000d97b" id="r_ac7635e745d3806d89303f983e000d97b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7635e745d3806d89303f983e000d97b">RegistryHandle</a> ()</td></tr>
<tr class="separator:ac7635e745d3806d89303f983e000d97b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a3b4cfbeb4762a002c167cae7a13e1f" id="r_a2a3b4cfbeb4762a002c167cae7a13e1f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a3b4cfbeb4762a002c167cae7a13e1f">RegistryHandle</a> (void *initialHandleValue, bool ownsValue=true)</td></tr>
<tr class="separator:a2a3b4cfbeb4762a002c167cae7a13e1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85d35518712f6779d177418cbf20dcab" id="r_a85d35518712f6779d177418cbf20dcab"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a85d35518712f6779d177418cbf20dcab">IsValid</a> () const noexcept</td></tr>
<tr class="separator:a85d35518712f6779d177418cbf20dcab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcfb6fa0d20db38658ae7ec424226e53" id="r_abcfb6fa0d20db38658ae7ec424226e53"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abcfb6fa0d20db38658ae7ec424226e53">Close</a> () noexcept</td></tr>
<tr class="separator:abcfb6fa0d20db38658ae7ec424226e53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae76c40f7e6cd1ff26e20473f1693653e" id="r_ae76c40f7e6cd1ff26e20473f1693653e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae76c40f7e6cd1ff26e20473f1693653e">OverridePredefinedKey</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;newHandle) const</td></tr>
<tr class="separator:ae76c40f7e6cd1ff26e20473f1693653e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ba3c28b9b253b801376e3866ac12ddd" id="r_a6ba3c28b9b253b801376e3866ac12ddd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ba3c28b9b253b801376e3866ac12ddd">ResetPredefinedKey</a> () const</td></tr>
<tr class="separator:a6ba3c28b9b253b801376e3866ac12ddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501f245eed195a7868c987d9f276b7a8" id="r_a501f245eed195a7868c987d9f276b7a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a501f245eed195a7868c987d9f276b7a8">CreateKey</a> (const char *theSubKey) const</td></tr>
<tr class="separator:a501f245eed195a7868c987d9f276b7a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14ca6b8ca3f63f34182f179440b04f65" id="r_a14ca6b8ca3f63f34182f179440b04f65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a14ca6b8ca3f63f34182f179440b04f65">CreateKey</a> (const wchar_t *theSubKey) const</td></tr>
<tr class="separator:a14ca6b8ca3f63f34182f179440b04f65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae251840c5384cd186db7aeef1ba21d55" id="r_ae251840c5384cd186db7aeef1ba21d55"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae251840c5384cd186db7aeef1ba21d55">CreateKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey) const</td></tr>
<tr class="separator:ae251840c5384cd186db7aeef1ba21d55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a935ad160c5a1e396391b7bbad4f60619" id="r_a935ad160c5a1e396391b7bbad4f60619"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a935ad160c5a1e396391b7bbad4f60619">CreateKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey) const</td></tr>
<tr class="separator:a935ad160c5a1e396391b7bbad4f60619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99fb02937deb883202a5efaf4a87278f" id="r_a99fb02937deb883202a5efaf4a87278f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a99fb02937deb883202a5efaf4a87278f">CreateKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated) const</td></tr>
<tr class="separator:a99fb02937deb883202a5efaf4a87278f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f181e9663ee40fae113b0b176bffa85" id="r_a9f181e9663ee40fae113b0b176bffa85"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9f181e9663ee40fae113b0b176bffa85">CreateKey</a> (const char *theSubKey, const char *theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated) const</td></tr>
<tr class="separator:a9f181e9663ee40fae113b0b176bffa85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea53467a0ee7a299b8347c6904597d54" id="r_aea53467a0ee7a299b8347c6904597d54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aea53467a0ee7a299b8347c6904597d54">CreateKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated) const</td></tr>
<tr class="separator:aea53467a0ee7a299b8347c6904597d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae2eda8870fc20755272ba4b3f57edca" id="r_aae2eda8870fc20755272ba4b3f57edca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aae2eda8870fc20755272ba4b3f57edca">CreateKey</a> (const wchar_t *theSubKey, const wchar_t *theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated) const</td></tr>
<tr class="separator:aae2eda8870fc20755272ba4b3f57edca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae62b418ede78caffc76c6594aee3b029" id="r_ae62b418ede78caffc76c6594aee3b029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae62b418ede78caffc76c6594aee3b029">CreateKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated, HANDLE hTransaction) const</td></tr>
<tr class="separator:ae62b418ede78caffc76c6594aee3b029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a01877785d2685515bf2c3782052a33" id="r_a5a01877785d2685515bf2c3782052a33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5a01877785d2685515bf2c3782052a33">CreateKey</a> (const char *theSubKey, const char *theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated, HANDLE hTransaction) const</td></tr>
<tr class="separator:a5a01877785d2685515bf2c3782052a33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d62e63807e4a72e7544703ff06a7bcf" id="r_a4d62e63807e4a72e7544703ff06a7bcf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d62e63807e4a72e7544703ff06a7bcf">CreateKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated, HANDLE hTransaction) const</td></tr>
<tr class="separator:a4d62e63807e4a72e7544703ff06a7bcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44edd1770c7be3100fad6d239231788d" id="r_a44edd1770c7be3100fad6d239231788d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a44edd1770c7be3100fad6d239231788d">CreateKey</a> (const wchar_t *theSubKey, const wchar_t *theClass, DWORD theOptions, REGSAM desiredAccess, LPSECURITY_ATTRIBUTES theSecurityAttributes, bool &amp;keyWasCreated, HANDLE hTransaction) const</td></tr>
<tr class="separator:a44edd1770c7be3100fad6d239231788d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc691781b7646a52065d7710a03c643" id="r_aacc691781b7646a52065d7710a03c643"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aacc691781b7646a52065d7710a03c643">DeleteKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey) const</td></tr>
<tr class="separator:aacc691781b7646a52065d7710a03c643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7875e580c2995d4605d91802ea34d665" id="r_a7875e580c2995d4605d91802ea34d665"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7875e580c2995d4605d91802ea34d665">DeleteKey</a> (const char *theSubKey) const</td></tr>
<tr class="separator:a7875e580c2995d4605d91802ea34d665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8a8d3a905508372719e6730105f64fb" id="r_af8a8d3a905508372719e6730105f64fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af8a8d3a905508372719e6730105f64fb">DeleteKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey) const</td></tr>
<tr class="separator:af8a8d3a905508372719e6730105f64fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a627c6b1dc3699203d0cc530f320344ab" id="r_a627c6b1dc3699203d0cc530f320344ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a627c6b1dc3699203d0cc530f320344ab">DeleteKey</a> (const wchar_t *theSubKey) const</td></tr>
<tr class="separator:a627c6b1dc3699203d0cc530f320344ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8a04e648d044d69845988dd71598ae8" id="r_ac8a04e648d044d69845988dd71598ae8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac8a04e648d044d69845988dd71598ae8">DeleteKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, REGSAM desiredRegistryView) const</td></tr>
<tr class="separator:ac8a04e648d044d69845988dd71598ae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1187aa94de877a6e5b62e0b1e80b3200" id="r_a1187aa94de877a6e5b62e0b1e80b3200"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1187aa94de877a6e5b62e0b1e80b3200">DeleteKey</a> (const char *theSubKey, REGSAM desiredRegistryView) const</td></tr>
<tr class="separator:a1187aa94de877a6e5b62e0b1e80b3200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26deada471d6c4932be48afc611312e4" id="r_a26deada471d6c4932be48afc611312e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a26deada471d6c4932be48afc611312e4">DeleteKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, REGSAM desiredRegistryView) const</td></tr>
<tr class="separator:a26deada471d6c4932be48afc611312e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00f380529446da1fbe3c5e689a45f8e8" id="r_a00f380529446da1fbe3c5e689a45f8e8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a00f380529446da1fbe3c5e689a45f8e8">DeleteKey</a> (const wchar_t *theSubKey, REGSAM desiredRegistryView) const</td></tr>
<tr class="separator:a00f380529446da1fbe3c5e689a45f8e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af76f62c6661d0a72225416731a0d669d" id="r_af76f62c6661d0a72225416731a0d669d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af76f62c6661d0a72225416731a0d669d">DeleteKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, REGSAM desiredRegistryView, HANDLE hTransaction) const</td></tr>
<tr class="separator:af76f62c6661d0a72225416731a0d669d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb05c200b2032899877cfd86d37ac463" id="r_acb05c200b2032899877cfd86d37ac463"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb05c200b2032899877cfd86d37ac463">DeleteKey</a> (const char *theSubKey, REGSAM desiredRegistryView, HANDLE hTransaction) const</td></tr>
<tr class="separator:acb05c200b2032899877cfd86d37ac463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9d5e79adb408316dfb6c49e50407426" id="r_aa9d5e79adb408316dfb6c49e50407426"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa9d5e79adb408316dfb6c49e50407426">DeleteKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, REGSAM desiredRegistryView, HANDLE hTransaction) const</td></tr>
<tr class="separator:aa9d5e79adb408316dfb6c49e50407426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14499aefedda6f050af1cb57017ea01c" id="r_a14499aefedda6f050af1cb57017ea01c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a14499aefedda6f050af1cb57017ea01c">DeleteKey</a> (const wchar_t *theSubKey, REGSAM desiredRegistryView, HANDLE hTransaction) const</td></tr>
<tr class="separator:a14499aefedda6f050af1cb57017ea01c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95f51b785d65ed611710d6a2b8eb1285" id="r_a95f51b785d65ed611710d6a2b8eb1285"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a95f51b785d65ed611710d6a2b8eb1285">DeleteKeyValue</a> () const</td></tr>
<tr class="separator:a95f51b785d65ed611710d6a2b8eb1285"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1893eb58fedb896ba9d20dc40060769c" id="r_a1893eb58fedb896ba9d20dc40060769c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1893eb58fedb896ba9d20dc40060769c">DeleteKeyValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theValueName) const</td></tr>
<tr class="separator:a1893eb58fedb896ba9d20dc40060769c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d48314ca6e0607f5fcbcedb3f6ed03e" id="r_a4d48314ca6e0607f5fcbcedb3f6ed03e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d48314ca6e0607f5fcbcedb3f6ed03e">DeleteKeyValue</a> (const char *theValueName) const</td></tr>
<tr class="separator:a4d48314ca6e0607f5fcbcedb3f6ed03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa189ff2ce5a49214b20b937b1f79fcc2" id="r_aa189ff2ce5a49214b20b937b1f79fcc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa189ff2ce5a49214b20b937b1f79fcc2">DeleteKeyValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theValueName) const</td></tr>
<tr class="separator:aa189ff2ce5a49214b20b937b1f79fcc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8740a6c40bcce3f9256b11c272dd26a" id="r_ae8740a6c40bcce3f9256b11c272dd26a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8740a6c40bcce3f9256b11c272dd26a">DeleteKeyValue</a> (const char *theSubKey, const char *theValueName) const</td></tr>
<tr class="separator:ae8740a6c40bcce3f9256b11c272dd26a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad40056b9b39d465a8aa72eaae0461738" id="r_ad40056b9b39d465a8aa72eaae0461738"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad40056b9b39d465a8aa72eaae0461738">DeleteKeyValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theValueName) const</td></tr>
<tr class="separator:ad40056b9b39d465a8aa72eaae0461738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac36b995a9a0ca1e9c2e2f71c6f2156a" id="r_aac36b995a9a0ca1e9c2e2f71c6f2156a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac36b995a9a0ca1e9c2e2f71c6f2156a">DeleteKeyValue</a> (const wchar_t *theValueName) const</td></tr>
<tr class="separator:aac36b995a9a0ca1e9c2e2f71c6f2156a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae03047dad36302a152808dbda61fbcfe" id="r_ae03047dad36302a152808dbda61fbcfe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae03047dad36302a152808dbda61fbcfe">DeleteKeyValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theValueName) const</td></tr>
<tr class="separator:ae03047dad36302a152808dbda61fbcfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabb58d98d6e2c774bb0cc05ef9fd455b" id="r_aabb58d98d6e2c774bb0cc05ef9fd455b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aabb58d98d6e2c774bb0cc05ef9fd455b">DeleteKeyValue</a> (const wchar_t *theSubKey, const wchar_t *theValueName) const</td></tr>
<tr class="separator:aabb58d98d6e2c774bb0cc05ef9fd455b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2819a184b493ec91624463e4abb2dfce" id="r_a2819a184b493ec91624463e4abb2dfce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2819a184b493ec91624463e4abb2dfce">DisableReflectionKey</a> () const</td></tr>
<tr class="separator:a2819a184b493ec91624463e4abb2dfce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39e023dcb3d2d2ff2fd2388befd9b2fb" id="r_a39e023dcb3d2d2ff2fd2388befd9b2fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a39e023dcb3d2d2ff2fd2388befd9b2fb">EnableReflectionKey</a> () const</td></tr>
<tr class="separator:a39e023dcb3d2d2ff2fd2388befd9b2fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a885d85b81141159b0411370a42c93cf5" id="r_a885d85b81141159b0411370a42c93cf5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a885d85b81141159b0411370a42c93cf5">QueryReflectionKey</a> () const</td></tr>
<tr class="separator:a885d85b81141159b0411370a42c93cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a731576bf704477acc55ad187d0635c75" id="r_a731576bf704477acc55ad187d0635c75"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a731576bf704477acc55ad187d0635c75">IsReflectionDisabled</a> () const</td></tr>
<tr class="separator:a731576bf704477acc55ad187d0635c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec7092ac4686816953a5a75236a87c8a" id="r_aec7092ac4686816953a5a75236a87c8a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec7092ac4686816953a5a75236a87c8a">IsReflectionEnabled</a> () const</td></tr>
<tr class="separator:aec7092ac4686816953a5a75236a87c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38a822eefa973174f5aad513d1a9634e" id="r_a38a822eefa973174f5aad513d1a9634e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a38a822eefa973174f5aad513d1a9634e">DeleteValue</a> () const</td></tr>
<tr class="separator:a38a822eefa973174f5aad513d1a9634e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d27b18fb762ca51126a6641b1d1fe7f" id="r_a9d27b18fb762ca51126a6641b1d1fe7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9d27b18fb762ca51126a6641b1d1fe7f">DeleteValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theValueName) const</td></tr>
<tr class="separator:a9d27b18fb762ca51126a6641b1d1fe7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac59cac3b443a24598978e0449b517a26" id="r_ac59cac3b443a24598978e0449b517a26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac59cac3b443a24598978e0449b517a26">DeleteValue</a> (const char *theValueName) const</td></tr>
<tr class="separator:ac59cac3b443a24598978e0449b517a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3e698085970983f771b3cb38047d5d" id="r_a8a3e698085970983f771b3cb38047d5d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a3e698085970983f771b3cb38047d5d">DeleteValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theValueName) const</td></tr>
<tr class="separator:a8a3e698085970983f771b3cb38047d5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afae4a17a3ed88e046299fd57db7001f5" id="r_afae4a17a3ed88e046299fd57db7001f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afae4a17a3ed88e046299fd57db7001f5">DeleteValue</a> (const wchar_t *theValueName) const</td></tr>
<tr class="separator:afae4a17a3ed88e046299fd57db7001f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2d7fe8ac475c86b08d2079f6cc25a31" id="r_ac2d7fe8ac475c86b08d2079f6cc25a31"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2d7fe8ac475c86b08d2079f6cc25a31">EnumKey</a> (DWORD theIndex, char *theNameBuffer, DWORD &amp;theSizeOfTheNameBuffer, char *theClassNameBuffer, DWORD &amp;theSizeOfTheClassNameBuffer, FILETIME &amp;theLastWriteTime) const</td></tr>
<tr class="separator:ac2d7fe8ac475c86b08d2079f6cc25a31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a3d285a9c7123faa280bc520b888e39" id="r_a3a3d285a9c7123faa280bc520b888e39"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a3d285a9c7123faa280bc520b888e39">EnumKey</a> (DWORD theIndex, char *theNameBuffer, DWORD &amp;theSizeOfTheNameBuffer, FILETIME &amp;theLastWriteTime) const</td></tr>
<tr class="separator:a3a3d285a9c7123faa280bc520b888e39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abacb16180d7531a047cf9cf87365b3d0" id="r_abacb16180d7531a047cf9cf87365b3d0"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abacb16180d7531a047cf9cf87365b3d0">EnumKey</a> (DWORD theIndex, wchar_t *theNameBuffer, DWORD &amp;theSizeOfTheNameBuffer, wchar_t *theClassNameBuffer, DWORD &amp;theSizeOfTheClassNameBuffer, FILETIME &amp;theLastWriteTime) const</td></tr>
<tr class="separator:abacb16180d7531a047cf9cf87365b3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a575a1c6eae1b0e6c84db47a98178e42d" id="r_a575a1c6eae1b0e6c84db47a98178e42d"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a575a1c6eae1b0e6c84db47a98178e42d">EnumKey</a> (DWORD theIndex, wchar_t *theNameBuffer, DWORD &amp;theSizeOfTheNameBuffer, FILETIME &amp;theLastWriteTime) const</td></tr>
<tr class="separator:a575a1c6eae1b0e6c84db47a98178e42d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01826746746d396a9454d8592605bc32" id="r_a01826746746d396a9454d8592605bc32"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a01826746746d396a9454d8592605bc32">EnumKeyNames</a> (std::vector&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &gt; &amp;result) const</td></tr>
<tr class="separator:a01826746746d396a9454d8592605bc32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a020c0488f56125548f7e93fe6aa14c5a" id="r_a020c0488f56125548f7e93fe6aa14c5a"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a020c0488f56125548f7e93fe6aa14c5a">EnumKeyNames</a> (std::vector&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &gt; &amp;result) const</td></tr>
<tr class="separator:a020c0488f56125548f7e93fe6aa14c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97c0a9f717e658e0aa09aa60bb2e774" id="r_aa97c0a9f717e658e0aa09aa60bb2e774"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa97c0a9f717e658e0aa09aa60bb2e774">EnumValue</a> (DWORD theIndex, char *theNameBuffer, DWORD &amp;theSizeOfTheNameBuffer, DWORD &amp;theType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:aa97c0a9f717e658e0aa09aa60bb2e774"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca43c3d6c08aa63c8e7ebff3c209a32" id="r_a9ca43c3d6c08aa63c8e7ebff3c209a32"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ca43c3d6c08aa63c8e7ebff3c209a32">EnumValue</a> (DWORD theIndex, wchar_t *theNameBuffer, DWORD &amp;theSizeOfTheNameBuffer, DWORD &amp;theType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:a9ca43c3d6c08aa63c8e7ebff3c209a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1587eb84e35b22f4a1e5ed1a3b3efa4" id="r_af1587eb84e35b22f4a1e5ed1a3b3efa4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af1587eb84e35b22f4a1e5ed1a3b3efa4">FlushKey</a> ()</td></tr>
<tr class="separator:af1587eb84e35b22f4a1e5ed1a3b3efa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5588ee4808bbc2ebeb2f95e9c31a54d" id="r_af5588ee4808bbc2ebeb2f95e9c31a54d"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af5588ee4808bbc2ebeb2f95e9c31a54d">GetKeySecurity</a> (SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR theSecurityDescriptor, DWORD &amp;theSizeOfTheSecurityDescriptor) const</td></tr>
<tr class="separator:af5588ee4808bbc2ebeb2f95e9c31a54d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f589e6f62f48353fdea6dfeda1be7a1" id="r_a7f589e6f62f48353fdea6dfeda1be7a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7f589e6f62f48353fdea6dfeda1be7a1">LoadKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theFilename) const</td></tr>
<tr class="separator:a7f589e6f62f48353fdea6dfeda1be7a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a272d0eb3442e084ba38ce3317360c34f" id="r_a272d0eb3442e084ba38ce3317360c34f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a272d0eb3442e084ba38ce3317360c34f">LoadKey</a> (const char *theSubKey, const char *theFilename) const</td></tr>
<tr class="separator:a272d0eb3442e084ba38ce3317360c34f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22bd00f7ffae5b18046f82cc6daf8fea" id="r_a22bd00f7ffae5b18046f82cc6daf8fea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22bd00f7ffae5b18046f82cc6daf8fea">LoadKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theFilename) const</td></tr>
<tr class="separator:a22bd00f7ffae5b18046f82cc6daf8fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5e11bdb170c9b011c0449a8e6cbe6a5" id="r_ac5e11bdb170c9b011c0449a8e6cbe6a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac5e11bdb170c9b011c0449a8e6cbe6a5">LoadKey</a> (const char *theFilename) const</td></tr>
<tr class="separator:ac5e11bdb170c9b011c0449a8e6cbe6a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74820e6ee9ae14e52b3c6af3384f700e" id="r_a74820e6ee9ae14e52b3c6af3384f700e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a74820e6ee9ae14e52b3c6af3384f700e">LoadKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theFilename) const</td></tr>
<tr class="separator:a74820e6ee9ae14e52b3c6af3384f700e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae482b0050fbd766ff389619ba11a3ef1" id="r_ae482b0050fbd766ff389619ba11a3ef1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae482b0050fbd766ff389619ba11a3ef1">LoadKey</a> (const wchar_t *theSubKey, const wchar_t *theFilename) const</td></tr>
<tr class="separator:ae482b0050fbd766ff389619ba11a3ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4532299743f5e23063745ba4e9e88996" id="r_a4532299743f5e23063745ba4e9e88996"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4532299743f5e23063745ba4e9e88996">LoadKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theFilename) const</td></tr>
<tr class="separator:a4532299743f5e23063745ba4e9e88996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a944110e5fea3fee2bfe8584e38b13c59" id="r_a944110e5fea3fee2bfe8584e38b13c59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a944110e5fea3fee2bfe8584e38b13c59">LoadKey</a> (const wchar_t *theFilename) const</td></tr>
<tr class="separator:a944110e5fea3fee2bfe8584e38b13c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fb0d6d3a758eac7d150ebaadf9cc71c" id="r_a1fb0d6d3a758eac7d150ebaadf9cc71c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1fb0d6d3a758eac7d150ebaadf9cc71c">NotifyChangeKeyValue</a> (bool watchSubtree, DWORD dwNotifyFilter, HANDLE hEvent, bool asynchronous) const</td></tr>
<tr class="separator:a1fb0d6d3a758eac7d150ebaadf9cc71c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff6c15eee6d6b418e5c9cdf9536c9111" id="r_aff6c15eee6d6b418e5c9cdf9536c9111"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aff6c15eee6d6b418e5c9cdf9536c9111">KeyExists</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey) const</td></tr>
<tr class="separator:aff6c15eee6d6b418e5c9cdf9536c9111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff116f7e423560267b9248cb936dfc9" id="r_acff116f7e423560267b9248cb936dfc9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acff116f7e423560267b9248cb936dfc9">KeyExists</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey) const</td></tr>
<tr class="separator:acff116f7e423560267b9248cb936dfc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab93a34df9d5b008104be84d6135d1b78" id="r_ab93a34df9d5b008104be84d6135d1b78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab93a34df9d5b008104be84d6135d1b78">OpenKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, REGSAM desiredAccess) const</td></tr>
<tr class="separator:ab93a34df9d5b008104be84d6135d1b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca42bd96ffb4ed8656eec8b897b2ffe" id="r_aeca42bd96ffb4ed8656eec8b897b2ffe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeca42bd96ffb4ed8656eec8b897b2ffe">OpenKey</a> (const char *theSubKey, REGSAM desiredAccess) const</td></tr>
<tr class="separator:aeca42bd96ffb4ed8656eec8b897b2ffe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ae5b1b1047157ac9d02eabf719d3ba6" id="r_a5ae5b1b1047157ac9d02eabf719d3ba6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ae5b1b1047157ac9d02eabf719d3ba6">OpenKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, REGSAM desiredAccess) const</td></tr>
<tr class="separator:a5ae5b1b1047157ac9d02eabf719d3ba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70e4f6514956eea0649861462399423" id="r_af70e4f6514956eea0649861462399423"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af70e4f6514956eea0649861462399423">OpenKey</a> (const wchar_t *theSubKey, REGSAM desiredAccess) const</td></tr>
<tr class="separator:af70e4f6514956eea0649861462399423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b5c89a19ef201f47b7df1a4b5cf09f8" id="r_a0b5c89a19ef201f47b7df1a4b5cf09f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b5c89a19ef201f47b7df1a4b5cf09f8">OpenKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, REGSAM desiredAccess, HANDLE hTransaction) const</td></tr>
<tr class="separator:a0b5c89a19ef201f47b7df1a4b5cf09f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3204ca5488987be2f6dc8db177dd02ef" id="r_a3204ca5488987be2f6dc8db177dd02ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3204ca5488987be2f6dc8db177dd02ef">OpenKey</a> (const char *theSubKey, REGSAM desiredAccess, HANDLE hTransaction) const</td></tr>
<tr class="separator:a3204ca5488987be2f6dc8db177dd02ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2e84184aaaa70f0a18201b081c0d41d" id="r_ac2e84184aaaa70f0a18201b081c0d41d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2e84184aaaa70f0a18201b081c0d41d">OpenKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, REGSAM desiredAccess, HANDLE hTransaction) const</td></tr>
<tr class="separator:ac2e84184aaaa70f0a18201b081c0d41d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6deee30a32edc239ad6f481c2fa11136" id="r_a6deee30a32edc239ad6f481c2fa11136"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6deee30a32edc239ad6f481c2fa11136">OpenKey</a> (const wchar_t *theSubKey, REGSAM desiredAccess, HANDLE hTransaction) const</td></tr>
<tr class="separator:a6deee30a32edc239ad6f481c2fa11136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad53a85886e3802e6d6325cac81218282" id="r_ad53a85886e3802e6d6325cac81218282"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad53a85886e3802e6d6325cac81218282">QueryInfoKey</a> (char *theClassNameBuffer, DWORD &amp;theSizeOfTheClassNameBuffer, DWORD &amp;theNumberOfSubKeys, DWORD &amp;theMaxSubKeyLen, DWORD &amp;theMaxClassLen, DWORD &amp;theNumberOfValues, DWORD &amp;theMaxValueNameLen, DWORD &amp;theMaxValueLen, DWORD &amp;theSecurityDescriptorSize, FILETIME &amp;theLastWriteTime) const</td></tr>
<tr class="separator:ad53a85886e3802e6d6325cac81218282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab11ca86f9ead6739f2941725ab3059f5" id="r_ab11ca86f9ead6739f2941725ab3059f5"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab11ca86f9ead6739f2941725ab3059f5">QueryInfoKey</a> (char *theClassNameBuffer, DWORD *theSizeOfTheClassNameBuffer, DWORD *theNumberOfSubKeys, DWORD *theMaxSubKeyLen, DWORD *theMaxClassLen, DWORD *theNumberOfValues, DWORD *theMaxValueNameLen, DWORD *theMaxValueLen, DWORD *theSecurityDescriptorSize, FILETIME *theLastWriteTime) const</td></tr>
<tr class="separator:ab11ca86f9ead6739f2941725ab3059f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61ccf0b61dc9d30f34bc79034649e12a" id="r_a61ccf0b61dc9d30f34bc79034649e12a"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61ccf0b61dc9d30f34bc79034649e12a">QueryInfoKey</a> (wchar_t *theClassNameBuffer, DWORD &amp;theSizeOfTheClassNameBuffer, DWORD &amp;theNumberOfSubKeys, DWORD &amp;theMaxSubKeyLen, DWORD &amp;theMaxClassLen, DWORD &amp;theNumberOfValues, DWORD &amp;theMaxValueNameLen, DWORD &amp;theMaxValueLen, DWORD &amp;theSecurityDescriptorSize, FILETIME &amp;theLastWriteTime) const</td></tr>
<tr class="separator:a61ccf0b61dc9d30f34bc79034649e12a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a346577feb728cc2a2aeb15d8ec22f083" id="r_a346577feb728cc2a2aeb15d8ec22f083"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a346577feb728cc2a2aeb15d8ec22f083">QueryInfoKey</a> (wchar_t *theClassNameBuffer, DWORD *theSizeOfTheClassNameBuffer, DWORD *theNumberOfSubKeys, DWORD *theMaxSubKeyLen, DWORD *theMaxClassLen, DWORD *theNumberOfValues, DWORD *theMaxValueNameLen, DWORD *theMaxValueLen, DWORD *theSecurityDescriptorSize, FILETIME *theLastWriteTime) const</td></tr>
<tr class="separator:a346577feb728cc2a2aeb15d8ec22f083"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1370f95b9406b0dfa3574b30bc5cb10c" id="r_a1370f95b9406b0dfa3574b30bc5cb10c"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1370f95b9406b0dfa3574b30bc5cb10c">QueryMultipleValues</a> (PVALENTA theValueList, DWORD theNumberOfEntriesInTheValueList, char *theBuffer, DWORD &amp;theBufferSize) const</td></tr>
<tr class="separator:a1370f95b9406b0dfa3574b30bc5cb10c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2d2b916609ccf93e5bedbd395a864d1" id="r_ac2d2b916609ccf93e5bedbd395a864d1"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2d2b916609ccf93e5bedbd395a864d1">QueryMultipleValues</a> (PVALENTW theValueList, DWORD theNumberOfEntriesInTheValueList, wchar_t *theBuffer, DWORD &amp;theBufferSize) const</td></tr>
<tr class="separator:ac2d2b916609ccf93e5bedbd395a864d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1747403f1a3c2885a8ce6fd12b00fc" id="r_a2b1747403f1a3c2885a8ce6fd12b00fc"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2b1747403f1a3c2885a8ce6fd12b00fc">QueryValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theValueName, DWORD &amp;theValueType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:a2b1747403f1a3c2885a8ce6fd12b00fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a348bf088ad2f3f88ef48555b0f86a9af" id="r_a348bf088ad2f3f88ef48555b0f86a9af"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a348bf088ad2f3f88ef48555b0f86a9af">QueryValue</a> (const char *theValueName, DWORD &amp;theValueType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:a348bf088ad2f3f88ef48555b0f86a9af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cf902e52d419187c7d7fc135b948e56" id="r_a8cf902e52d419187c7d7fc135b948e56"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8cf902e52d419187c7d7fc135b948e56">QueryValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theValueName, DWORD &amp;theValueType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:a8cf902e52d419187c7d7fc135b948e56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b72db5370343607e7fdab77de5b989f" id="r_a7b72db5370343607e7fdab77de5b989f"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b72db5370343607e7fdab77de5b989f">QueryValue</a> (const wchar_t *theValueName, DWORD &amp;theValueType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:a7b72db5370343607e7fdab77de5b989f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ebe99d3c5c471619cfa25090ade299c" id="r_a1ebe99d3c5c471619cfa25090ade299c"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ebe99d3c5c471619cfa25090ade299c">QueryValue</a> (DWORD &amp;theValueType, void *theDataBuffer, DWORD &amp;theSizeOfTheDataBuffer) const</td></tr>
<tr class="separator:a1ebe99d3c5c471619cfa25090ade299c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89ae0c3d1bd394353d7dacc1cb95216" id="r_aa89ae0c3d1bd394353d7dacc1cb95216"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa89ae0c3d1bd394353d7dacc1cb95216">ReadValue</a> (const wchar_t *theValueName, DWORD &amp;theValueType, std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:aa89ae0c3d1bd394353d7dacc1cb95216"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a958380ef0b227b6fb031d37a3cea4c9a" id="r_a958380ef0b227b6fb031d37a3cea4c9a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a958380ef0b227b6fb031d37a3cea4c9a">ReadBoolean</a> (const wchar_t *theValueName, bool &amp;theResult) const</td></tr>
<tr class="separator:a958380ef0b227b6fb031d37a3cea4c9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3831fe3064b266ea2367a861304411a" id="r_aa3831fe3064b266ea2367a861304411a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa3831fe3064b266ea2367a861304411a">ReadSByte</a> (const wchar_t *theValueName, char &amp;theResult) const</td></tr>
<tr class="separator:aa3831fe3064b266ea2367a861304411a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a335b87ba7bd5bbeb288074b9cf6df3cc" id="r_a335b87ba7bd5bbeb288074b9cf6df3cc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a335b87ba7bd5bbeb288074b9cf6df3cc">ReadByte</a> (const wchar_t *theValueName, unsigned char &amp;theResult) const</td></tr>
<tr class="separator:a335b87ba7bd5bbeb288074b9cf6df3cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9a00c2860535540f1f76148b7027899" id="r_ac9a00c2860535540f1f76148b7027899"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9a00c2860535540f1f76148b7027899">ReadInt16</a> (const wchar_t *theValueName, short &amp;theResult) const</td></tr>
<tr class="separator:ac9a00c2860535540f1f76148b7027899"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8d7f149c315cef5429ac36305ed6eb2" id="r_aa8d7f149c315cef5429ac36305ed6eb2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa8d7f149c315cef5429ac36305ed6eb2">ReadUInt16</a> (const wchar_t *theValueName, unsigned short &amp;theResult) const</td></tr>
<tr class="separator:aa8d7f149c315cef5429ac36305ed6eb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf6b9087923accdfe016e3dab6544b3e" id="r_adf6b9087923accdfe016e3dab6544b3e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adf6b9087923accdfe016e3dab6544b3e">ReadInt32</a> (const wchar_t *theValueName, int &amp;theResult) const</td></tr>
<tr class="separator:adf6b9087923accdfe016e3dab6544b3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fb05a3f72a8dd3c3cc6b6e65452b11d" id="r_a9fb05a3f72a8dd3c3cc6b6e65452b11d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9fb05a3f72a8dd3c3cc6b6e65452b11d">ReadUInt32</a> (const wchar_t *theValueName, unsigned int &amp;theResult) const</td></tr>
<tr class="separator:a9fb05a3f72a8dd3c3cc6b6e65452b11d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c80d5eec1ae4eae8db38b6617d8757f" id="r_a9c80d5eec1ae4eae8db38b6617d8757f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c80d5eec1ae4eae8db38b6617d8757f">ReadInt64</a> (const wchar_t *theValueName, long long &amp;theResult) const</td></tr>
<tr class="separator:a9c80d5eec1ae4eae8db38b6617d8757f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2d84f42bb3128773c6f9e45e382166" id="r_a0f2d84f42bb3128773c6f9e45e382166"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0f2d84f42bb3128773c6f9e45e382166">ReadUInt64</a> (const wchar_t *theValueName, unsigned long long &amp;theResult) const</td></tr>
<tr class="separator:a0f2d84f42bb3128773c6f9e45e382166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fac75db77ecd6101d7531aef8244432" id="r_a9fac75db77ecd6101d7531aef8244432"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9fac75db77ecd6101d7531aef8244432">ReadSingle</a> (const wchar_t *theValueName, float &amp;theResult) const</td></tr>
<tr class="separator:a9fac75db77ecd6101d7531aef8244432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a767e216d6e318030f4112060e47fb7" id="r_a3a767e216d6e318030f4112060e47fb7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a767e216d6e318030f4112060e47fb7">ReadDouble</a> (const wchar_t *theValueName, double &amp;theResult) const</td></tr>
<tr class="separator:a3a767e216d6e318030f4112060e47fb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80fcae52ebd22f86ac89cce6cb8afc38" id="r_a80fcae52ebd22f86ac89cce6cb8afc38"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a80fcae52ebd22f86ac89cce6cb8afc38">ReadString</a> (const wchar_t *theValueName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theResult) const</td></tr>
<tr class="separator:a80fcae52ebd22f86ac89cce6cb8afc38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0594be726675d72b7888596a45fd3f26" id="r_a0594be726675d72b7888596a45fd3f26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0594be726675d72b7888596a45fd3f26">ReplaceKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;newFile, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;oldFile) const</td></tr>
<tr class="separator:a0594be726675d72b7888596a45fd3f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc4357c1724ab730d4814b8b43dde071" id="r_acc4357c1724ab730d4814b8b43dde071"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acc4357c1724ab730d4814b8b43dde071">ReplaceKey</a> (const char *theSubKey, const char *newFile, const char *oldFile) const</td></tr>
<tr class="separator:acc4357c1724ab730d4814b8b43dde071"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a12edfe1da83b5d590f75780bb8c430" id="r_a9a12edfe1da83b5d590f75780bb8c430"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a12edfe1da83b5d590f75780bb8c430">ReplaceKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;newFile, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;oldFile) const</td></tr>
<tr class="separator:a9a12edfe1da83b5d590f75780bb8c430"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6086ee85fd273ecb9c98dbc9955c769" id="r_ae6086ee85fd273ecb9c98dbc9955c769"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6086ee85fd273ecb9c98dbc9955c769">ReplaceKey</a> (const char *newFile, const char *oldFile) const</td></tr>
<tr class="separator:ae6086ee85fd273ecb9c98dbc9955c769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e680e62fe0eab26a8016daa5993f2cb" id="r_a9e680e62fe0eab26a8016daa5993f2cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9e680e62fe0eab26a8016daa5993f2cb">ReplaceKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theSubKey, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;newFile, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;oldFile) const</td></tr>
<tr class="separator:a9e680e62fe0eab26a8016daa5993f2cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3274303a2e99827dcc44326a2764aef" id="r_ae3274303a2e99827dcc44326a2764aef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae3274303a2e99827dcc44326a2764aef">ReplaceKey</a> (const wchar_t *theSubKey, const wchar_t *newFile, const wchar_t *oldFile) const</td></tr>
<tr class="separator:ae3274303a2e99827dcc44326a2764aef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c50e0f5f3fdbe35e3ac3d903ceb2cef" id="r_a3c50e0f5f3fdbe35e3ac3d903ceb2cef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c50e0f5f3fdbe35e3ac3d903ceb2cef">ReplaceKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;newFile, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;oldFile) const</td></tr>
<tr class="separator:a3c50e0f5f3fdbe35e3ac3d903ceb2cef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a789ea3b96daa1b7aed719a53c16d7255" id="r_a789ea3b96daa1b7aed719a53c16d7255"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a789ea3b96daa1b7aed719a53c16d7255">ReplaceKey</a> (const wchar_t *newFile, const wchar_t *oldFile) const</td></tr>
<tr class="separator:a789ea3b96daa1b7aed719a53c16d7255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa66e9da756df1fe85972ab33c9006449" id="r_aa66e9da756df1fe85972ab33c9006449"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa66e9da756df1fe85972ab33c9006449">RestoreKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;oldFile, DWORD theFlags) const</td></tr>
<tr class="separator:aa66e9da756df1fe85972ab33c9006449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3586723d2c5662dff55a5aa9820aa2c6" id="r_a3586723d2c5662dff55a5aa9820aa2c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3586723d2c5662dff55a5aa9820aa2c6">RestoreKey</a> (const char *oldFile, DWORD theFlags) const</td></tr>
<tr class="separator:a3586723d2c5662dff55a5aa9820aa2c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e4bab204b0c4667e8fb189fd2816ccb" id="r_a8e4bab204b0c4667e8fb189fd2816ccb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8e4bab204b0c4667e8fb189fd2816ccb">RestoreKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;oldFile, DWORD theFlags) const</td></tr>
<tr class="separator:a8e4bab204b0c4667e8fb189fd2816ccb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d6cda7a79e53d473342cd708519ffc4" id="r_a0d6cda7a79e53d473342cd708519ffc4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d6cda7a79e53d473342cd708519ffc4">RestoreKey</a> (const wchar_t *oldFile, DWORD theFlags) const</td></tr>
<tr class="separator:a0d6cda7a79e53d473342cd708519ffc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7089fb32eeaf24f4be7697eb374a015c" id="r_a7089fb32eeaf24f4be7697eb374a015c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7089fb32eeaf24f4be7697eb374a015c">RenameKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;oldSubKeyName, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;newSubKeyName) const</td></tr>
<tr class="separator:a7089fb32eeaf24f4be7697eb374a015c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ead5e726b0eb64dfc6ae2e74e687597" id="r_a5ead5e726b0eb64dfc6ae2e74e687597"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ead5e726b0eb64dfc6ae2e74e687597">RenameKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;oldSubKeyName, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;newSubKeyName) const</td></tr>
<tr class="separator:a5ead5e726b0eb64dfc6ae2e74e687597"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a920f5d74064ce365b40f05e5ffc5c133" id="r_a920f5d74064ce365b40f05e5ffc5c133"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a920f5d74064ce365b40f05e5ffc5c133">RenameKey</a> (const wchar_t *oldSubKeyName, const wchar_t *newSubKeyName) const</td></tr>
<tr class="separator:a920f5d74064ce365b40f05e5ffc5c133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad4b3cfcceda7a6cff4a716e96d6156" id="r_a2ad4b3cfcceda7a6cff4a716e96d6156"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2ad4b3cfcceda7a6cff4a716e96d6156">SaveKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theFilename, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:a2ad4b3cfcceda7a6cff4a716e96d6156"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21cd990d12d6f2d5c9765e19db3f3e65" id="r_a21cd990d12d6f2d5c9765e19db3f3e65"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21cd990d12d6f2d5c9765e19db3f3e65">SaveKey</a> (const char *theFilename, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:a21cd990d12d6f2d5c9765e19db3f3e65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cba60c701efff07d248f8f019a17a26" id="r_a1cba60c701efff07d248f8f019a17a26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1cba60c701efff07d248f8f019a17a26">SaveKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theFilename, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:a1cba60c701efff07d248f8f019a17a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3120985878f2819aa993db120982cac" id="r_af3120985878f2819aa993db120982cac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af3120985878f2819aa993db120982cac">SaveKey</a> (const wchar_t *theFilename, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:af3120985878f2819aa993db120982cac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae15ebeeab5f1352a5699f307ebe9d0ac" id="r_ae15ebeeab5f1352a5699f307ebe9d0ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae15ebeeab5f1352a5699f307ebe9d0ac">SaveKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theFilename, DWORD theFlags, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:ae15ebeeab5f1352a5699f307ebe9d0ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11b881dda4e17c275a51732d471645f2" id="r_a11b881dda4e17c275a51732d471645f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a11b881dda4e17c275a51732d471645f2">SaveKey</a> (const char *theFilename, DWORD theFlags, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:a11b881dda4e17c275a51732d471645f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6f327ceb1e3f8e2046417f6c0d47512" id="r_ae6f327ceb1e3f8e2046417f6c0d47512"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6f327ceb1e3f8e2046417f6c0d47512">SaveKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theFilename, DWORD theFlags, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:ae6f327ceb1e3f8e2046417f6c0d47512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a5929bdea8f7a8c6eab8c0ab5a4ebea" id="r_a1a5929bdea8f7a8c6eab8c0ab5a4ebea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1a5929bdea8f7a8c6eab8c0ab5a4ebea">SaveKey</a> (const wchar_t *theFilename, DWORD theFlags, LPSECURITY_ATTRIBUTES theSecurityAttributes=nullptr) const</td></tr>
<tr class="separator:a1a5929bdea8f7a8c6eab8c0ab5a4ebea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372eca76cde45255824cb829dcf79fc3" id="r_a372eca76cde45255824cb829dcf79fc3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a372eca76cde45255824cb829dcf79fc3">SetKeySecurity</a> (SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor) const</td></tr>
<tr class="separator:a372eca76cde45255824cb829dcf79fc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae298cc83cbed690e83ae2041deb0d891" id="r_ae298cc83cbed690e83ae2041deb0d891"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae298cc83cbed690e83ae2041deb0d891">SetValue</a> (const char *valueName, DWORD valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:ae298cc83cbed690e83ae2041deb0d891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1d1bcba19fff217bc265c52c5584998" id="r_ad1d1bcba19fff217bc265c52c5584998"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad1d1bcba19fff217bc265c52c5584998">SetValue</a> (const wchar_t *valueName, DWORD valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:ad1d1bcba19fff217bc265c52c5584998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9e6aa6db9eb3786943ae55299d6151c" id="r_ac9e6aa6db9eb3786943ae55299d6151c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9e6aa6db9eb3786943ae55299d6151c">SetValue</a> (DWORD valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:ac9e6aa6db9eb3786943ae55299d6151c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a6e1104e369a1dfd556975e1e059dd" id="r_ad9a6e1104e369a1dfd556975e1e059dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad9a6e1104e369a1dfd556975e1e059dd">SetValueA</a> (DWORD valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:ad9a6e1104e369a1dfd556975e1e059dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4b41efbd560e2327320ab46859edc75" id="r_aa4b41efbd560e2327320ab46859edc75"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa4b41efbd560e2327320ab46859edc75">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;valueName, DWORD valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:aa4b41efbd560e2327320ab46859edc75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5230bf143a78f617a2ed1eaa43e433f" id="r_aa5230bf143a78f617a2ed1eaa43e433f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa5230bf143a78f617a2ed1eaa43e433f">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;valueName, DWORD valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:aa5230bf143a78f617a2ed1eaa43e433f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ef85ce1e8396fb145ccd68e692ca2ab" id="r_a3ef85ce1e8396fb145ccd68e692ca2ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3ef85ce1e8396fb145ccd68e692ca2ab">SetValue</a> (const char *valueName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a> valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:a3ef85ce1e8396fb145ccd68e692ca2ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad035abc565f49d922f84b2ffc484bda0" id="r_ad035abc565f49d922f84b2ffc484bda0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad035abc565f49d922f84b2ffc484bda0">SetValue</a> (const wchar_t *valueName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a> valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:ad035abc565f49d922f84b2ffc484bda0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9574ca579ce983a73f48a4f0ec2e49d" id="r_ab9574ca579ce983a73f48a4f0ec2e49d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab9574ca579ce983a73f48a4f0ec2e49d">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;valueName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a> valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:ab9574ca579ce983a73f48a4f0ec2e49d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b26015ab85172b201368f58d6394c3a" id="r_a6b26015ab85172b201368f58d6394c3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b26015ab85172b201368f58d6394c3a">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;valueName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a> valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:a6b26015ab85172b201368f58d6394c3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a768acd03a3f82b9715b8b31bd66fffb9" id="r_a768acd03a3f82b9715b8b31bd66fffb9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a768acd03a3f82b9715b8b31bd66fffb9">SetValue</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a> valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:a768acd03a3f82b9715b8b31bd66fffb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37bd65f60e1c5545c29486e9e8ac0986" id="r_a37bd65f60e1c5545c29486e9e8ac0986"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a37bd65f60e1c5545c29486e9e8ac0986">SetValueA</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a> valueType, const void *data, DWORD sizeOfData) const</td></tr>
<tr class="separator:a37bd65f60e1c5545c29486e9e8ac0986"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b08a175b43db98b25da074bd6bc583e" id="r_a3b08a175b43db98b25da074bd6bc583e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b08a175b43db98b25da074bd6bc583e">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;valueName, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;value) const</td></tr>
<tr class="separator:a3b08a175b43db98b25da074bd6bc583e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a073a8b1f9f8cd029715171a2f8743aa8" id="r_a073a8b1f9f8cd029715171a2f8743aa8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a073a8b1f9f8cd029715171a2f8743aa8">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;valueName, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;value) const</td></tr>
<tr class="separator:a073a8b1f9f8cd029715171a2f8743aa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a962e9249a1d0271e4a66c6acef03cf8e" id="r_a962e9249a1d0271e4a66c6acef03cf8e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a962e9249a1d0271e4a66c6acef03cf8e">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;value) const</td></tr>
<tr class="separator:a962e9249a1d0271e4a66c6acef03cf8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8095fd7ac0f02c768077561fc45df6e" id="r_ae8095fd7ac0f02c768077561fc45df6e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8095fd7ac0f02c768077561fc45df6e">SetValue</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;value) const</td></tr>
<tr class="separator:ae8095fd7ac0f02c768077561fc45df6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle&lt; RegistryHandle, HKEY &gt;</a></td></tr>
<tr class="memitem:abb70a2a59aeaa7c85b43abe952c39179 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_abb70a2a59aeaa7c85b43abe952c39179"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#abb70a2a59aeaa7c85b43abe952c39179">Handle</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other)=delete</td></tr>
<tr class="separator:abb70a2a59aeaa7c85b43abe952c39179 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6847836c48d9a927f5d65ab171a6cabb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a6847836c48d9a927f5d65ab171a6cabb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a6847836c48d9a927f5d65ab171a6cabb">Handle</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a6847836c48d9a927f5d65ab171a6cabb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc3317fb28a8061cde894df2b6894c48 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_adc3317fb28a8061cde894df2b6894c48"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#adc3317fb28a8061cde894df2b6894c48">~Handle</a> () noexcept</td></tr>
<tr class="separator:adc3317fb28a8061cde894df2b6894c48 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abee9b1a827f5d947b6f2130f6ce56f21 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_abee9b1a827f5d947b6f2130f6ce56f21"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#abee9b1a827f5d947b6f2130f6ce56f21">IsValid</a> () const noexcept</td></tr>
<tr class="separator:abee9b1a827f5d947b6f2130f6ce56f21 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cc49fed55e92c20c47a7472bcf0d916 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a8cc49fed55e92c20c47a7472bcf0d916"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a8cc49fed55e92c20c47a7472bcf0d916">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other)=delete</td></tr>
<tr class="separator:a8cc49fed55e92c20c47a7472bcf0d916 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3015fe8a862420a51ba14adccbfe32 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a8a3015fe8a862420a51ba14adccbfe32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a8a3015fe8a862420a51ba14adccbfe32">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a8a3015fe8a862420a51ba14adccbfe32 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53f87d2ebdf3e11d92c9e699c10bb98c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a53f87d2ebdf3e11d92c9e699c10bb98c"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a53f87d2ebdf3e11d92c9e699c10bb98c">operator&lt;=&gt;</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a53f87d2ebdf3e11d92c9e699c10bb98c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a426c966db96e48883cf37aa619ddc811 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a426c966db96e48883cf37aa619ddc811"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a426c966db96e48883cf37aa619ddc811">operator&lt;=&gt;</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a> handle) const noexcept</td></tr>
<tr class="separator:a426c966db96e48883cf37aa619ddc811 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a158cfb823345634f90f75fcaebc9be1e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a158cfb823345634f90f75fcaebc9be1e"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a158cfb823345634f90f75fcaebc9be1e">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a158cfb823345634f90f75fcaebc9be1e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6421667bed053df49cc11685b5d490af inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a6421667bed053df49cc11685b5d490af"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a6421667bed053df49cc11685b5d490af">operator==</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a> handle) const noexcept</td></tr>
<tr class="separator:a6421667bed053df49cc11685b5d490af inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a370706347436cf008e9abc73aa29451f inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a370706347436cf008e9abc73aa29451f"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a370706347436cf008e9abc73aa29451f">operator HandleType</a> () const noexcept</td></tr>
<tr class="separator:a370706347436cf008e9abc73aa29451f inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18834c23bf0f4e979c74699cd61e576e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a18834c23bf0f4e979c74699cd61e576e"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a18834c23bf0f4e979c74699cd61e576e">Value</a> () const noexcept</td></tr>
<tr class="separator:a18834c23bf0f4e979c74699cd61e576e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a004f898e11f3e7964876517bca93520f inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a004f898e11f3e7964876517bca93520f"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a004f898e11f3e7964876517bca93520f">OwnsHandle</a> () const noexcept</td></tr>
<tr class="separator:a004f898e11f3e7964876517bca93520f inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a5056337ba8a600390a84642afb53099c" id="r_a5056337ba8a600390a84642afb53099c"><td class="memItemLeft" align="right" valign="top">static constexpr HKEY&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5056337ba8a600390a84642afb53099c">InvalidHandleValue</a> () noexcept</td></tr>
<tr class="separator:a5056337ba8a600390a84642afb53099c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a774557b8c23ec3c780cbac21609db05e" id="r_a774557b8c23ec3c780cbac21609db05e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a774557b8c23ec3c780cbac21609db05e">ClassesRoot</a> ()</td></tr>
<tr class="separator:a774557b8c23ec3c780cbac21609db05e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c148d86194f107ef0567869c4f1b4f0" id="r_a7c148d86194f107ef0567869c4f1b4f0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7c148d86194f107ef0567869c4f1b4f0">CurrentUser</a> ()</td></tr>
<tr class="separator:a7c148d86194f107ef0567869c4f1b4f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387585930350497e83c104e2f3c52e9f" id="r_a387585930350497e83c104e2f3c52e9f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a387585930350497e83c104e2f3c52e9f">LocalMachine</a> ()</td></tr>
<tr class="separator:a387585930350497e83c104e2f3c52e9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed6efface3c167e93eafb5bed15d1f66" id="r_aed6efface3c167e93eafb5bed15d1f66"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed6efface3c167e93eafb5bed15d1f66">Users</a> ()</td></tr>
<tr class="separator:aed6efface3c167e93eafb5bed15d1f66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b6f4b5d53921c211ee9859ad45e4733" id="r_a3b6f4b5d53921c211ee9859ad45e4733"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b6f4b5d53921c211ee9859ad45e4733">PerformanceData</a> ()</td></tr>
<tr class="separator:a3b6f4b5d53921c211ee9859ad45e4733"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b81d0ba0cc2e8fef5b28607a93ad1c9" id="r_a7b81d0ba0cc2e8fef5b28607a93ad1c9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b81d0ba0cc2e8fef5b28607a93ad1c9">PerformanceText</a> ()</td></tr>
<tr class="separator:a7b81d0ba0cc2e8fef5b28607a93ad1c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8054f79f3bdbe6d3ee499b6a6797d106" id="r_a8054f79f3bdbe6d3ee499b6a6797d106"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8054f79f3bdbe6d3ee499b6a6797d106">PerformanceNlsText</a> ()</td></tr>
<tr class="separator:a8054f79f3bdbe6d3ee499b6a6797d106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1bb590b5d3faacc58de7f0af8b76bfd" id="r_af1bb590b5d3faacc58de7f0af8b76bfd"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af1bb590b5d3faacc58de7f0af8b76bfd">CurrentConfig</a> ()</td></tr>
<tr class="separator:af1bb590b5d3faacc58de7f0af8b76bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe86ad8c3ce4fe0d39621af6835b7b63" id="r_afe86ad8c3ce4fe0d39621af6835b7b63"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe86ad8c3ce4fe0d39621af6835b7b63">DynamicData</a> ()</td></tr>
<tr class="separator:afe86ad8c3ce4fe0d39621af6835b7b63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ca33d4e4a4318a33153a2cd3abd16d0" id="r_a5ca33d4e4a4318a33153a2cd3abd16d0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ca33d4e4a4318a33153a2cd3abd16d0">CurrentUserLocalSettings</a> ()</td></tr>
<tr class="separator:a5ca33d4e4a4318a33153a2cd3abd16d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ad63c75f51b9c48b26f0aced4e5dc8d" id="r_a3ad63c75f51b9c48b26f0aced4e5dc8d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3ad63c75f51b9c48b26f0aced4e5dc8d">OpenUserClassesRoot</a> (HANDLE hToken, REGSAM desiredAccess)</td></tr>
<tr class="separator:a3ad63c75f51b9c48b26f0aced4e5dc8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a525ed2eeec602b834565ffd8d49d0731" id="r_a525ed2eeec602b834565ffd8d49d0731"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a525ed2eeec602b834565ffd8d49d0731">OpenCurrentUser</a> (REGSAM desiredAccess)</td></tr>
<tr class="separator:a525ed2eeec602b834565ffd8d49d0731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adacb7fff7f3dcc86aaee5811163bce7c" id="r_adacb7fff7f3dcc86aaee5811163bce7c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adacb7fff7f3dcc86aaee5811163bce7c">DisablePredefinedCache</a> ()</td></tr>
<tr class="separator:adacb7fff7f3dcc86aaee5811163bce7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d508e1fe441d642f7650cc7b4282f02" id="r_a0d508e1fe441d642f7650cc7b4282f02"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d508e1fe441d642f7650cc7b4282f02">DisablePredefinedCacheEx</a> ()</td></tr>
<tr class="separator:a0d508e1fe441d642f7650cc7b4282f02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb31a47f940b9a05cf1c5510fcdcd0a7" id="r_acb31a47f940b9a05cf1c5510fcdcd0a7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb31a47f940b9a05cf1c5510fcdcd0a7">ConnectRegistry</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;predefinedHandle)</td></tr>
<tr class="separator:acb31a47f940b9a05cf1c5510fcdcd0a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff69ab9a3ecde4f3ea60d4cda90c0cf" id="r_adff69ab9a3ecde4f3ea60d4cda90c0cf"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adff69ab9a3ecde4f3ea60d4cda90c0cf">ConnectRegistry</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;predefinedHandle)</td></tr>
<tr class="separator:adff69ab9a3ecde4f3ea60d4cda90c0cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15110b47d0c941ad1576997d4be6c495" id="r_a15110b47d0c941ad1576997d4be6c495"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a15110b47d0c941ad1576997d4be6c495">ConnectRegistry</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle)</td></tr>
<tr class="separator:a15110b47d0c941ad1576997d4be6c495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee29319dc2c1aa18d94466c0d5d00676" id="r_aee29319dc2c1aa18d94466c0d5d00676"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee29319dc2c1aa18d94466c0d5d00676">ConnectRegistry</a> (const char *theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle)</td></tr>
<tr class="separator:aee29319dc2c1aa18d94466c0d5d00676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed13f20bc91b4cfd64da91c7a1e8b161" id="r_aed13f20bc91b4cfd64da91c7a1e8b161"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed13f20bc91b4cfd64da91c7a1e8b161">ConnectRegistry</a> (const wchar_t *theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle)</td></tr>
<tr class="separator:aed13f20bc91b4cfd64da91c7a1e8b161"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaba3404bf3fd3fea883ed9885738cd7c" id="r_aaba3404bf3fd3fea883ed9885738cd7c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaba3404bf3fd3fea883ed9885738cd7c">ConnectRegistry</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle, ULONG theFlags)</td></tr>
<tr class="separator:aaba3404bf3fd3fea883ed9885738cd7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8b96463a564434a7e821cf9c752c997" id="r_aa8b96463a564434a7e821cf9c752c997"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa8b96463a564434a7e821cf9c752c997">ConnectRegistry</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle, ULONG theFlags)</td></tr>
<tr class="separator:aa8b96463a564434a7e821cf9c752c997"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30c66b30a2d4393f29b5fd82ae278c43" id="r_a30c66b30a2d4393f29b5fd82ae278c43"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a30c66b30a2d4393f29b5fd82ae278c43">ConnectRegistry</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle, ULONG theFlags)</td></tr>
<tr class="separator:a30c66b30a2d4393f29b5fd82ae278c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca472f412fa09eefd70307969f4c8e5e" id="r_aca472f412fa09eefd70307969f4c8e5e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca472f412fa09eefd70307969f4c8e5e">ConnectRegistry</a> (const char *theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle, ULONG theFlags)</td></tr>
<tr class="separator:aca472f412fa09eefd70307969f4c8e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfd2feb8b1e241bdb40c9c7220037171" id="r_acfd2feb8b1e241bdb40c9c7220037171"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acfd2feb8b1e241bdb40c9c7220037171">ConnectRegistry</a> (const wchar_t *theMachineName, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;thePredefinedHandle, ULONG theFlags)</td></tr>
<tr class="separator:acfd2feb8b1e241bdb40c9c7220037171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8034527681e6a9a3a7adb5d7787069d8" id="r_a8034527681e6a9a3a7adb5d7787069d8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8034527681e6a9a3a7adb5d7787069d8">LoadAppKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;theFilename, REGSAM desiredAccess, DWORD theOptions)</td></tr>
<tr class="separator:a8034527681e6a9a3a7adb5d7787069d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9284967f6541045b21ba0b738a096c5" id="r_af9284967f6541045b21ba0b738a096c5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af9284967f6541045b21ba0b738a096c5">LoadAppKey</a> (const char *theFilename, REGSAM desiredAccess, DWORD theOptions)</td></tr>
<tr class="separator:af9284967f6541045b21ba0b738a096c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33b105b362d16072cd2865e4590b310c" id="r_a33b105b362d16072cd2865e4590b310c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a33b105b362d16072cd2865e4590b310c">LoadAppKey</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;theFilename, REGSAM desiredAccess, DWORD theOptions)</td></tr>
<tr class="separator:a33b105b362d16072cd2865e4590b310c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ab58a85350c278418c9c89b5e4e9f5" id="r_a73ab58a85350c278418c9c89b5e4e9f5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a73ab58a85350c278418c9c89b5e4e9f5">LoadAppKey</a> (const wchar_t *theFilename, REGSAM desiredAccess, DWORD theOptions)</td></tr>
<tr class="separator:a73ab58a85350c278418c9c89b5e4e9f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_handle')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle&lt; RegistryHandle, HKEY &gt;</a></td></tr>
<tr class="memitem:a26018a2a2b154b9b169709c6f4b8ca6b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a26018a2a2b154b9b169709c6f4b8ca6b"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a26018a2a2b154b9b169709c6f4b8ca6b">InvalidHandleValue</a> () noexcept</td></tr>
<tr class="separator:a26018a2a2b154b9b169709c6f4b8ca6b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:aa9946caa9b05c387699cdfa6bc590adc" id="r_aa9946caa9b05c387699cdfa6bc590adc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa9946caa9b05c387699cdfa6bc590adc">ToString</a> (const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:aa9946caa9b05c387699cdfa6bc590adc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e345a4f49fbb5df208691de0e3e771a" id="r_a4e345a4f49fbb5df208691de0e3e771a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4e345a4f49fbb5df208691de0e3e771a">ToBoolean</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a4e345a4f49fbb5df208691de0e3e771a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae524e5cbb5d69e3c5f920083be68abff" id="r_ae524e5cbb5d69e3c5f920083be68abff"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae524e5cbb5d69e3c5f920083be68abff">ToInt32</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:ae524e5cbb5d69e3c5f920083be68abff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a551eb3ed8e758177b49b0bf0a25ba1cf" id="r_a551eb3ed8e758177b49b0bf0a25ba1cf"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a551eb3ed8e758177b49b0bf0a25ba1cf">ToUInt32</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a551eb3ed8e758177b49b0bf0a25ba1cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a699eb863a1c7b0945e7e56e9f2a5dda1" id="r_a699eb863a1c7b0945e7e56e9f2a5dda1"><td class="memItemLeft" align="right" valign="top">long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a699eb863a1c7b0945e7e56e9f2a5dda1">ToInt64</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a699eb863a1c7b0945e7e56e9f2a5dda1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1acffaa962c205ea1253314437bf87d" id="r_ae1acffaa962c205ea1253314437bf87d"><td class="memItemLeft" align="right" valign="top">unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae1acffaa962c205ea1253314437bf87d">ToUInt64</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:ae1acffaa962c205ea1253314437bf87d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad816b2a7065092b0c9e3037cf54e7e58" id="r_ad816b2a7065092b0c9e3037cf54e7e58"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad816b2a7065092b0c9e3037cf54e7e58">ToSByte</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:ad816b2a7065092b0c9e3037cf54e7e58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90d8726decdd4d6d6dc2611c528fc626" id="r_a90d8726decdd4d6d6dc2611c528fc626"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a90d8726decdd4d6d6dc2611c528fc626">ToByte</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a90d8726decdd4d6d6dc2611c528fc626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7556ff4ab7575415c2a559536979a9b0" id="r_a7556ff4ab7575415c2a559536979a9b0"><td class="memItemLeft" align="right" valign="top">short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7556ff4ab7575415c2a559536979a9b0">ToInt16</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a7556ff4ab7575415c2a559536979a9b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7ab2868514674a7b67b2591291f186" id="r_a2f7ab2868514674a7b67b2591291f186"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f7ab2868514674a7b67b2591291f186">ToUInt16</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a2f7ab2868514674a7b67b2591291f186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a3960af98aed918867d0f6c1db6b110" id="r_a0a3960af98aed918867d0f6c1db6b110"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0a3960af98aed918867d0f6c1db6b110">ToDouble</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a0a3960af98aed918867d0f6c1db6b110"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec41f6a4ef1eb82609b65e483d84512" id="r_a9ec41f6a4ef1eb82609b65e483d84512"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ec41f6a4ef1eb82609b65e483d84512">ToSingle</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:a9ec41f6a4ef1eb82609b65e483d84512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5447816f8e9e58af2920d825af16638" id="r_ad5447816f8e9e58af2920d825af16638"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad5447816f8e9e58af2920d825af16638">ToString</a> (DWORD theValueType, const std::vector&lt; char &gt; &amp;theData) const</td></tr>
<tr class="separator:ad5447816f8e9e58af2920d825af16638"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle&lt; RegistryHandle, HKEY &gt;</a></td></tr>
<tr class="memitem:ad7c4be0d398b2f1f0c608ae347941541 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_ad7c4be0d398b2f1f0c608ae347941541"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#ad7c4be0d398b2f1f0c608ae347941541">Handle</a> () noexcept</td></tr>
<tr class="separator:ad7c4be0d398b2f1f0c608ae347941541 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0620b59b2b5902e5dfd25055d8a2a33 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_aa0620b59b2b5902e5dfd25055d8a2a33"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa0620b59b2b5902e5dfd25055d8a2a33">Handle</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a> handle, bool ownsHandle=true) noexcept</td></tr>
<tr class="separator:aa0620b59b2b5902e5dfd25055d8a2a33 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84f5edca0cf9fe835d193bb358f9ecd9 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a84f5edca0cf9fe835d193bb358f9ecd9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a84f5edca0cf9fe835d193bb358f9ecd9">SetValue</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a> handle, bool ownsHandle=true)</td></tr>
<tr class="separator:a84f5edca0cf9fe835d193bb358f9ecd9 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_handle"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_handle')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle&lt; RegistryHandle, HKEY &gt;</a></td></tr>
<tr class="memitem:a7787e872f5227a764ea9ce06a4b23360 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_handle" id="r_a7787e872f5227a764ea9ce06a4b23360"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#aa428c7964441885409f184d7e34acbce">HandleType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml#a7787e872f5227a764ea9ce06a4b23360">value_</a></td></tr>
<tr class="separator:a7787e872f5227a764ea9ce06a4b23360 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="adce8a2d1be4403bf9a965a45fed2adb4" name="adce8a2d1be4403bf9a965a45fed2adb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adce8a2d1be4403bf9a965a45fed2adb4">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#adce8a2d1be4403bf9a965a45fed2adb4">Harlinn::Common::Core::RegistryHandle::Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a>, HKEY&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac7635e745d3806d89303f983e000d97b" name="ac7635e745d3806d89303f983e000d97b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7635e745d3806d89303f983e000d97b">&#9670;&#160;</a></span>RegistryHandle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::RegistryHandle::RegistryHandle </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a3b4cfbeb4762a002c167cae7a13e1f" name="a2a3b4cfbeb4762a002c167cae7a13e1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a3b4cfbeb4762a002c167cae7a13e1f">&#9670;&#160;</a></span>RegistryHandle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::RegistryHandle::RegistryHandle </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>initialHandleValue</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>ownsValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a774557b8c23ec3c780cbac21609db05e" name="a774557b8c23ec3c780cbac21609db05e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a774557b8c23ec3c780cbac21609db05e">&#9670;&#160;</a></span>ClassesRoot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ClassesRoot </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abcfb6fa0d20db38658ae7ec424226e53" name="abcfb6fa0d20db38658ae7ec424226e53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcfb6fa0d20db38658ae7ec424226e53">&#9670;&#160;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::Close </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adff69ab9a3ecde4f3ea60d4cda90c0cf" name="adff69ab9a3ecde4f3ea60d4cda90c0cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adff69ab9a3ecde4f3ea60d4cda90c0cf">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[1/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>predefinedHandle</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa8b96463a564434a7e821cf9c752c997" name="aa8b96463a564434a7e821cf9c752c997"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8b96463a564434a7e821cf9c752c997">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[2/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ULONG</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aee29319dc2c1aa18d94466c0d5d00676" name="aee29319dc2c1aa18d94466c0d5d00676"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee29319dc2c1aa18d94466c0d5d00676">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[3/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca472f412fa09eefd70307969f4c8e5e" name="aca472f412fa09eefd70307969f4c8e5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca472f412fa09eefd70307969f4c8e5e">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[4/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ULONG</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb31a47f940b9a05cf1c5510fcdcd0a7" name="acb31a47f940b9a05cf1c5510fcdcd0a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb31a47f940b9a05cf1c5510fcdcd0a7">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[5/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>predefinedHandle</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaba3404bf3fd3fea883ed9885738cd7c" name="aaba3404bf3fd3fea883ed9885738cd7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaba3404bf3fd3fea883ed9885738cd7c">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[6/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ULONG</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aed13f20bc91b4cfd64da91c7a1e8b161" name="aed13f20bc91b4cfd64da91c7a1e8b161"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed13f20bc91b4cfd64da91c7a1e8b161">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[7/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acfd2feb8b1e241bdb40c9c7220037171" name="acfd2feb8b1e241bdb40c9c7220037171"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfd2feb8b1e241bdb40c9c7220037171">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[8/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ULONG</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a15110b47d0c941ad1576997d4be6c495" name="a15110b47d0c941ad1576997d4be6c495"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15110b47d0c941ad1576997d4be6c495">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[9/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a30c66b30a2d4393f29b5fd82ae278c43" name="a30c66b30a2d4393f29b5fd82ae278c43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30c66b30a2d4393f29b5fd82ae278c43">&#9670;&#160;</a></span>ConnectRegistry() <span class="overload">[10/10]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::ConnectRegistry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theMachineName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>thePredefinedHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ULONG</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae251840c5384cd186db7aeef1ba21d55" name="ae251840c5384cd186db7aeef1ba21d55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae251840c5384cd186db7aeef1ba21d55">&#9670;&#160;</a></span>CreateKey() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a99fb02937deb883202a5efaf4a87278f" name="a99fb02937deb883202a5efaf4a87278f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99fb02937deb883202a5efaf4a87278f">&#9670;&#160;</a></span>CreateKey() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae62b418ede78caffc76c6594aee3b029" name="ae62b418ede78caffc76c6594aee3b029"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae62b418ede78caffc76c6594aee3b029">&#9670;&#160;</a></span>CreateKey() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a501f245eed195a7868c987d9f276b7a8" name="a501f245eed195a7868c987d9f276b7a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a501f245eed195a7868c987d9f276b7a8">&#9670;&#160;</a></span>CreateKey() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f181e9663ee40fae113b0b176bffa85" name="a9f181e9663ee40fae113b0b176bffa85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f181e9663ee40fae113b0b176bffa85">&#9670;&#160;</a></span>CreateKey() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a01877785d2685515bf2c3782052a33" name="a5a01877785d2685515bf2c3782052a33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a01877785d2685515bf2c3782052a33">&#9670;&#160;</a></span>CreateKey() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a14ca6b8ca3f63f34182f179440b04f65" name="a14ca6b8ca3f63f34182f179440b04f65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14ca6b8ca3f63f34182f179440b04f65">&#9670;&#160;</a></span>CreateKey() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aae2eda8870fc20755272ba4b3f57edca" name="aae2eda8870fc20755272ba4b3f57edca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae2eda8870fc20755272ba4b3f57edca">&#9670;&#160;</a></span>CreateKey() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a44edd1770c7be3100fad6d239231788d" name="a44edd1770c7be3100fad6d239231788d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44edd1770c7be3100fad6d239231788d">&#9670;&#160;</a></span>CreateKey() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a935ad160c5a1e396391b7bbad4f60619" name="a935ad160c5a1e396391b7bbad4f60619"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a935ad160c5a1e396391b7bbad4f60619">&#9670;&#160;</a></span>CreateKey() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aea53467a0ee7a299b8347c6904597d54" name="aea53467a0ee7a299b8347c6904597d54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea53467a0ee7a299b8347c6904597d54">&#9670;&#160;</a></span>CreateKey() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d62e63807e4a72e7544703ff06a7bcf" name="a4d62e63807e4a72e7544703ff06a7bcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d62e63807e4a72e7544703ff06a7bcf">&#9670;&#160;</a></span>CreateKey() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CreateKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theClass</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>keyWasCreated</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af1bb590b5d3faacc58de7f0af8b76bfd" name="af1bb590b5d3faacc58de7f0af8b76bfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1bb590b5d3faacc58de7f0af8b76bfd">&#9670;&#160;</a></span>CurrentConfig()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CurrentConfig </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7c148d86194f107ef0567869c4f1b4f0" name="a7c148d86194f107ef0567869c4f1b4f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c148d86194f107ef0567869c4f1b4f0">&#9670;&#160;</a></span>CurrentUser()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CurrentUser </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ca33d4e4a4318a33153a2cd3abd16d0" name="a5ca33d4e4a4318a33153a2cd3abd16d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ca33d4e4a4318a33153a2cd3abd16d0">&#9670;&#160;</a></span>CurrentUserLocalSettings()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::CurrentUserLocalSettings </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aacc691781b7646a52065d7710a03c643" name="aacc691781b7646a52065d7710a03c643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacc691781b7646a52065d7710a03c643">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac8a04e648d044d69845988dd71598ae8" name="ac8a04e648d044d69845988dd71598ae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8a04e648d044d69845988dd71598ae8">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af76f62c6661d0a72225416731a0d669d" name="af76f62c6661d0a72225416731a0d669d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af76f62c6661d0a72225416731a0d669d">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7875e580c2995d4605d91802ea34d665" name="a7875e580c2995d4605d91802ea34d665"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7875e580c2995d4605d91802ea34d665">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1187aa94de877a6e5b62e0b1e80b3200" name="a1187aa94de877a6e5b62e0b1e80b3200"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1187aa94de877a6e5b62e0b1e80b3200">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb05c200b2032899877cfd86d37ac463" name="acb05c200b2032899877cfd86d37ac463"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb05c200b2032899877cfd86d37ac463">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a627c6b1dc3699203d0cc530f320344ab" name="a627c6b1dc3699203d0cc530f320344ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a627c6b1dc3699203d0cc530f320344ab">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a00f380529446da1fbe3c5e689a45f8e8" name="a00f380529446da1fbe3c5e689a45f8e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00f380529446da1fbe3c5e689a45f8e8">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a14499aefedda6f050af1cb57017ea01c" name="a14499aefedda6f050af1cb57017ea01c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14499aefedda6f050af1cb57017ea01c">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af8a8d3a905508372719e6730105f64fb" name="af8a8d3a905508372719e6730105f64fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8a8d3a905508372719e6730105f64fb">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a26deada471d6c4932be48afc611312e4" name="a26deada471d6c4932be48afc611312e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26deada471d6c4932be48afc611312e4">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa9d5e79adb408316dfb6c49e50407426" name="aa9d5e79adb408316dfb6c49e50407426"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9d5e79adb408316dfb6c49e50407426">&#9670;&#160;</a></span>DeleteKey() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredRegistryView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a95f51b785d65ed611710d6a2b8eb1285" name="a95f51b785d65ed611710d6a2b8eb1285"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95f51b785d65ed611710d6a2b8eb1285">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa189ff2ce5a49214b20b937b1f79fcc2" name="aa189ff2ce5a49214b20b937b1f79fcc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa189ff2ce5a49214b20b937b1f79fcc2">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1893eb58fedb896ba9d20dc40060769c" name="a1893eb58fedb896ba9d20dc40060769c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1893eb58fedb896ba9d20dc40060769c">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae8740a6c40bcce3f9256b11c272dd26a" name="ae8740a6c40bcce3f9256b11c272dd26a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8740a6c40bcce3f9256b11c272dd26a">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d48314ca6e0607f5fcbcedb3f6ed03e" name="a4d48314ca6e0607f5fcbcedb3f6ed03e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d48314ca6e0607f5fcbcedb3f6ed03e">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aabb58d98d6e2c774bb0cc05ef9fd455b" name="aabb58d98d6e2c774bb0cc05ef9fd455b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabb58d98d6e2c774bb0cc05ef9fd455b">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac36b995a9a0ca1e9c2e2f71c6f2156a" name="aac36b995a9a0ca1e9c2e2f71c6f2156a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac36b995a9a0ca1e9c2e2f71c6f2156a">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae03047dad36302a152808dbda61fbcfe" name="ae03047dad36302a152808dbda61fbcfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae03047dad36302a152808dbda61fbcfe">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad40056b9b39d465a8aa72eaae0461738" name="ad40056b9b39d465a8aa72eaae0461738"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad40056b9b39d465a8aa72eaae0461738">&#9670;&#160;</a></span>DeleteKeyValue() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteKeyValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a38a822eefa973174f5aad513d1a9634e" name="a38a822eefa973174f5aad513d1a9634e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38a822eefa973174f5aad513d1a9634e">&#9670;&#160;</a></span>DeleteValue() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9d27b18fb762ca51126a6641b1d1fe7f" name="a9d27b18fb762ca51126a6641b1d1fe7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d27b18fb762ca51126a6641b1d1fe7f">&#9670;&#160;</a></span>DeleteValue() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac59cac3b443a24598978e0449b517a26" name="ac59cac3b443a24598978e0449b517a26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac59cac3b443a24598978e0449b517a26">&#9670;&#160;</a></span>DeleteValue() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteValue </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afae4a17a3ed88e046299fd57db7001f5" name="afae4a17a3ed88e046299fd57db7001f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afae4a17a3ed88e046299fd57db7001f5">&#9670;&#160;</a></span>DeleteValue() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8a3e698085970983f771b3cb38047d5d" name="a8a3e698085970983f771b3cb38047d5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a3e698085970983f771b3cb38047d5d">&#9670;&#160;</a></span>DeleteValue() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DeleteValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adacb7fff7f3dcc86aaee5811163bce7c" name="adacb7fff7f3dcc86aaee5811163bce7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adacb7fff7f3dcc86aaee5811163bce7c">&#9670;&#160;</a></span>DisablePredefinedCache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Harlinn::Common::Core::RegistryHandle::DisablePredefinedCache </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d508e1fe441d642f7650cc7b4282f02" name="a0d508e1fe441d642f7650cc7b4282f02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d508e1fe441d642f7650cc7b4282f02">&#9670;&#160;</a></span>DisablePredefinedCacheEx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Harlinn::Common::Core::RegistryHandle::DisablePredefinedCacheEx </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2819a184b493ec91624463e4abb2dfce" name="a2819a184b493ec91624463e4abb2dfce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2819a184b493ec91624463e4abb2dfce">&#9670;&#160;</a></span>DisableReflectionKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::DisableReflectionKey </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afe86ad8c3ce4fe0d39621af6835b7b63" name="afe86ad8c3ce4fe0d39621af6835b7b63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe86ad8c3ce4fe0d39621af6835b7b63">&#9670;&#160;</a></span>DynamicData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::DynamicData </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a39e023dcb3d2d2ff2fd2388befd9b2fb" name="a39e023dcb3d2d2ff2fd2388befd9b2fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39e023dcb3d2d2ff2fd2388befd9b2fb">&#9670;&#160;</a></span>EnableReflectionKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::EnableReflectionKey </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2d7fe8ac475c86b08d2079f6cc25a31" name="ac2d7fe8ac475c86b08d2079f6cc25a31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2d7fe8ac475c86b08d2079f6cc25a31">&#9670;&#160;</a></span>EnumKey() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumKey </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME &amp;</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a3d285a9c7123faa280bc520b888e39" name="a3a3d285a9c7123faa280bc520b888e39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a3d285a9c7123faa280bc520b888e39">&#9670;&#160;</a></span>EnumKey() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumKey </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME &amp;</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a575a1c6eae1b0e6c84db47a98178e42d" name="a575a1c6eae1b0e6c84db47a98178e42d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a575a1c6eae1b0e6c84db47a98178e42d">&#9670;&#160;</a></span>EnumKey() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumKey </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME &amp;</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abacb16180d7531a047cf9cf87365b3d0" name="abacb16180d7531a047cf9cf87365b3d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abacb16180d7531a047cf9cf87365b3d0">&#9670;&#160;</a></span>EnumKey() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumKey </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME &amp;</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a020c0488f56125548f7e93fe6aa14c5a" name="a020c0488f56125548f7e93fe6aa14c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a020c0488f56125548f7e93fe6aa14c5a">&#9670;&#160;</a></span>EnumKeyNames() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumKeyNames </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a01826746746d396a9454d8592605bc32" name="a01826746746d396a9454d8592605bc32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01826746746d396a9454d8592605bc32">&#9670;&#160;</a></span>EnumKeyNames() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumKeyNames </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa97c0a9f717e658e0aa09aa60bb2e774" name="aa97c0a9f717e658e0aa09aa60bb2e774"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa97c0a9f717e658e0aa09aa60bb2e774">&#9670;&#160;</a></span>EnumValue() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumValue </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ca43c3d6c08aa63c8e7ebff3c209a32" name="a9ca43c3d6c08aa63c8e7ebff3c209a32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ca43c3d6c08aa63c8e7ebff3c209a32">&#9670;&#160;</a></span>EnumValue() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::EnumValue </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af1587eb84e35b22f4a1e5ed1a3b3efa4" name="af1587eb84e35b22f4a1e5ed1a3b3efa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1587eb84e35b22f4a1e5ed1a3b3efa4">&#9670;&#160;</a></span>FlushKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp; Harlinn::Common::Core::RegistryHandle::FlushKey </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af5588ee4808bbc2ebeb2f95e9c31a54d" name="af5588ee4808bbc2ebeb2f95e9c31a54d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5588ee4808bbc2ebeb2f95e9c31a54d">&#9670;&#160;</a></span>GetKeySecurity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::GetKeySecurity </td>
          <td>(</td>
          <td class="paramtype">SECURITY_INFORMATION</td>          <td class="paramname"><span class="paramname"><em>SecurityInformation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSECURITY_DESCRIPTOR</td>          <td class="paramname"><span class="paramname"><em>theSecurityDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheSecurityDescriptor</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5056337ba8a600390a84642afb53099c" name="a5056337ba8a600390a84642afb53099c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5056337ba8a600390a84642afb53099c">&#9670;&#160;</a></span>InvalidHandleValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr HKEY Harlinn::Common::Core::RegistryHandle::InvalidHandleValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a731576bf704477acc55ad187d0635c75" name="a731576bf704477acc55ad187d0635c75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a731576bf704477acc55ad187d0635c75">&#9670;&#160;</a></span>IsReflectionDisabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::IsReflectionDisabled </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec7092ac4686816953a5a75236a87c8a" name="aec7092ac4686816953a5a75236a87c8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec7092ac4686816953a5a75236a87c8a">&#9670;&#160;</a></span>IsReflectionEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::IsReflectionEnabled </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a85d35518712f6779d177418cbf20dcab" name="a85d35518712f6779d177418cbf20dcab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85d35518712f6779d177418cbf20dcab">&#9670;&#160;</a></span>IsValid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::IsValid </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aff6c15eee6d6b418e5c9cdf9536c9111" name="aff6c15eee6d6b418e5c9cdf9536c9111"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff6c15eee6d6b418e5c9cdf9536c9111">&#9670;&#160;</a></span>KeyExists() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::KeyExists </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acff116f7e423560267b9248cb936dfc9" name="acff116f7e423560267b9248cb936dfc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acff116f7e423560267b9248cb936dfc9">&#9670;&#160;</a></span>KeyExists() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::KeyExists </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8034527681e6a9a3a7adb5d7787069d8" name="a8034527681e6a9a3a7adb5d7787069d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8034527681e6a9a3a7adb5d7787069d8">&#9670;&#160;</a></span>LoadAppKey() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::LoadAppKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af9284967f6541045b21ba0b738a096c5" name="af9284967f6541045b21ba0b738a096c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9284967f6541045b21ba0b738a096c5">&#9670;&#160;</a></span>LoadAppKey() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::LoadAppKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a73ab58a85350c278418c9c89b5e4e9f5" name="a73ab58a85350c278418c9c89b5e4e9f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73ab58a85350c278418c9c89b5e4e9f5">&#9670;&#160;</a></span>LoadAppKey() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::LoadAppKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a33b105b362d16072cd2865e4590b310c" name="a33b105b362d16072cd2865e4590b310c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33b105b362d16072cd2865e4590b310c">&#9670;&#160;</a></span>LoadAppKey() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::LoadAppKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theOptions</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a22bd00f7ffae5b18046f82cc6daf8fea" name="a22bd00f7ffae5b18046f82cc6daf8fea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22bd00f7ffae5b18046f82cc6daf8fea">&#9670;&#160;</a></span>LoadKey() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7f589e6f62f48353fdea6dfeda1be7a1" name="a7f589e6f62f48353fdea6dfeda1be7a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f589e6f62f48353fdea6dfeda1be7a1">&#9670;&#160;</a></span>LoadKey() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5e11bdb170c9b011c0449a8e6cbe6a5" name="ac5e11bdb170c9b011c0449a8e6cbe6a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5e11bdb170c9b011c0449a8e6cbe6a5">&#9670;&#160;</a></span>LoadKey() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a272d0eb3442e084ba38ce3317360c34f" name="a272d0eb3442e084ba38ce3317360c34f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a272d0eb3442e084ba38ce3317360c34f">&#9670;&#160;</a></span>LoadKey() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a944110e5fea3fee2bfe8584e38b13c59" name="a944110e5fea3fee2bfe8584e38b13c59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a944110e5fea3fee2bfe8584e38b13c59">&#9670;&#160;</a></span>LoadKey() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae482b0050fbd766ff389619ba11a3ef1" name="ae482b0050fbd766ff389619ba11a3ef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae482b0050fbd766ff389619ba11a3ef1">&#9670;&#160;</a></span>LoadKey() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4532299743f5e23063745ba4e9e88996" name="a4532299743f5e23063745ba4e9e88996"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4532299743f5e23063745ba4e9e88996">&#9670;&#160;</a></span>LoadKey() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74820e6ee9ae14e52b3c6af3384f700e" name="a74820e6ee9ae14e52b3c6af3384f700e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74820e6ee9ae14e52b3c6af3384f700e">&#9670;&#160;</a></span>LoadKey() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::LoadKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a387585930350497e83c104e2f3c52e9f" name="a387585930350497e83c104e2f3c52e9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a387585930350497e83c104e2f3c52e9f">&#9670;&#160;</a></span>LocalMachine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::LocalMachine </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1fb0d6d3a758eac7d150ebaadf9cc71c" name="a1fb0d6d3a758eac7d150ebaadf9cc71c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fb0d6d3a758eac7d150ebaadf9cc71c">&#9670;&#160;</a></span>NotifyChangeKeyValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::NotifyChangeKeyValue </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>watchSubtree</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwNotifyFilter</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hEvent</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>asynchronous</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a525ed2eeec602b834565ffd8d49d0731" name="a525ed2eeec602b834565ffd8d49d0731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a525ed2eeec602b834565ffd8d49d0731">&#9670;&#160;</a></span>OpenCurrentUser()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenCurrentUser </td>
          <td>(</td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab93a34df9d5b008104be84d6135d1b78" name="ab93a34df9d5b008104be84d6135d1b78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab93a34df9d5b008104be84d6135d1b78">&#9670;&#160;</a></span>OpenKey() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b5c89a19ef201f47b7df1a4b5cf09f8" name="a0b5c89a19ef201f47b7df1a4b5cf09f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b5c89a19ef201f47b7df1a4b5cf09f8">&#9670;&#160;</a></span>OpenKey() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeca42bd96ffb4ed8656eec8b897b2ffe" name="aeca42bd96ffb4ed8656eec8b897b2ffe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca42bd96ffb4ed8656eec8b897b2ffe">&#9670;&#160;</a></span>OpenKey() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3204ca5488987be2f6dc8db177dd02ef" name="a3204ca5488987be2f6dc8db177dd02ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3204ca5488987be2f6dc8db177dd02ef">&#9670;&#160;</a></span>OpenKey() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af70e4f6514956eea0649861462399423" name="af70e4f6514956eea0649861462399423"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af70e4f6514956eea0649861462399423">&#9670;&#160;</a></span>OpenKey() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6deee30a32edc239ad6f481c2fa11136" name="a6deee30a32edc239ad6f481c2fa11136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6deee30a32edc239ad6f481c2fa11136">&#9670;&#160;</a></span>OpenKey() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ae5b1b1047157ac9d02eabf719d3ba6" name="a5ae5b1b1047157ac9d02eabf719d3ba6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ae5b1b1047157ac9d02eabf719d3ba6">&#9670;&#160;</a></span>OpenKey() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2e84184aaaa70f0a18201b081c0d41d" name="ac2e84184aaaa70f0a18201b081c0d41d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2e84184aaaa70f0a18201b081c0d41d">&#9670;&#160;</a></span>OpenKey() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hTransaction</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ad63c75f51b9c48b26f0aced4e5dc8d" name="a3ad63c75f51b9c48b26f0aced4e5dc8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ad63c75f51b9c48b26f0aced4e5dc8d">&#9670;&#160;</a></span>OpenUserClassesRoot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::OpenUserClassesRoot </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>hToken</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REGSAM</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae76c40f7e6cd1ff26e20473f1693653e" name="ae76c40f7e6cd1ff26e20473f1693653e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae76c40f7e6cd1ff26e20473f1693653e">&#9670;&#160;</a></span>OverridePredefinedKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::OverridePredefinedKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newHandle</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b6f4b5d53921c211ee9859ad45e4733" name="a3b6f4b5d53921c211ee9859ad45e4733"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b6f4b5d53921c211ee9859ad45e4733">&#9670;&#160;</a></span>PerformanceData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::PerformanceData </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8054f79f3bdbe6d3ee499b6a6797d106" name="a8054f79f3bdbe6d3ee499b6a6797d106"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8054f79f3bdbe6d3ee499b6a6797d106">&#9670;&#160;</a></span>PerformanceNlsText()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::PerformanceNlsText </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b81d0ba0cc2e8fef5b28607a93ad1c9" name="a7b81d0ba0cc2e8fef5b28607a93ad1c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b81d0ba0cc2e8fef5b28607a93ad1c9">&#9670;&#160;</a></span>PerformanceText()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::PerformanceText </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad53a85886e3802e6d6325cac81218282" name="ad53a85886e3802e6d6325cac81218282"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad53a85886e3802e6d6325cac81218282">&#9670;&#160;</a></span>QueryInfoKey() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryInfoKey </td>
          <td>(</td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theNumberOfSubKeys</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxSubKeyLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxClassLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theNumberOfValues</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxValueNameLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxValueLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSecurityDescriptorSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME &amp;</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab11ca86f9ead6739f2941725ab3059f5" name="ab11ca86f9ead6739f2941725ab3059f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab11ca86f9ead6739f2941725ab3059f5">&#9670;&#160;</a></span>QueryInfoKey() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryInfoKey </td>
          <td>(</td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theNumberOfSubKeys</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxSubKeyLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxClassLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theNumberOfValues</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxValueNameLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxValueLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theSecurityDescriptorSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME *</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61ccf0b61dc9d30f34bc79034649e12a" name="a61ccf0b61dc9d30f34bc79034649e12a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61ccf0b61dc9d30f34bc79034649e12a">&#9670;&#160;</a></span>QueryInfoKey() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryInfoKey </td>
          <td>(</td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theNumberOfSubKeys</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxSubKeyLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxClassLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theNumberOfValues</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxValueNameLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theMaxValueLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSecurityDescriptorSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME &amp;</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a346577feb728cc2a2aeb15d8ec22f083" name="a346577feb728cc2a2aeb15d8ec22f083"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a346577feb728cc2a2aeb15d8ec22f083">&#9670;&#160;</a></span>QueryInfoKey() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryInfoKey </td>
          <td>(</td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheClassNameBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theNumberOfSubKeys</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxSubKeyLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxClassLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theNumberOfValues</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxValueNameLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theMaxValueLen</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>theSecurityDescriptorSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME *</td>          <td class="paramname"><span class="paramname"><em>theLastWriteTime</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1370f95b9406b0dfa3574b30bc5cb10c" name="a1370f95b9406b0dfa3574b30bc5cb10c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1370f95b9406b0dfa3574b30bc5cb10c">&#9670;&#160;</a></span>QueryMultipleValues() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryMultipleValues </td>
          <td>(</td>
          <td class="paramtype">PVALENTA</td>          <td class="paramname"><span class="paramname"><em>theValueList</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theNumberOfEntriesInTheValueList</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>theBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theBufferSize</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2d2b916609ccf93e5bedbd395a864d1" name="ac2d2b916609ccf93e5bedbd395a864d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2d2b916609ccf93e5bedbd395a864d1">&#9670;&#160;</a></span>QueryMultipleValues() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryMultipleValues </td>
          <td>(</td>
          <td class="paramtype">PVALENTW</td>          <td class="paramname"><span class="paramname"><em>theValueList</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theNumberOfEntriesInTheValueList</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theBufferSize</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a885d85b81141159b0411370a42c93cf5" name="a885d85b81141159b0411370a42c93cf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a885d85b81141159b0411370a42c93cf5">&#9670;&#160;</a></span>QueryReflectionKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::QueryReflectionKey </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2b1747403f1a3c2885a8ce6fd12b00fc" name="a2b1747403f1a3c2885a8ce6fd12b00fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b1747403f1a3c2885a8ce6fd12b00fc">&#9670;&#160;</a></span>QueryValue() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a348bf088ad2f3f88ef48555b0f86a9af" name="a348bf088ad2f3f88ef48555b0f86a9af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a348bf088ad2f3f88ef48555b0f86a9af">&#9670;&#160;</a></span>QueryValue() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryValue </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b72db5370343607e7fdab77de5b989f" name="a7b72db5370343607e7fdab77de5b989f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b72db5370343607e7fdab77de5b989f">&#9670;&#160;</a></span>QueryValue() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8cf902e52d419187c7d7fc135b948e56" name="a8cf902e52d419187c7d7fc135b948e56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cf902e52d419187c7d7fc135b948e56">&#9670;&#160;</a></span>QueryValue() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ebe99d3c5c471619cfa25090ade299c" name="a1ebe99d3c5c471619cfa25090ade299c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ebe99d3c5c471619cfa25090ade299c">&#9670;&#160;</a></span>QueryValue() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Harlinn::Common::Core::RegistryHandle::QueryValue </td>
          <td>(</td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>theDataBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theSizeOfTheDataBuffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a958380ef0b227b6fb031d37a3cea4c9a" name="a958380ef0b227b6fb031d37a3cea4c9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a958380ef0b227b6fb031d37a3cea4c9a">&#9670;&#160;</a></span>ReadBoolean()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadBoolean </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a335b87ba7bd5bbeb288074b9cf6df3cc" name="a335b87ba7bd5bbeb288074b9cf6df3cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a335b87ba7bd5bbeb288074b9cf6df3cc">&#9670;&#160;</a></span>ReadByte()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadByte </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a767e216d6e318030f4112060e47fb7" name="a3a767e216d6e318030f4112060e47fb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a767e216d6e318030f4112060e47fb7">&#9670;&#160;</a></span>ReadDouble()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadDouble </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac9a00c2860535540f1f76148b7027899" name="ac9a00c2860535540f1f76148b7027899"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9a00c2860535540f1f76148b7027899">&#9670;&#160;</a></span>ReadInt16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadInt16 </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adf6b9087923accdfe016e3dab6544b3e" name="adf6b9087923accdfe016e3dab6544b3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf6b9087923accdfe016e3dab6544b3e">&#9670;&#160;</a></span>ReadInt32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadInt32 </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c80d5eec1ae4eae8db38b6617d8757f" name="a9c80d5eec1ae4eae8db38b6617d8757f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c80d5eec1ae4eae8db38b6617d8757f">&#9670;&#160;</a></span>ReadInt64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadInt64 </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long long &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa3831fe3064b266ea2367a861304411a" name="aa3831fe3064b266ea2367a861304411a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3831fe3064b266ea2367a861304411a">&#9670;&#160;</a></span>ReadSByte()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadSByte </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9fac75db77ecd6101d7531aef8244432" name="a9fac75db77ecd6101d7531aef8244432"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fac75db77ecd6101d7531aef8244432">&#9670;&#160;</a></span>ReadSingle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadSingle </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a80fcae52ebd22f86ac89cce6cb8afc38" name="a80fcae52ebd22f86ac89cce6cb8afc38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80fcae52ebd22f86ac89cce6cb8afc38">&#9670;&#160;</a></span>ReadString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadString </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa8d7f149c315cef5429ac36305ed6eb2" name="aa8d7f149c315cef5429ac36305ed6eb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8d7f149c315cef5429ac36305ed6eb2">&#9670;&#160;</a></span>ReadUInt16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadUInt16 </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9fb05a3f72a8dd3c3cc6b6e65452b11d" name="a9fb05a3f72a8dd3c3cc6b6e65452b11d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fb05a3f72a8dd3c3cc6b6e65452b11d">&#9670;&#160;</a></span>ReadUInt32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadUInt32 </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0f2d84f42bb3128773c6f9e45e382166" name="a0f2d84f42bb3128773c6f9e45e382166"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f2d84f42bb3128773c6f9e45e382166">&#9670;&#160;</a></span>ReadUInt64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadUInt64 </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long long &amp;</td>          <td class="paramname"><span class="paramname"><em>theResult</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa89ae0c3d1bd394353d7dacc1cb95216" name="aa89ae0c3d1bd394353d7dacc1cb95216"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa89ae0c3d1bd394353d7dacc1cb95216">&#9670;&#160;</a></span>ReadValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ReadValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theValueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD &amp;</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ead5e726b0eb64dfc6ae2e74e687597" name="a5ead5e726b0eb64dfc6ae2e74e687597"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ead5e726b0eb64dfc6ae2e74e687597">&#9670;&#160;</a></span>RenameKey() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RenameKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldSubKeyName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newSubKeyName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a920f5d74064ce365b40f05e5ffc5c133" name="a920f5d74064ce365b40f05e5ffc5c133"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a920f5d74064ce365b40f05e5ffc5c133">&#9670;&#160;</a></span>RenameKey() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RenameKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>oldSubKeyName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>newSubKeyName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7089fb32eeaf24f4be7697eb374a015c" name="a7089fb32eeaf24f4be7697eb374a015c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7089fb32eeaf24f4be7697eb374a015c">&#9670;&#160;</a></span>RenameKey() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RenameKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldSubKeyName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newSubKeyName</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9a12edfe1da83b5d590f75780bb8c430" name="a9a12edfe1da83b5d590f75780bb8c430"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a12edfe1da83b5d590f75780bb8c430">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0594be726675d72b7888596a45fd3f26" name="a0594be726675d72b7888596a45fd3f26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0594be726675d72b7888596a45fd3f26">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae6086ee85fd273ecb9c98dbc9955c769" name="ae6086ee85fd273ecb9c98dbc9955c769"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6086ee85fd273ecb9c98dbc9955c769">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acc4357c1724ab730d4814b8b43dde071" name="acc4357c1724ab730d4814b8b43dde071"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc4357c1724ab730d4814b8b43dde071">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a789ea3b96daa1b7aed719a53c16d7255" name="a789ea3b96daa1b7aed719a53c16d7255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a789ea3b96daa1b7aed719a53c16d7255">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae3274303a2e99827dcc44326a2764aef" name="ae3274303a2e99827dcc44326a2764aef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3274303a2e99827dcc44326a2764aef">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c50e0f5f3fdbe35e3ac3d903ceb2cef" name="a3c50e0f5f3fdbe35e3ac3d903ceb2cef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c50e0f5f3fdbe35e3ac3d903ceb2cef">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9e680e62fe0eab26a8016daa5993f2cb" name="a9e680e62fe0eab26a8016daa5993f2cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e680e62fe0eab26a8016daa5993f2cb">&#9670;&#160;</a></span>ReplaceKey() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ReplaceKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theSubKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6ba3c28b9b253b801376e3866ac12ddd" name="a6ba3c28b9b253b801376e3866ac12ddd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ba3c28b9b253b801376e3866ac12ddd">&#9670;&#160;</a></span>ResetPredefinedKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::ResetPredefinedKey </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa66e9da756df1fe85972ab33c9006449" name="aa66e9da756df1fe85972ab33c9006449"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa66e9da756df1fe85972ab33c9006449">&#9670;&#160;</a></span>RestoreKey() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RestoreKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3586723d2c5662dff55a5aa9820aa2c6" name="a3586723d2c5662dff55a5aa9820aa2c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3586723d2c5662dff55a5aa9820aa2c6">&#9670;&#160;</a></span>RestoreKey() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RestoreKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d6cda7a79e53d473342cd708519ffc4" name="a0d6cda7a79e53d473342cd708519ffc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d6cda7a79e53d473342cd708519ffc4">&#9670;&#160;</a></span>RestoreKey() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RestoreKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8e4bab204b0c4667e8fb189fd2816ccb" name="a8e4bab204b0c4667e8fb189fd2816ccb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e4bab204b0c4667e8fb189fd2816ccb">&#9670;&#160;</a></span>RestoreKey() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::RestoreKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>oldFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae15ebeeab5f1352a5699f307ebe9d0ac" name="ae15ebeeab5f1352a5699f307ebe9d0ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae15ebeeab5f1352a5699f307ebe9d0ac">&#9670;&#160;</a></span>SaveKey() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2ad4b3cfcceda7a6cff4a716e96d6156" name="a2ad4b3cfcceda7a6cff4a716e96d6156"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ad4b3cfcceda7a6cff4a716e96d6156">&#9670;&#160;</a></span>SaveKey() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a11b881dda4e17c275a51732d471645f2" name="a11b881dda4e17c275a51732d471645f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11b881dda4e17c275a51732d471645f2">&#9670;&#160;</a></span>SaveKey() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a21cd990d12d6f2d5c9765e19db3f3e65" name="a21cd990d12d6f2d5c9765e19db3f3e65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21cd990d12d6f2d5c9765e19db3f3e65">&#9670;&#160;</a></span>SaveKey() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1a5929bdea8f7a8c6eab8c0ab5a4ebea" name="a1a5929bdea8f7a8c6eab8c0ab5a4ebea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a5929bdea8f7a8c6eab8c0ab5a4ebea">&#9670;&#160;</a></span>SaveKey() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af3120985878f2819aa993db120982cac" name="af3120985878f2819aa993db120982cac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3120985878f2819aa993db120982cac">&#9670;&#160;</a></span>SaveKey() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae6f327ceb1e3f8e2046417f6c0d47512" name="ae6f327ceb1e3f8e2046417f6c0d47512"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6f327ceb1e3f8e2046417f6c0d47512">&#9670;&#160;</a></span>SaveKey() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1cba60c701efff07d248f8f019a17a26" name="a1cba60c701efff07d248f8f019a17a26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cba60c701efff07d248f8f019a17a26">&#9670;&#160;</a></span>SaveKey() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SaveKey </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>theFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSECURITY_ATTRIBUTES</td>          <td class="paramname"><span class="paramname"><em>theSecurityAttributes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a372eca76cde45255824cb829dcf79fc3" name="a372eca76cde45255824cb829dcf79fc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a372eca76cde45255824cb829dcf79fc3">&#9670;&#160;</a></span>SetKeySecurity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetKeySecurity </td>
          <td>(</td>
          <td class="paramtype">SECURITY_INFORMATION</td>          <td class="paramname"><span class="paramname"><em>SecurityInformation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PSECURITY_DESCRIPTOR</td>          <td class="paramname"><span class="paramname"><em>pSecurityDescriptor</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a962e9249a1d0271e4a66c6acef03cf8e" name="a962e9249a1d0271e4a66c6acef03cf8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a962e9249a1d0271e4a66c6acef03cf8e">&#9670;&#160;</a></span>SetValue() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b08a175b43db98b25da074bd6bc583e" name="a3b08a175b43db98b25da074bd6bc583e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b08a175b43db98b25da074bd6bc583e">&#9670;&#160;</a></span>SetValue() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4b41efbd560e2327320ab46859edc75" name="aa4b41efbd560e2327320ab46859edc75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4b41efbd560e2327320ab46859edc75">&#9670;&#160;</a></span>SetValue() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab9574ca579ce983a73f48a4f0ec2e49d" name="ab9574ca579ce983a73f48a4f0ec2e49d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9574ca579ce983a73f48a4f0ec2e49d">&#9670;&#160;</a></span>SetValue() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a></td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae298cc83cbed690e83ae2041deb0d891" name="ae298cc83cbed690e83ae2041deb0d891"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae298cc83cbed690e83ae2041deb0d891">&#9670;&#160;</a></span>SetValue() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ef85ce1e8396fb145ccd68e692ca2ab" name="a3ef85ce1e8396fb145ccd68e692ca2ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ef85ce1e8396fb145ccd68e692ca2ab">&#9670;&#160;</a></span>SetValue() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a></td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad1d1bcba19fff217bc265c52c5584998" name="ad1d1bcba19fff217bc265c52c5584998"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1d1bcba19fff217bc265c52c5584998">&#9670;&#160;</a></span>SetValue() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad035abc565f49d922f84b2ffc484bda0" name="ad035abc565f49d922f84b2ffc484bda0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad035abc565f49d922f84b2ffc484bda0">&#9670;&#160;</a></span>SetValue() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a></td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae8095fd7ac0f02c768077561fc45df6e" name="ae8095fd7ac0f02c768077561fc45df6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8095fd7ac0f02c768077561fc45df6e">&#9670;&#160;</a></span>SetValue() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a073a8b1f9f8cd029715171a2f8743aa8" name="a073a8b1f9f8cd029715171a2f8743aa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a073a8b1f9f8cd029715171a2f8743aa8">&#9670;&#160;</a></span>SetValue() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa5230bf143a78f617a2ed1eaa43e433f" name="aa5230bf143a78f617a2ed1eaa43e433f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5230bf143a78f617a2ed1eaa43e433f">&#9670;&#160;</a></span>SetValue() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6b26015ab85172b201368f58d6394c3a" name="a6b26015ab85172b201368f58d6394c3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b26015ab85172b201368f58d6394c3a">&#9670;&#160;</a></span>SetValue() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>valueName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a></td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac9e6aa6db9eb3786943ae55299d6151c" name="ac9e6aa6db9eb3786943ae55299d6151c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9e6aa6db9eb3786943ae55299d6151c">&#9670;&#160;</a></span>SetValue() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a768acd03a3f82b9715b8b31bd66fffb9" name="a768acd03a3f82b9715b8b31bd66fffb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a768acd03a3f82b9715b8b31bd66fffb9">&#9670;&#160;</a></span>SetValue() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a></td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad9a6e1104e369a1dfd556975e1e059dd" name="ad9a6e1104e369a1dfd556975e1e059dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9a6e1104e369a1dfd556975e1e059dd">&#9670;&#160;</a></span>SetValueA() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValueA </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a37bd65f60e1c5545c29486e9e8ac0986" name="a37bd65f60e1c5545c29486e9e8ac0986"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37bd65f60e1c5545c29486e9e8ac0986">&#9670;&#160;</a></span>SetValueA() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::RegistryHandle::SetValueA </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7455fc61e50b242f5b869d865f02e8dc">RegistryValueType</a></td>          <td class="paramname"><span class="paramname"><em>valueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>sizeOfData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4e345a4f49fbb5df208691de0e3e771a" name="a4e345a4f49fbb5df208691de0e3e771a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e345a4f49fbb5df208691de0e3e771a">&#9670;&#160;</a></span>ToBoolean()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::RegistryHandle::ToBoolean </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a90d8726decdd4d6d6dc2611c528fc626" name="a90d8726decdd4d6d6dc2611c528fc626"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90d8726decdd4d6d6dc2611c528fc626">&#9670;&#160;</a></span>ToByte()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char Harlinn::Common::Core::RegistryHandle::ToByte </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0a3960af98aed918867d0f6c1db6b110" name="a0a3960af98aed918867d0f6c1db6b110"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a3960af98aed918867d0f6c1db6b110">&#9670;&#160;</a></span>ToDouble()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Common::Core::RegistryHandle::ToDouble </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7556ff4ab7575415c2a559536979a9b0" name="a7556ff4ab7575415c2a559536979a9b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7556ff4ab7575415c2a559536979a9b0">&#9670;&#160;</a></span>ToInt16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">short Harlinn::Common::Core::RegistryHandle::ToInt16 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae524e5cbb5d69e3c5f920083be68abff" name="ae524e5cbb5d69e3c5f920083be68abff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae524e5cbb5d69e3c5f920083be68abff">&#9670;&#160;</a></span>ToInt32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::RegistryHandle::ToInt32 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a699eb863a1c7b0945e7e56e9f2a5dda1" name="a699eb863a1c7b0945e7e56e9f2a5dda1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a699eb863a1c7b0945e7e56e9f2a5dda1">&#9670;&#160;</a></span>ToInt64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::RegistryHandle::ToInt64 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad816b2a7065092b0c9e3037cf54e7e58" name="ad816b2a7065092b0c9e3037cf54e7e58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad816b2a7065092b0c9e3037cf54e7e58">&#9670;&#160;</a></span>ToSByte()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char Harlinn::Common::Core::RegistryHandle::ToSByte </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ec41f6a4ef1eb82609b65e483d84512" name="a9ec41f6a4ef1eb82609b65e483d84512"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ec41f6a4ef1eb82609b65e483d84512">&#9670;&#160;</a></span>ToSingle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float Harlinn::Common::Core::RegistryHandle::ToSingle </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa9946caa9b05c387699cdfa6bc590adc" name="aa9946caa9b05c387699cdfa6bc590adc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9946caa9b05c387699cdfa6bc590adc">&#9670;&#160;</a></span>ToString() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::RegistryHandle::ToString </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad5447816f8e9e58af2920d825af16638" name="ad5447816f8e9e58af2920d825af16638"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5447816f8e9e58af2920d825af16638">&#9670;&#160;</a></span>ToString() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::RegistryHandle::ToString </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2f7ab2868514674a7b67b2591291f186" name="a2f7ab2868514674a7b67b2591291f186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7ab2868514674a7b67b2591291f186">&#9670;&#160;</a></span>ToUInt16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short Harlinn::Common::Core::RegistryHandle::ToUInt16 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a551eb3ed8e758177b49b0bf0a25ba1cf" name="a551eb3ed8e758177b49b0bf0a25ba1cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a551eb3ed8e758177b49b0bf0a25ba1cf">&#9670;&#160;</a></span>ToUInt32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int Harlinn::Common::Core::RegistryHandle::ToUInt32 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae1acffaa962c205ea1253314437bf87d" name="ae1acffaa962c205ea1253314437bf87d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1acffaa962c205ea1253314437bf87d">&#9670;&#160;</a></span>ToUInt64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long long Harlinn::Common::Core::RegistryHandle::ToUInt64 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>theValueType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>theData</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aed6efface3c167e93eafb5bed15d1f66" name="aed6efface3c167e93eafb5bed15d1f66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed6efface3c167e93eafb5bed15d1f66">&#9670;&#160;</a></span>Users()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a> Harlinn::Common::Core::RegistryHandle::Users </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_registry_8h.xhtml">HCCRegistry.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_registry_handle.xhtml">RegistryHandle</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
