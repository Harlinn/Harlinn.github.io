<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_context.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_context-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HWGraphicsD3D11.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_context__inherit__graph.svg" width="218" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_context__coll__graph.svg" width="210" height="227"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa9792831740e1cb40093b65fd918a634" id="r_aa9792831740e1cb40093b65fd918a634"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa9792831740e1cb40093b65fd918a634">VSSetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *constantBuffers) const</td></tr>
<tr class="separator:aa9792831740e1cb40093b65fd918a634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61e08e2880e14a877d6b152e5073e98e" id="r_a61e08e2880e14a877d6b152e5073e98e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61e08e2880e14a877d6b152e5073e98e">PSSetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView *const *shaderResourceViews) const</td></tr>
<tr class="separator:a61e08e2880e14a877d6b152e5073e98e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43d399225cfdc2ca0b018d1fda4a06b8" id="r_a43d399225cfdc2ca0b018d1fda4a06b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a43d399225cfdc2ca0b018d1fda4a06b8">PSSetShader</a> (ID3D11PixelShader *pixelShader, ID3D11ClassInstance *const *classInstances, UINT numberOfClassInstances) const</td></tr>
<tr class="separator:a43d399225cfdc2ca0b018d1fda4a06b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17c62c642f54160a6554f01d1363615c" id="r_a17c62c642f54160a6554f01d1363615c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a17c62c642f54160a6554f01d1363615c">PSSetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState *const *samplers) const</td></tr>
<tr class="separator:a17c62c642f54160a6554f01d1363615c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e73f918776fd58e0e2f72c61e429f30" id="r_a1e73f918776fd58e0e2f72c61e429f30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1e73f918776fd58e0e2f72c61e429f30">VSSetShader</a> (ID3D11VertexShader *vertexShader, ID3D11ClassInstance *const *classInstances, UINT numberOfClassInstances) const</td></tr>
<tr class="separator:a1e73f918776fd58e0e2f72c61e429f30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366a269df5d0ac071d26b8b475092477" id="r_a366a269df5d0ac071d26b8b475092477"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a366a269df5d0ac071d26b8b475092477">DrawIndexed</a> (UINT indexCount, UINT startIndexLocation, INT baseVertexLocation) const</td></tr>
<tr class="separator:a366a269df5d0ac071d26b8b475092477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44638c7a6266e796fd416bee8534ebf6" id="r_a44638c7a6266e796fd416bee8534ebf6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a44638c7a6266e796fd416bee8534ebf6">Draw</a> (UINT vertexCount, UINT startVertexLocation) const</td></tr>
<tr class="separator:a44638c7a6266e796fd416bee8534ebf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e3ca0273f9a876331c5bec380f17acc" id="r_a5e3ca0273f9a876331c5bec380f17acc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5e3ca0273f9a876331c5bec380f17acc">Map</a> (ID3D11Resource *resource, UINT subresource, D3D11_MAP mapType, UINT mapFlags, D3D11_MAPPED_SUBRESOURCE *mappedResource) const</td></tr>
<tr class="separator:a5e3ca0273f9a876331c5bec380f17acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a205a25051bf255cd6029584c439562e0" id="r_a205a25051bf255cd6029584c439562e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a205a25051bf255cd6029584c439562e0">Unmap</a> (ID3D11Resource *resource, UINT subresource) const</td></tr>
<tr class="separator:a205a25051bf255cd6029584c439562e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a267e0ca35d0dc5b54e76d365d9c0f44e" id="r_a267e0ca35d0dc5b54e76d365d9c0f44e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a267e0ca35d0dc5b54e76d365d9c0f44e">PSSetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *constantBuffers) const</td></tr>
<tr class="separator:a267e0ca35d0dc5b54e76d365d9c0f44e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c3c21267f66f1d250576c95763a801b" id="r_a9c3c21267f66f1d250576c95763a801b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c3c21267f66f1d250576c95763a801b">IASetInputLayout</a> (ID3D11InputLayout *inputLayout) const</td></tr>
<tr class="separator:a9c3c21267f66f1d250576c95763a801b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e2599e5fbb34e0322e84a6c10cfffaf" id="r_a2e2599e5fbb34e0322e84a6c10cfffaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2e2599e5fbb34e0322e84a6c10cfffaf">IASetVertexBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *vertexBuffers, const UINT *strides, const UINT *offsets) const</td></tr>
<tr class="separator:a2e2599e5fbb34e0322e84a6c10cfffaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa80bc962eb12e9dcf911d862fbd39eb" id="r_aaa80bc962eb12e9dcf911d862fbd39eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa80bc962eb12e9dcf911d862fbd39eb">IASetIndexBuffer</a> (ID3D11Buffer *indexBuffer, DXGI_FORMAT format, UINT offset) const</td></tr>
<tr class="separator:aaa80bc962eb12e9dcf911d862fbd39eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b92df76d15075c0e320e9187e69697d" id="r_a7b92df76d15075c0e320e9187e69697d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b92df76d15075c0e320e9187e69697d">DrawIndexedInstanced</a> (UINT indexCountPerInstance, UINT instanceCount, UINT startIndexLocation, INT baseVertexLocation, UINT startInstanceLocation) const</td></tr>
<tr class="separator:a7b92df76d15075c0e320e9187e69697d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c109f820dbf241c84e3ca181cc29c43" id="r_a2c109f820dbf241c84e3ca181cc29c43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c109f820dbf241c84e3ca181cc29c43">DrawInstanced</a> (UINT vertexCountPerInstance, UINT instanceCount, UINT startVertexLocation, UINT StartInstanceLocation) const</td></tr>
<tr class="separator:a2c109f820dbf241c84e3ca181cc29c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11b409bed259908ec22d1e7974898ad4" id="r_a11b409bed259908ec22d1e7974898ad4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a11b409bed259908ec22d1e7974898ad4">GSSetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *constantBuffers) const</td></tr>
<tr class="separator:a11b409bed259908ec22d1e7974898ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bab1bf93c749849c32eec9b3a9c54ec" id="r_a7bab1bf93c749849c32eec9b3a9c54ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7bab1bf93c749849c32eec9b3a9c54ec">GSSetShader</a> (ID3D11GeometryShader *shader, ID3D11ClassInstance *const *classInstances, UINT numberOfClassInstances) const</td></tr>
<tr class="separator:a7bab1bf93c749849c32eec9b3a9c54ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e141f04d306260db4d4fac99d93326a" id="r_a1e141f04d306260db4d4fac99d93326a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1e141f04d306260db4d4fac99d93326a">IASetPrimitiveTopology</a> (D3D11_PRIMITIVE_TOPOLOGY topology) const</td></tr>
<tr class="separator:a1e141f04d306260db4d4fac99d93326a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb5e2eb2931c1c0f93f7c381d92cac75" id="r_aeb5e2eb2931c1c0f93f7c381d92cac75"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeb5e2eb2931c1c0f93f7c381d92cac75">VSSetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView *const *shaderResourceViews) const</td></tr>
<tr class="separator:aeb5e2eb2931c1c0f93f7c381d92cac75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac732392a51a3b4e238d10afa45cbc01c" id="r_ac732392a51a3b4e238d10afa45cbc01c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac732392a51a3b4e238d10afa45cbc01c">VSSetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState *const *samplers) const</td></tr>
<tr class="separator:ac732392a51a3b4e238d10afa45cbc01c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af46fcfed90b94bd3e941d2ca1aa1e57c" id="r_af46fcfed90b94bd3e941d2ca1aa1e57c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af46fcfed90b94bd3e941d2ca1aa1e57c">Begin</a> (ID3D11Asynchronous *async) const</td></tr>
<tr class="separator:af46fcfed90b94bd3e941d2ca1aa1e57c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fc90003216de01f0bad090886fe98da" id="r_a2fc90003216de01f0bad090886fe98da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fc90003216de01f0bad090886fe98da">End</a> (ID3D11Asynchronous *async) const</td></tr>
<tr class="separator:a2fc90003216de01f0bad090886fe98da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0c44e195ba0cc33c33a468085250dab" id="r_ab0c44e195ba0cc33c33a468085250dab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab0c44e195ba0cc33c33a468085250dab">GetData</a> (ID3D11Asynchronous *async, void *data, UINT dataSize, UINT dataFlags) const</td></tr>
<tr class="separator:ab0c44e195ba0cc33c33a468085250dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3a9009cf36ee39282638c799c32d8b1" id="r_ab3a9009cf36ee39282638c799c32d8b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3a9009cf36ee39282638c799c32d8b1">SetPredication</a> (ID3D11Predicate *predicate, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> predicateValue) const</td></tr>
<tr class="separator:ab3a9009cf36ee39282638c799c32d8b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fe82a9b84da2b0a8dd568caa2c552a1" id="r_a1fe82a9b84da2b0a8dd568caa2c552a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1fe82a9b84da2b0a8dd568caa2c552a1">GSSetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView *const *shaderResourceViews) const</td></tr>
<tr class="separator:a1fe82a9b84da2b0a8dd568caa2c552a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d00b8a5d1bdfca998fab6cedb588ae7" id="r_a8d00b8a5d1bdfca998fab6cedb588ae7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d00b8a5d1bdfca998fab6cedb588ae7">GSSetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState *const *samplers) const</td></tr>
<tr class="separator:a8d00b8a5d1bdfca998fab6cedb588ae7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab156bac66d35a414ffebd088e37f8105" id="r_ab156bac66d35a414ffebd088e37f8105"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab156bac66d35a414ffebd088e37f8105">OMSetRenderTargets</a> (UINT numberOfViews, ID3D11RenderTargetView *const *renderTargetViews, ID3D11DepthStencilView *depthStencilView) const</td></tr>
<tr class="separator:ab156bac66d35a414ffebd088e37f8105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9f4ef26fb794973a9aad09da391008f" id="r_af9f4ef26fb794973a9aad09da391008f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af9f4ef26fb794973a9aad09da391008f">OMSetRenderTargetsAndUnorderedAccessViews</a> (UINT numberOfRenderTargetViews, ID3D11RenderTargetView *const *renderTargetViews, ID3D11DepthStencilView *depthStencilView, UINT unorderedAccessViewsStartSlot, UINT numberOfUnorderedAccessViews, ID3D11UnorderedAccessView *const *unorderedAccessViews, const UINT *unorderedAccessViewsInitialCounts) const</td></tr>
<tr class="separator:af9f4ef26fb794973a9aad09da391008f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af606bfabd82eec59b59767e01a79a769" id="r_af606bfabd82eec59b59767e01a79a769"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af606bfabd82eec59b59767e01a79a769">OMSetBlendState</a> (ID3D11BlendState *blendState, const FLOAT blendFactor[4], UINT sampleMask) const</td></tr>
<tr class="separator:af606bfabd82eec59b59767e01a79a769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a898219cbda3cfe49bd45610a80309715" id="r_a898219cbda3cfe49bd45610a80309715"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a898219cbda3cfe49bd45610a80309715">OMSetDepthStencilState</a> (ID3D11DepthStencilState *depthStencilState, UINT stencilRef) const</td></tr>
<tr class="separator:a898219cbda3cfe49bd45610a80309715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a493152cc6ef97898623d179ac3f3d5a7" id="r_a493152cc6ef97898623d179ac3f3d5a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a493152cc6ef97898623d179ac3f3d5a7">SOSetTargets</a> (UINT numberOfBuffers, ID3D11Buffer *const *streamOutputTargets, const UINT *offsets) const</td></tr>
<tr class="separator:a493152cc6ef97898623d179ac3f3d5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad88e6ba9ac7fc4732dd963244711e6eb" id="r_ad88e6ba9ac7fc4732dd963244711e6eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad88e6ba9ac7fc4732dd963244711e6eb">DrawAuto</a> () const</td></tr>
<tr class="separator:ad88e6ba9ac7fc4732dd963244711e6eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6bbfcc69223da85b1fe89a39c7d4f29" id="r_af6bbfcc69223da85b1fe89a39c7d4f29"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af6bbfcc69223da85b1fe89a39c7d4f29">DrawIndexedInstancedIndirect</a> (ID3D11Buffer *bufferForArgs, UINT alignedByteOffsetForArgs) const</td></tr>
<tr class="separator:af6bbfcc69223da85b1fe89a39c7d4f29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5e06da860e60e36408b53d9afa6bd35" id="r_ac5e06da860e60e36408b53d9afa6bd35"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac5e06da860e60e36408b53d9afa6bd35">DrawInstancedIndirect</a> (ID3D11Buffer *bufferForArgs, UINT alignedByteOffsetForArgs) const</td></tr>
<tr class="separator:ac5e06da860e60e36408b53d9afa6bd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad94af3df006c23ac59d59232aaa1854c" id="r_ad94af3df006c23ac59d59232aaa1854c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad94af3df006c23ac59d59232aaa1854c">Dispatch</a> (UINT threadGroupCountX, UINT threadGroupCountY, UINT threadGroupCountZ) const</td></tr>
<tr class="separator:ad94af3df006c23ac59d59232aaa1854c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a00d138f8239815f77e4cc3a5c4489e" id="r_a2a00d138f8239815f77e4cc3a5c4489e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a00d138f8239815f77e4cc3a5c4489e">DispatchIndirect</a> (ID3D11Buffer *bufferForArgs, UINT alignedByteOffsetForArgs) const</td></tr>
<tr class="separator:a2a00d138f8239815f77e4cc3a5c4489e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a473c01daba3bc94df5b385a2af467778" id="r_a473c01daba3bc94df5b385a2af467778"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a473c01daba3bc94df5b385a2af467778">RSSetState</a> (ID3D11RasterizerState *rasterizerState) const</td></tr>
<tr class="separator:a473c01daba3bc94df5b385a2af467778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab24db51759ed2b02533dda441fb67311" id="r_ab24db51759ed2b02533dda441fb67311"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab24db51759ed2b02533dda441fb67311">RSSetViewports</a> (UINT numberOfViewports, const D3D11_VIEWPORT *viewports) const</td></tr>
<tr class="separator:ab24db51759ed2b02533dda441fb67311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79c8ba2ef0fbbf1e9bd4777ba31419d6" id="r_a79c8ba2ef0fbbf1e9bd4777ba31419d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a79c8ba2ef0fbbf1e9bd4777ba31419d6">RSSetScissorRects</a> (UINT numberOfRects, const D3D11_RECT *rects) const</td></tr>
<tr class="separator:a79c8ba2ef0fbbf1e9bd4777ba31419d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8bfa60d0933f613ed0ebc682ef9cbd9" id="r_ae8bfa60d0933f613ed0ebc682ef9cbd9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8bfa60d0933f613ed0ebc682ef9cbd9">CopySubresourceRegion</a> (ID3D11Resource *destinationResource, UINT destinationSubresource, UINT destinationX, UINT destinationY, UINT destinationZ, ID3D11Resource *sourceResource, UINT sourceSubresource, const D3D11_BOX *sourceBox) const</td></tr>
<tr class="separator:ae8bfa60d0933f613ed0ebc682ef9cbd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a823ec172bd09286205c5948f6b282394" id="r_a823ec172bd09286205c5948f6b282394"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a823ec172bd09286205c5948f6b282394">CopyResource</a> (ID3D11Resource *destinationResource, ID3D11Resource *sourceResource) const</td></tr>
<tr class="separator:a823ec172bd09286205c5948f6b282394"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf8f5ba08bfc783037249a6db7a146b8" id="r_acf8f5ba08bfc783037249a6db7a146b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf8f5ba08bfc783037249a6db7a146b8">UpdateSubresource</a> (ID3D11Resource *destinationResource, UINT destinationSubresource, const D3D11_BOX *destinationBox, const void *sourceData, UINT sourceRowPitch, UINT sourceDepthPitch) const</td></tr>
<tr class="separator:acf8f5ba08bfc783037249a6db7a146b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8885c0688c5bba598a69e911eaf3631" id="r_ad8885c0688c5bba598a69e911eaf3631"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8885c0688c5bba598a69e911eaf3631">CopyStructureCount</a> (ID3D11Buffer *destinationBuffer, UINT destinationAlignedByteOffset, ID3D11UnorderedAccessView *sourceView) const</td></tr>
<tr class="separator:ad8885c0688c5bba598a69e911eaf3631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80a75a8837b04844e14bf707e1ac1205" id="r_a80a75a8837b04844e14bf707e1ac1205"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a80a75a8837b04844e14bf707e1ac1205">ClearRenderTargetView</a> (ID3D11RenderTargetView *renderTargetView, const FLOAT colorRGBA[4]) const</td></tr>
<tr class="separator:a80a75a8837b04844e14bf707e1ac1205"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac16a360f9b330ee3cd061e90328a70e4" id="r_ac16a360f9b330ee3cd061e90328a70e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac16a360f9b330ee3cd061e90328a70e4">ClearUnorderedAccessViewUint</a> (ID3D11UnorderedAccessView *unorderedAccessView, const UINT values[4]) const</td></tr>
<tr class="separator:ac16a360f9b330ee3cd061e90328a70e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63de96e4bc9e72ebd46651a243c90882" id="r_a63de96e4bc9e72ebd46651a243c90882"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a63de96e4bc9e72ebd46651a243c90882">ClearUnorderedAccessViewFloat</a> (ID3D11UnorderedAccessView *unorderedAccessView, const FLOAT values[4]) const</td></tr>
<tr class="separator:a63de96e4bc9e72ebd46651a243c90882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd8c49a377bf64bbcfcf1c1d1121e0a4" id="r_acd8c49a377bf64bbcfcf1c1d1121e0a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acd8c49a377bf64bbcfcf1c1d1121e0a4">ClearDepthStencilView</a> (ID3D11DepthStencilView *depthStencilView, UINT clearFlags, FLOAT depth, UINT8 stencil) const</td></tr>
<tr class="separator:acd8c49a377bf64bbcfcf1c1d1121e0a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e7d09535a36fd0afb3c49c3029db3d5" id="r_a7e7d09535a36fd0afb3c49c3029db3d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7e7d09535a36fd0afb3c49c3029db3d5">GenerateMips</a> (ID3D11ShaderResourceView *shaderResourceView) const</td></tr>
<tr class="separator:a7e7d09535a36fd0afb3c49c3029db3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c3932bc3a5eb5ab3f359201d4d74642" id="r_a2c3932bc3a5eb5ab3f359201d4d74642"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c3932bc3a5eb5ab3f359201d4d74642">SetResourceMinLOD</a> (ID3D11Resource *resource, FLOAT minLOD) const</td></tr>
<tr class="separator:a2c3932bc3a5eb5ab3f359201d4d74642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ff99ac004df1c693c70d255dba732d" id="r_a75ff99ac004df1c693c70d255dba732d"><td class="memItemLeft" align="right" valign="top">FLOAT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a75ff99ac004df1c693c70d255dba732d">GetResourceMinLOD</a> (ID3D11Resource *resource) const</td></tr>
<tr class="separator:a75ff99ac004df1c693c70d255dba732d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f136a28d4915fd77ec79f4869bff39" id="r_a64f136a28d4915fd77ec79f4869bff39"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a64f136a28d4915fd77ec79f4869bff39">ResolveSubresource</a> (ID3D11Resource *destinationResource, UINT destinationSubresource, ID3D11Resource *sourceResource, UINT sourceSubresource, DXGI_FORMAT format) const</td></tr>
<tr class="separator:a64f136a28d4915fd77ec79f4869bff39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9267e73ad3cc6f0932dc0e35ef75215" id="r_ad9267e73ad3cc6f0932dc0e35ef75215"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad9267e73ad3cc6f0932dc0e35ef75215">ExecuteCommandList</a> (ID3D11CommandList *commandList, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> restoreContextState) const</td></tr>
<tr class="separator:ad9267e73ad3cc6f0932dc0e35ef75215"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a784accbfc682e999a803aeea77b999a8" id="r_a784accbfc682e999a803aeea77b999a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a784accbfc682e999a803aeea77b999a8">HSSetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView *const *shaderResourceViews) const</td></tr>
<tr class="separator:a784accbfc682e999a803aeea77b999a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a633f5eeb54aa981f90b0940503be42ca" id="r_a633f5eeb54aa981f90b0940503be42ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a633f5eeb54aa981f90b0940503be42ca">HSSetShader</a> (ID3D11HullShader *hullShader, ID3D11ClassInstance *const *classInstances, UINT numberOfClassInstances) const</td></tr>
<tr class="separator:a633f5eeb54aa981f90b0940503be42ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae481626efdbc0ae68be32a98c45e166e" id="r_ae481626efdbc0ae68be32a98c45e166e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae481626efdbc0ae68be32a98c45e166e">HSSetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState *const *samplers) const</td></tr>
<tr class="separator:ae481626efdbc0ae68be32a98c45e166e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a00d1b8c95e0eed44dd255b45b509f6" id="r_a3a00d1b8c95e0eed44dd255b45b509f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a00d1b8c95e0eed44dd255b45b509f6">HSSetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *constantBuffers) const</td></tr>
<tr class="separator:a3a00d1b8c95e0eed44dd255b45b509f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bcbae8c15ad93408cbcdfb2c8890f46" id="r_a7bcbae8c15ad93408cbcdfb2c8890f46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7bcbae8c15ad93408cbcdfb2c8890f46">DSSetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView *const *shaderResourceViews) const</td></tr>
<tr class="separator:a7bcbae8c15ad93408cbcdfb2c8890f46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3265b33e619955e9ce98586748bef70" id="r_ab3265b33e619955e9ce98586748bef70"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3265b33e619955e9ce98586748bef70">DSSetShader</a> (ID3D11DomainShader *domainShader, ID3D11ClassInstance *const *classInstances, UINT numberOfClassInstances) const</td></tr>
<tr class="separator:ab3265b33e619955e9ce98586748bef70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76e13c50b6e6f05341c8282ac5c4b7a7" id="r_a76e13c50b6e6f05341c8282ac5c4b7a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a76e13c50b6e6f05341c8282ac5c4b7a7">DSSetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState *const *samplers) const</td></tr>
<tr class="separator:a76e13c50b6e6f05341c8282ac5c4b7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0780b4fe25d115aadd7ad4ae17d7cd0" id="r_aa0780b4fe25d115aadd7ad4ae17d7cd0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa0780b4fe25d115aadd7ad4ae17d7cd0">DSSetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *constantBuffers) const</td></tr>
<tr class="separator:aa0780b4fe25d115aadd7ad4ae17d7cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9489dfae111abb2bb12074bc5dcba837" id="r_a9489dfae111abb2bb12074bc5dcba837"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9489dfae111abb2bb12074bc5dcba837">CSSetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView *const *shaderResourceViews) const</td></tr>
<tr class="separator:a9489dfae111abb2bb12074bc5dcba837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6ef35b396177f72dfc6d886676ec9a" id="r_a1d6ef35b396177f72dfc6d886676ec9a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1d6ef35b396177f72dfc6d886676ec9a">CSSetUnorderedAccessViews</a> (UINT startSlot, UINT numberOfunorderedAccessViews, ID3D11UnorderedAccessView *const *unorderedAccessViews, const UINT *unorderedAccessViewsInitialCounts) const</td></tr>
<tr class="separator:a1d6ef35b396177f72dfc6d886676ec9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4346c94bdc5147b63e97d4ca473303bb" id="r_a4346c94bdc5147b63e97d4ca473303bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4346c94bdc5147b63e97d4ca473303bb">CSSetShader</a> (ID3D11ComputeShader *computeShader, ID3D11ClassInstance *const *classInstances, UINT numberOfClassInstances) const</td></tr>
<tr class="separator:a4346c94bdc5147b63e97d4ca473303bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fe40f1f35bd4f585ba7e271a92a6746" id="r_a1fe40f1f35bd4f585ba7e271a92a6746"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1fe40f1f35bd4f585ba7e271a92a6746">CSSetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState *const *samplers) const</td></tr>
<tr class="separator:a1fe40f1f35bd4f585ba7e271a92a6746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ab42d71d7c91e003c19daf801cddee4" id="r_a8ab42d71d7c91e003c19daf801cddee4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8ab42d71d7c91e003c19daf801cddee4">CSSetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer *const *constantBuffers) const</td></tr>
<tr class="separator:a8ab42d71d7c91e003c19daf801cddee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71a8244ec1dcbf48208863549463f1f5" id="r_a71a8244ec1dcbf48208863549463f1f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a71a8244ec1dcbf48208863549463f1f5">VSGetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer **constantBuffers) const</td></tr>
<tr class="separator:a71a8244ec1dcbf48208863549463f1f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a718d141a3656ac7bce95de5d1754691d" id="r_a718d141a3656ac7bce95de5d1754691d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a718d141a3656ac7bce95de5d1754691d">PSGetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView **shaderResourceViews) const</td></tr>
<tr class="separator:a718d141a3656ac7bce95de5d1754691d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ccb01dd7e86e8dbfa1ffd3090c6dd93" id="r_a4ccb01dd7e86e8dbfa1ffd3090c6dd93"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ccb01dd7e86e8dbfa1ffd3090c6dd93">PSGetShader</a> (ID3D11PixelShader **pixelShader, ID3D11ClassInstance **classInstances, UINT *numberOfClassInstances) const</td></tr>
<tr class="separator:a4ccb01dd7e86e8dbfa1ffd3090c6dd93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70042005fa08169d75bc8f4a2e6d48e1" id="r_a70042005fa08169d75bc8f4a2e6d48e1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a70042005fa08169d75bc8f4a2e6d48e1">PSGetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState **samplers) const</td></tr>
<tr class="separator:a70042005fa08169d75bc8f4a2e6d48e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6245799e73bc03955ef06831a28df6ac" id="r_a6245799e73bc03955ef06831a28df6ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6245799e73bc03955ef06831a28df6ac">VSGetShader</a> (ID3D11VertexShader **ppVertexShader, ID3D11ClassInstance **classInstances, UINT *numberOfClassInstances) const</td></tr>
<tr class="separator:a6245799e73bc03955ef06831a28df6ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace612c9008b04bde3a52f97db977c0e" id="r_aace612c9008b04bde3a52f97db977c0e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aace612c9008b04bde3a52f97db977c0e">PSGetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer **constantBuffers) const</td></tr>
<tr class="separator:aace612c9008b04bde3a52f97db977c0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec72bd726d3eaae8b07e4ffc6191dc18" id="r_aec72bd726d3eaae8b07e4ffc6191dc18"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec72bd726d3eaae8b07e4ffc6191dc18">IAGetInputLayout</a> (ID3D11InputLayout **inputLayout) const</td></tr>
<tr class="separator:aec72bd726d3eaae8b07e4ffc6191dc18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a520ebbf0181bb82cf2987726a1ca5dc9" id="r_a520ebbf0181bb82cf2987726a1ca5dc9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a520ebbf0181bb82cf2987726a1ca5dc9">IAGetVertexBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer **vertexBuffers, UINT *strides, UINT *offsets) const</td></tr>
<tr class="separator:a520ebbf0181bb82cf2987726a1ca5dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fbed07f14f1329e5559d6110e00ee65" id="r_a7fbed07f14f1329e5559d6110e00ee65"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7fbed07f14f1329e5559d6110e00ee65">IAGetIndexBuffer</a> (ID3D11Buffer **indexBuffer, DXGI_FORMAT *format, UINT *offset) const</td></tr>
<tr class="separator:a7fbed07f14f1329e5559d6110e00ee65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1970d9d9eb57aedf5c0e28d87ac1ab0" id="r_ab1970d9d9eb57aedf5c0e28d87ac1ab0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab1970d9d9eb57aedf5c0e28d87ac1ab0">GSGetConstantBuffers</a> (UINT startSlot, UINT numberOfBuffers, ID3D11Buffer **constantBuffers) const</td></tr>
<tr class="separator:ab1970d9d9eb57aedf5c0e28d87ac1ab0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e9dbb1ea4b0955deb1ab43027178194" id="r_a5e9dbb1ea4b0955deb1ab43027178194"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5e9dbb1ea4b0955deb1ab43027178194">GSGetShader</a> (ID3D11GeometryShader **geometryShader, ID3D11ClassInstance **classInstances, UINT *numberOfClassInstances) const</td></tr>
<tr class="separator:a5e9dbb1ea4b0955deb1ab43027178194"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a066096bacae41f4f422bd6635589a782" id="r_a066096bacae41f4f422bd6635589a782"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a066096bacae41f4f422bd6635589a782">IAGetPrimitiveTopology</a> (D3D11_PRIMITIVE_TOPOLOGY *topology) const</td></tr>
<tr class="separator:a066096bacae41f4f422bd6635589a782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad14e0df8e4eb18536d6e50263603655c" id="r_ad14e0df8e4eb18536d6e50263603655c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad14e0df8e4eb18536d6e50263603655c">VSGetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView **shaderResourceViews) const</td></tr>
<tr class="separator:ad14e0df8e4eb18536d6e50263603655c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6949b9cca4cbc8c3590dece5feaa71b4" id="r_a6949b9cca4cbc8c3590dece5feaa71b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6949b9cca4cbc8c3590dece5feaa71b4">VSGetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState **samplers) const</td></tr>
<tr class="separator:a6949b9cca4cbc8c3590dece5feaa71b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a809b49bc71328966f296de2a062f3d09" id="r_a809b49bc71328966f296de2a062f3d09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a809b49bc71328966f296de2a062f3d09">GetPredication</a> (ID3D11Predicate **predicate, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *predicateValue) const</td></tr>
<tr class="separator:a809b49bc71328966f296de2a062f3d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1e11e270ea75bf9ed4e9dc1539044d3" id="r_aa1e11e270ea75bf9ed4e9dc1539044d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa1e11e270ea75bf9ed4e9dc1539044d3">GSGetShaderResources</a> (UINT startSlot, UINT numberOfViews, ID3D11ShaderResourceView **shaderResourceViews) const</td></tr>
<tr class="separator:aa1e11e270ea75bf9ed4e9dc1539044d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ecb605f472551fca70a06d759a03bf5" id="r_a1ecb605f472551fca70a06d759a03bf5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ecb605f472551fca70a06d759a03bf5">GSGetSamplers</a> (UINT startSlot, UINT numberOfSamplers, ID3D11SamplerState **samplers) const</td></tr>
<tr class="separator:a1ecb605f472551fca70a06d759a03bf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311f0dbeb108edb264f85574c0dfcc4a" id="r_a311f0dbeb108edb264f85574c0dfcc4a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a311f0dbeb108edb264f85574c0dfcc4a">OMGetRenderTargets</a> (UINT numberOfViews, ID3D11RenderTargetView **renderTargetViews, ID3D11DepthStencilView **depthStencilView) const</td></tr>
<tr class="separator:a311f0dbeb108edb264f85574c0dfcc4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23b7a02b64d1971b24fc51ad1153e425" id="r_a23b7a02b64d1971b24fc51ad1153e425"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23b7a02b64d1971b24fc51ad1153e425">OMGetRenderTargetsAndUnorderedAccessViews</a> (UINT numberOfRenderTargetViews, ID3D11RenderTargetView **renderTargetViews, ID3D11DepthStencilView **depthStencilView, UINT unorderedAccessViewsStartSlot, UINT numberOfUnorderedAccessViews, ID3D11UnorderedAccessView **unorderedAccessViews) const</td></tr>
<tr class="separator:a23b7a02b64d1971b24fc51ad1153e425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af42b9528f9814ea31449611439a3e02c" id="r_af42b9528f9814ea31449611439a3e02c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af42b9528f9814ea31449611439a3e02c">OMGetBlendState</a> (ID3D11BlendState **blendState, FLOAT blendFactor[4], UINT *sampleMask) const</td></tr>
<tr class="separator:af42b9528f9814ea31449611439a3e02c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b50823bb0cf4de0db49919289085520" id="r_a3b50823bb0cf4de0db49919289085520"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b50823bb0cf4de0db49919289085520">OMGetDepthStencilState</a> (ID3D11DepthStencilState **depthStencilState, UINT *stencilRef) const</td></tr>
<tr class="separator:a3b50823bb0cf4de0db49919289085520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a784de19b2d103a12479dfe2e1bc3f0a2" id="r_a784de19b2d103a12479dfe2e1bc3f0a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a784de19b2d103a12479dfe2e1bc3f0a2">SOGetTargets</a> (UINT numBuffers, ID3D11Buffer **soTargets) const</td></tr>
<tr class="separator:a784de19b2d103a12479dfe2e1bc3f0a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18c23a5ed2a60ce1d8d8f9beb59aa175" id="r_a18c23a5ed2a60ce1d8d8f9beb59aa175"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18c23a5ed2a60ce1d8d8f9beb59aa175">RSGetState</a> (ID3D11RasterizerState **rasterizerState) const</td></tr>
<tr class="separator:a18c23a5ed2a60ce1d8d8f9beb59aa175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a910a911deee7ed55ef25aa5b25001ed9" id="r_a910a911deee7ed55ef25aa5b25001ed9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a910a911deee7ed55ef25aa5b25001ed9">RSGetViewports</a> (UINT *numViewports, D3D11_VIEWPORT *viewports) const</td></tr>
<tr class="separator:a910a911deee7ed55ef25aa5b25001ed9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae98c343d92c8b77ae7c8ea1c89c9cfa0" id="r_ae98c343d92c8b77ae7c8ea1c89c9cfa0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae98c343d92c8b77ae7c8ea1c89c9cfa0">RSGetScissorRects</a> (UINT *numRects, D3D11_RECT *rects) const</td></tr>
<tr class="separator:ae98c343d92c8b77ae7c8ea1c89c9cfa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a091b5ff0c05081be878c255f48a1bb77" id="r_a091b5ff0c05081be878c255f48a1bb77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a091b5ff0c05081be878c255f48a1bb77">HSGetShaderResources</a> (UINT startSlot, UINT numViews, ID3D11ShaderResourceView **shaderResourceViews) const</td></tr>
<tr class="separator:a091b5ff0c05081be878c255f48a1bb77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb1573a28226a086b5167a249d7bd60" id="r_a8fb1573a28226a086b5167a249d7bd60"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8fb1573a28226a086b5167a249d7bd60">HSGetShader</a> (ID3D11HullShader **hullShader, ID3D11ClassInstance **classInstances, UINT *numClassInstances) const</td></tr>
<tr class="separator:a8fb1573a28226a086b5167a249d7bd60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6146f3123ab2995231b79dd4e6337238" id="r_a6146f3123ab2995231b79dd4e6337238"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6146f3123ab2995231b79dd4e6337238">HSGetSamplers</a> (UINT startSlot, UINT numSamplers, ID3D11SamplerState **samplers) const</td></tr>
<tr class="separator:a6146f3123ab2995231b79dd4e6337238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae11f4ef99d19cee906e8479330900f2b" id="r_ae11f4ef99d19cee906e8479330900f2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae11f4ef99d19cee906e8479330900f2b">HSGetConstantBuffers</a> (UINT startSlot, UINT numBuffers, ID3D11Buffer **constantBuffers) const</td></tr>
<tr class="separator:ae11f4ef99d19cee906e8479330900f2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a751c51ba9df59a0b3325a7d26874e500" id="r_a751c51ba9df59a0b3325a7d26874e500"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a751c51ba9df59a0b3325a7d26874e500">DSGetShaderResources</a> (UINT startSlot, UINT numViews, ID3D11ShaderResourceView **shaderResourceViews) const</td></tr>
<tr class="separator:a751c51ba9df59a0b3325a7d26874e500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87b1d95a792a0d57c0f85c7775a92c59" id="r_a87b1d95a792a0d57c0f85c7775a92c59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a87b1d95a792a0d57c0f85c7775a92c59">DSGetShader</a> (ID3D11DomainShader **domainShader, ID3D11ClassInstance **classInstances, UINT *numClassInstances) const</td></tr>
<tr class="separator:a87b1d95a792a0d57c0f85c7775a92c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb1573dae491ba43813814673a2ef53a" id="r_aeb1573dae491ba43813814673a2ef53a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeb1573dae491ba43813814673a2ef53a">DSGetSamplers</a> (UINT startSlot, UINT numSamplers, ID3D11SamplerState **samplers) const</td></tr>
<tr class="separator:aeb1573dae491ba43813814673a2ef53a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab2e6ab3fd9c3b22064b649f9d0bc1cb" id="r_aab2e6ab3fd9c3b22064b649f9d0bc1cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aab2e6ab3fd9c3b22064b649f9d0bc1cb">DSGetConstantBuffers</a> (UINT startSlot, UINT numBuffers, ID3D11Buffer **constantBuffers) const</td></tr>
<tr class="separator:aab2e6ab3fd9c3b22064b649f9d0bc1cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35b082ce4b05f8bcf03fb742336ee59c" id="r_a35b082ce4b05f8bcf03fb742336ee59c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35b082ce4b05f8bcf03fb742336ee59c">CSGetShaderResources</a> (UINT startSlot, UINT numViews, ID3D11ShaderResourceView **shaderResourceViews) const</td></tr>
<tr class="separator:a35b082ce4b05f8bcf03fb742336ee59c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a599d31bdb4e762cc674b6ea5658a4d9c" id="r_a599d31bdb4e762cc674b6ea5658a4d9c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a599d31bdb4e762cc674b6ea5658a4d9c">CSGetUnorderedAccessViews</a> (UINT startSlot, UINT numUAVs, ID3D11UnorderedAccessView **unorderedAccessViews) const</td></tr>
<tr class="separator:a599d31bdb4e762cc674b6ea5658a4d9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d597fee69e316a0acae0a7ddb1c63d4" id="r_a6d597fee69e316a0acae0a7ddb1c63d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d597fee69e316a0acae0a7ddb1c63d4">CSGetShader</a> (ID3D11ComputeShader **computeShader, ID3D11ClassInstance **classInstances, UINT *numClassInstances) const</td></tr>
<tr class="separator:a6d597fee69e316a0acae0a7ddb1c63d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09da11312d032ce36da3ed0aedbec404" id="r_a09da11312d032ce36da3ed0aedbec404"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09da11312d032ce36da3ed0aedbec404">CSGetSamplers</a> (UINT startSlot, UINT numSamplers, ID3D11SamplerState **samplers) const</td></tr>
<tr class="separator:a09da11312d032ce36da3ed0aedbec404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13246d074d4c818db93056f29b840d02" id="r_a13246d074d4c818db93056f29b840d02"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a13246d074d4c818db93056f29b840d02">CSGetConstantBuffers</a> (UINT startSlot, UINT numBuffers, ID3D11Buffer **constantBuffers) const</td></tr>
<tr class="separator:a13246d074d4c818db93056f29b840d02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad91ab6daf7bdf4ce8accc74bf37cd7c" id="r_aad91ab6daf7bdf4ce8accc74bf37cd7c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aad91ab6daf7bdf4ce8accc74bf37cd7c">ClearState</a> () const</td></tr>
<tr class="separator:aad91ab6daf7bdf4ce8accc74bf37cd7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa2859b1d3b22892d3511eeb859150b7" id="r_afa2859b1d3b22892d3511eeb859150b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afa2859b1d3b22892d3511eeb859150b7">Flush</a> () const</td></tr>
<tr class="separator:afa2859b1d3b22892d3511eeb859150b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adca2c0bb288a894d8859505bcda19928" id="r_adca2c0bb288a894d8859505bcda19928"><td class="memItemLeft" align="right" valign="top">D3D11_DEVICE_CONTEXT_TYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adca2c0bb288a894d8859505bcda19928">GetType</a> () const</td></tr>
<tr class="separator:adca2c0bb288a894d8859505bcda19928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1acd2a8e95c67fbb1c13dbaeec1499c4" id="r_a1acd2a8e95c67fbb1c13dbaeec1499c4"><td class="memItemLeft" align="right" valign="top">UINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1acd2a8e95c67fbb1c13dbaeec1499c4">GetContextFlags</a> () const</td></tr>
<tr class="separator:a1acd2a8e95c67fbb1c13dbaeec1499c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ee4730d1a30479b54f2741fa48110a" id="r_a03ee4730d1a30479b54f2741fa48110a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a03ee4730d1a30479b54f2741fa48110a">FinishCommandList</a> (<a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> restoreDeferredContextState, ID3D11CommandList **commandList) const</td></tr>
<tr class="separator:a03ee4730d1a30479b54f2741fa48110a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child.xhtml">Harlinn::Windows::Graphics::D3D11::D3D11DeviceChild</a></td></tr>
<tr class="memitem:a23e29889e045b06fe71564ec5bc7a351 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child" id="r_a23e29889e045b06fe71564ec5bc7a351"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child.xhtml#a23e29889e045b06fe71564ec5bc7a351">GetDevice</a> (ID3D11Device **device) const</td></tr>
<tr class="separator:a23e29889e045b06fe71564ec5bc7a351 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fd3fbc456fd54bca6bd580969e921d7 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child" id="r_a2fd3fbc456fd54bca6bd580969e921d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child.xhtml#a2fd3fbc456fd54bca6bd580969e921d7">GetPrivateData</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;guid, UINT *dataSize, void *data) const</td></tr>
<tr class="separator:a2fd3fbc456fd54bca6bd580969e921d7 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5633eb3a20ed8e2cac8248dd0079d3d inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child" id="r_af5633eb3a20ed8e2cac8248dd0079d3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child.xhtml#af5633eb3a20ed8e2cac8248dd0079d3d">SetPrivateData</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;guid, UINT dataSize, const void *data) const</td></tr>
<tr class="separator:af5633eb3a20ed8e2cac8248dd0079d3d inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ade573e3746a630095ac53e73f7435b inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child" id="r_a2ade573e3746a630095ac53e73f7435b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child.xhtml#a2ade573e3746a630095ac53e73f7435b">SetPrivateDataInterface</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;guid, const IUnknown *data) const</td></tr>
<tr class="separator:a2ade573e3746a630095ac53e73f7435b inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_child"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af46fcfed90b94bd3e941d2ca1aa1e57c" name="af46fcfed90b94bd3e941d2ca1aa1e57c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af46fcfed90b94bd3e941d2ca1aa1e57c">&#9670;&#160;</a></span>Begin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::Begin </td>
          <td>(</td>
          <td class="paramtype">ID3D11Asynchronous *</td>          <td class="paramname"><span class="paramname"><em>async</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acd8c49a377bf64bbcfcf1c1d1121e0a4" name="acd8c49a377bf64bbcfcf1c1d1121e0a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd8c49a377bf64bbcfcf1c1d1121e0a4">&#9670;&#160;</a></span>ClearDepthStencilView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ClearDepthStencilView </td>
          <td>(</td>
          <td class="paramtype">ID3D11DepthStencilView *</td>          <td class="paramname"><span class="paramname"><em>depthStencilView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>clearFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>depth</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT8</td>          <td class="paramname"><span class="paramname"><em>stencil</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a80a75a8837b04844e14bf707e1ac1205" name="a80a75a8837b04844e14bf707e1ac1205"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80a75a8837b04844e14bf707e1ac1205">&#9670;&#160;</a></span>ClearRenderTargetView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ClearRenderTargetView </td>
          <td>(</td>
          <td class="paramtype">ID3D11RenderTargetView *</td>          <td class="paramname"><span class="paramname"><em>renderTargetView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const FLOAT</td>          <td class="paramname"><span class="paramname"><em>colorRGBA</em></span>[4]&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aad91ab6daf7bdf4ce8accc74bf37cd7c" name="aad91ab6daf7bdf4ce8accc74bf37cd7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad91ab6daf7bdf4ce8accc74bf37cd7c">&#9670;&#160;</a></span>ClearState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ClearState </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a63de96e4bc9e72ebd46651a243c90882" name="a63de96e4bc9e72ebd46651a243c90882"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63de96e4bc9e72ebd46651a243c90882">&#9670;&#160;</a></span>ClearUnorderedAccessViewFloat()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ClearUnorderedAccessViewFloat </td>
          <td>(</td>
          <td class="paramtype">ID3D11UnorderedAccessView *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const FLOAT</td>          <td class="paramname"><span class="paramname"><em>values</em></span>[4]&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac16a360f9b330ee3cd061e90328a70e4" name="ac16a360f9b330ee3cd061e90328a70e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac16a360f9b330ee3cd061e90328a70e4">&#9670;&#160;</a></span>ClearUnorderedAccessViewUint()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ClearUnorderedAccessViewUint </td>
          <td>(</td>
          <td class="paramtype">ID3D11UnorderedAccessView *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT</td>          <td class="paramname"><span class="paramname"><em>values</em></span>[4]&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a823ec172bd09286205c5948f6b282394" name="a823ec172bd09286205c5948f6b282394"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a823ec172bd09286205c5948f6b282394">&#9670;&#160;</a></span>CopyResource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CopyResource </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>destinationResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>sourceResource</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad8885c0688c5bba598a69e911eaf3631" name="ad8885c0688c5bba598a69e911eaf3631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8885c0688c5bba598a69e911eaf3631">&#9670;&#160;</a></span>CopyStructureCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CopyStructureCount </td>
          <td>(</td>
          <td class="paramtype">ID3D11Buffer *</td>          <td class="paramname"><span class="paramname"><em>destinationBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationAlignedByteOffset</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11UnorderedAccessView *</td>          <td class="paramname"><span class="paramname"><em>sourceView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae8bfa60d0933f613ed0ebc682ef9cbd9" name="ae8bfa60d0933f613ed0ebc682ef9cbd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8bfa60d0933f613ed0ebc682ef9cbd9">&#9670;&#160;</a></span>CopySubresourceRegion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CopySubresourceRegion </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>destinationResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationSubresource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationY</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationZ</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>sourceResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>sourceSubresource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_BOX *</td>          <td class="paramname"><span class="paramname"><em>sourceBox</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a13246d074d4c818db93056f29b840d02" name="a13246d074d4c818db93056f29b840d02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13246d074d4c818db93056f29b840d02">&#9670;&#160;</a></span>CSGetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSGetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a09da11312d032ce36da3ed0aedbec404" name="a09da11312d032ce36da3ed0aedbec404"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09da11312d032ce36da3ed0aedbec404">&#9670;&#160;</a></span>CSGetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSGetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d597fee69e316a0acae0a7ddb1c63d4" name="a6d597fee69e316a0acae0a7ddb1c63d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d597fee69e316a0acae0a7ddb1c63d4">&#9670;&#160;</a></span>CSGetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSGetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11ComputeShader **</td>          <td class="paramname"><span class="paramname"><em>computeShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance **</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a35b082ce4b05f8bcf03fb742336ee59c" name="a35b082ce4b05f8bcf03fb742336ee59c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35b082ce4b05f8bcf03fb742336ee59c">&#9670;&#160;</a></span>CSGetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSGetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a599d31bdb4e762cc674b6ea5658a4d9c" name="a599d31bdb4e762cc674b6ea5658a4d9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a599d31bdb4e762cc674b6ea5658a4d9c">&#9670;&#160;</a></span>CSGetUnorderedAccessViews()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSGetUnorderedAccessViews </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numUAVs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11UnorderedAccessView **</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8ab42d71d7c91e003c19daf801cddee4" name="a8ab42d71d7c91e003c19daf801cddee4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ab42d71d7c91e003c19daf801cddee4">&#9670;&#160;</a></span>CSSetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSSetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1fe40f1f35bd4f585ba7e271a92a6746" name="a1fe40f1f35bd4f585ba7e271a92a6746"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fe40f1f35bd4f585ba7e271a92a6746">&#9670;&#160;</a></span>CSSetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSSetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState *const *</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4346c94bdc5147b63e97d4ca473303bb" name="a4346c94bdc5147b63e97d4ca473303bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4346c94bdc5147b63e97d4ca473303bb">&#9670;&#160;</a></span>CSSetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSSetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11ComputeShader *</td>          <td class="paramname"><span class="paramname"><em>computeShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance *const *</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9489dfae111abb2bb12074bc5dcba837" name="a9489dfae111abb2bb12074bc5dcba837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9489dfae111abb2bb12074bc5dcba837">&#9670;&#160;</a></span>CSSetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSSetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView *const *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d6ef35b396177f72dfc6d886676ec9a" name="a1d6ef35b396177f72dfc6d886676ec9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d6ef35b396177f72dfc6d886676ec9a">&#9670;&#160;</a></span>CSSetUnorderedAccessViews()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::CSSetUnorderedAccessViews </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfunorderedAccessViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11UnorderedAccessView *const *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViewsInitialCounts</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad94af3df006c23ac59d59232aaa1854c" name="ad94af3df006c23ac59d59232aaa1854c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad94af3df006c23ac59d59232aaa1854c">&#9670;&#160;</a></span>Dispatch()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::Dispatch </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>threadGroupCountX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>threadGroupCountY</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>threadGroupCountZ</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a00d138f8239815f77e4cc3a5c4489e" name="a2a00d138f8239815f77e4cc3a5c4489e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a00d138f8239815f77e4cc3a5c4489e">&#9670;&#160;</a></span>DispatchIndirect()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DispatchIndirect </td>
          <td>(</td>
          <td class="paramtype">ID3D11Buffer *</td>          <td class="paramname"><span class="paramname"><em>bufferForArgs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>alignedByteOffsetForArgs</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a44638c7a6266e796fd416bee8534ebf6" name="a44638c7a6266e796fd416bee8534ebf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44638c7a6266e796fd416bee8534ebf6">&#9670;&#160;</a></span>Draw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::Draw </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>vertexCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startVertexLocation</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad88e6ba9ac7fc4732dd963244711e6eb" name="ad88e6ba9ac7fc4732dd963244711e6eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad88e6ba9ac7fc4732dd963244711e6eb">&#9670;&#160;</a></span>DrawAuto()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DrawAuto </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a366a269df5d0ac071d26b8b475092477" name="a366a269df5d0ac071d26b8b475092477"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a366a269df5d0ac071d26b8b475092477">&#9670;&#160;</a></span>DrawIndexed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DrawIndexed </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>indexCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startIndexLocation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT</td>          <td class="paramname"><span class="paramname"><em>baseVertexLocation</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b92df76d15075c0e320e9187e69697d" name="a7b92df76d15075c0e320e9187e69697d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b92df76d15075c0e320e9187e69697d">&#9670;&#160;</a></span>DrawIndexedInstanced()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DrawIndexedInstanced </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>indexCountPerInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>instanceCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startIndexLocation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">INT</td>          <td class="paramname"><span class="paramname"><em>baseVertexLocation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startInstanceLocation</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af6bbfcc69223da85b1fe89a39c7d4f29" name="af6bbfcc69223da85b1fe89a39c7d4f29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6bbfcc69223da85b1fe89a39c7d4f29">&#9670;&#160;</a></span>DrawIndexedInstancedIndirect()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DrawIndexedInstancedIndirect </td>
          <td>(</td>
          <td class="paramtype">ID3D11Buffer *</td>          <td class="paramname"><span class="paramname"><em>bufferForArgs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>alignedByteOffsetForArgs</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c109f820dbf241c84e3ca181cc29c43" name="a2c109f820dbf241c84e3ca181cc29c43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c109f820dbf241c84e3ca181cc29c43">&#9670;&#160;</a></span>DrawInstanced()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DrawInstanced </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>vertexCountPerInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>instanceCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startVertexLocation</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>StartInstanceLocation</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5e06da860e60e36408b53d9afa6bd35" name="ac5e06da860e60e36408b53d9afa6bd35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5e06da860e60e36408b53d9afa6bd35">&#9670;&#160;</a></span>DrawInstancedIndirect()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DrawInstancedIndirect </td>
          <td>(</td>
          <td class="paramtype">ID3D11Buffer *</td>          <td class="paramname"><span class="paramname"><em>bufferForArgs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>alignedByteOffsetForArgs</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aab2e6ab3fd9c3b22064b649f9d0bc1cb" name="aab2e6ab3fd9c3b22064b649f9d0bc1cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab2e6ab3fd9c3b22064b649f9d0bc1cb">&#9670;&#160;</a></span>DSGetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSGetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb1573dae491ba43813814673a2ef53a" name="aeb1573dae491ba43813814673a2ef53a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb1573dae491ba43813814673a2ef53a">&#9670;&#160;</a></span>DSGetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSGetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a87b1d95a792a0d57c0f85c7775a92c59" name="a87b1d95a792a0d57c0f85c7775a92c59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87b1d95a792a0d57c0f85c7775a92c59">&#9670;&#160;</a></span>DSGetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSGetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11DomainShader **</td>          <td class="paramname"><span class="paramname"><em>domainShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance **</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a751c51ba9df59a0b3325a7d26874e500" name="a751c51ba9df59a0b3325a7d26874e500"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a751c51ba9df59a0b3325a7d26874e500">&#9670;&#160;</a></span>DSGetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSGetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa0780b4fe25d115aadd7ad4ae17d7cd0" name="aa0780b4fe25d115aadd7ad4ae17d7cd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0780b4fe25d115aadd7ad4ae17d7cd0">&#9670;&#160;</a></span>DSSetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSSetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a76e13c50b6e6f05341c8282ac5c4b7a7" name="a76e13c50b6e6f05341c8282ac5c4b7a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76e13c50b6e6f05341c8282ac5c4b7a7">&#9670;&#160;</a></span>DSSetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSSetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState *const *</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab3265b33e619955e9ce98586748bef70" name="ab3265b33e619955e9ce98586748bef70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3265b33e619955e9ce98586748bef70">&#9670;&#160;</a></span>DSSetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSSetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11DomainShader *</td>          <td class="paramname"><span class="paramname"><em>domainShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance *const *</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7bcbae8c15ad93408cbcdfb2c8890f46" name="a7bcbae8c15ad93408cbcdfb2c8890f46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bcbae8c15ad93408cbcdfb2c8890f46">&#9670;&#160;</a></span>DSSetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::DSSetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView *const *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2fc90003216de01f0bad090886fe98da" name="a2fc90003216de01f0bad090886fe98da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fc90003216de01f0bad090886fe98da">&#9670;&#160;</a></span>End()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::End </td>
          <td>(</td>
          <td class="paramtype">ID3D11Asynchronous *</td>          <td class="paramname"><span class="paramname"><em>async</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad9267e73ad3cc6f0932dc0e35ef75215" name="ad9267e73ad3cc6f0932dc0e35ef75215"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9267e73ad3cc6f0932dc0e35ef75215">&#9670;&#160;</a></span>ExecuteCommandList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ExecuteCommandList </td>
          <td>(</td>
          <td class="paramtype">ID3D11CommandList *</td>          <td class="paramname"><span class="paramname"><em>commandList</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>restoreContextState</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a03ee4730d1a30479b54f2741fa48110a" name="a03ee4730d1a30479b54f2741fa48110a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03ee4730d1a30479b54f2741fa48110a">&#9670;&#160;</a></span>FinishCommandList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::FinishCommandList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>restoreDeferredContextState</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11CommandList **</td>          <td class="paramname"><span class="paramname"><em>commandList</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afa2859b1d3b22892d3511eeb859150b7" name="afa2859b1d3b22892d3511eeb859150b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa2859b1d3b22892d3511eeb859150b7">&#9670;&#160;</a></span>Flush()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::Flush </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7e7d09535a36fd0afb3c49c3029db3d5" name="a7e7d09535a36fd0afb3c49c3029db3d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e7d09535a36fd0afb3c49c3029db3d5">&#9670;&#160;</a></span>GenerateMips()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GenerateMips </td>
          <td>(</td>
          <td class="paramtype">ID3D11ShaderResourceView *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceView</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1acd2a8e95c67fbb1c13dbaeec1499c4" name="a1acd2a8e95c67fbb1c13dbaeec1499c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1acd2a8e95c67fbb1c13dbaeec1499c4">&#9670;&#160;</a></span>GetContextFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GetContextFlags </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab0c44e195ba0cc33c33a468085250dab" name="ab0c44e195ba0cc33c33a468085250dab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0c44e195ba0cc33c33a468085250dab">&#9670;&#160;</a></span>GetData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GetData </td>
          <td>(</td>
          <td class="paramtype">ID3D11Asynchronous *</td>          <td class="paramname"><span class="paramname"><em>async</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>dataSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>dataFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a809b49bc71328966f296de2a062f3d09" name="a809b49bc71328966f296de2a062f3d09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a809b49bc71328966f296de2a062f3d09">&#9670;&#160;</a></span>GetPredication()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GetPredication </td>
          <td>(</td>
          <td class="paramtype">ID3D11Predicate **</td>          <td class="paramname"><span class="paramname"><em>predicate</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *</td>          <td class="paramname"><span class="paramname"><em>predicateValue</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a75ff99ac004df1c693c70d255dba732d" name="a75ff99ac004df1c693c70d255dba732d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75ff99ac004df1c693c70d255dba732d">&#9670;&#160;</a></span>GetResourceMinLOD()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FLOAT Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GetResourceMinLOD </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adca2c0bb288a894d8859505bcda19928" name="adca2c0bb288a894d8859505bcda19928"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adca2c0bb288a894d8859505bcda19928">&#9670;&#160;</a></span>GetType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">D3D11_DEVICE_CONTEXT_TYPE Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GetType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab1970d9d9eb57aedf5c0e28d87ac1ab0" name="ab1970d9d9eb57aedf5c0e28d87ac1ab0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1970d9d9eb57aedf5c0e28d87ac1ab0">&#9670;&#160;</a></span>GSGetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSGetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ecb605f472551fca70a06d759a03bf5" name="a1ecb605f472551fca70a06d759a03bf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ecb605f472551fca70a06d759a03bf5">&#9670;&#160;</a></span>GSGetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSGetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e9dbb1ea4b0955deb1ab43027178194" name="a5e9dbb1ea4b0955deb1ab43027178194"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e9dbb1ea4b0955deb1ab43027178194">&#9670;&#160;</a></span>GSGetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSGetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11GeometryShader **</td>          <td class="paramname"><span class="paramname"><em>geometryShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance **</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1e11e270ea75bf9ed4e9dc1539044d3" name="aa1e11e270ea75bf9ed4e9dc1539044d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1e11e270ea75bf9ed4e9dc1539044d3">&#9670;&#160;</a></span>GSGetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSGetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a11b409bed259908ec22d1e7974898ad4" name="a11b409bed259908ec22d1e7974898ad4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11b409bed259908ec22d1e7974898ad4">&#9670;&#160;</a></span>GSSetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSSetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d00b8a5d1bdfca998fab6cedb588ae7" name="a8d00b8a5d1bdfca998fab6cedb588ae7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d00b8a5d1bdfca998fab6cedb588ae7">&#9670;&#160;</a></span>GSSetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSSetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState *const *</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7bab1bf93c749849c32eec9b3a9c54ec" name="a7bab1bf93c749849c32eec9b3a9c54ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bab1bf93c749849c32eec9b3a9c54ec">&#9670;&#160;</a></span>GSSetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSSetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11GeometryShader *</td>          <td class="paramname"><span class="paramname"><em>shader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance *const *</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1fe82a9b84da2b0a8dd568caa2c552a1" name="a1fe82a9b84da2b0a8dd568caa2c552a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fe82a9b84da2b0a8dd568caa2c552a1">&#9670;&#160;</a></span>GSSetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::GSSetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView *const *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae11f4ef99d19cee906e8479330900f2b" name="ae11f4ef99d19cee906e8479330900f2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae11f4ef99d19cee906e8479330900f2b">&#9670;&#160;</a></span>HSGetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSGetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6146f3123ab2995231b79dd4e6337238" name="a6146f3123ab2995231b79dd4e6337238"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6146f3123ab2995231b79dd4e6337238">&#9670;&#160;</a></span>HSGetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSGetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8fb1573a28226a086b5167a249d7bd60" name="a8fb1573a28226a086b5167a249d7bd60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fb1573a28226a086b5167a249d7bd60">&#9670;&#160;</a></span>HSGetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSGetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11HullShader **</td>          <td class="paramname"><span class="paramname"><em>hullShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance **</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a091b5ff0c05081be878c255f48a1bb77" name="a091b5ff0c05081be878c255f48a1bb77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a091b5ff0c05081be878c255f48a1bb77">&#9670;&#160;</a></span>HSGetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSGetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a00d1b8c95e0eed44dd255b45b509f6" name="a3a00d1b8c95e0eed44dd255b45b509f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a00d1b8c95e0eed44dd255b45b509f6">&#9670;&#160;</a></span>HSSetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSSetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae481626efdbc0ae68be32a98c45e166e" name="ae481626efdbc0ae68be32a98c45e166e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae481626efdbc0ae68be32a98c45e166e">&#9670;&#160;</a></span>HSSetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSSetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState *const *</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a633f5eeb54aa981f90b0940503be42ca" name="a633f5eeb54aa981f90b0940503be42ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a633f5eeb54aa981f90b0940503be42ca">&#9670;&#160;</a></span>HSSetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSSetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11HullShader *</td>          <td class="paramname"><span class="paramname"><em>hullShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance *const *</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a784accbfc682e999a803aeea77b999a8" name="a784accbfc682e999a803aeea77b999a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a784accbfc682e999a803aeea77b999a8">&#9670;&#160;</a></span>HSSetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::HSSetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView *const *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7fbed07f14f1329e5559d6110e00ee65" name="a7fbed07f14f1329e5559d6110e00ee65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fbed07f14f1329e5559d6110e00ee65">&#9670;&#160;</a></span>IAGetIndexBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IAGetIndexBuffer </td>
          <td>(</td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>indexBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DXGI_FORMAT *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>offset</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec72bd726d3eaae8b07e4ffc6191dc18" name="aec72bd726d3eaae8b07e4ffc6191dc18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec72bd726d3eaae8b07e4ffc6191dc18">&#9670;&#160;</a></span>IAGetInputLayout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IAGetInputLayout </td>
          <td>(</td>
          <td class="paramtype">ID3D11InputLayout **</td>          <td class="paramname"><span class="paramname"><em>inputLayout</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a066096bacae41f4f422bd6635589a782" name="a066096bacae41f4f422bd6635589a782"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a066096bacae41f4f422bd6635589a782">&#9670;&#160;</a></span>IAGetPrimitiveTopology()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IAGetPrimitiveTopology </td>
          <td>(</td>
          <td class="paramtype">D3D11_PRIMITIVE_TOPOLOGY *</td>          <td class="paramname"><span class="paramname"><em>topology</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a520ebbf0181bb82cf2987726a1ca5dc9" name="a520ebbf0181bb82cf2987726a1ca5dc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a520ebbf0181bb82cf2987726a1ca5dc9">&#9670;&#160;</a></span>IAGetVertexBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IAGetVertexBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>vertexBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>strides</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>offsets</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa80bc962eb12e9dcf911d862fbd39eb" name="aaa80bc962eb12e9dcf911d862fbd39eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa80bc962eb12e9dcf911d862fbd39eb">&#9670;&#160;</a></span>IASetIndexBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IASetIndexBuffer </td>
          <td>(</td>
          <td class="paramtype">ID3D11Buffer *</td>          <td class="paramname"><span class="paramname"><em>indexBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DXGI_FORMAT</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>offset</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c3c21267f66f1d250576c95763a801b" name="a9c3c21267f66f1d250576c95763a801b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c3c21267f66f1d250576c95763a801b">&#9670;&#160;</a></span>IASetInputLayout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IASetInputLayout </td>
          <td>(</td>
          <td class="paramtype">ID3D11InputLayout *</td>          <td class="paramname"><span class="paramname"><em>inputLayout</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1e141f04d306260db4d4fac99d93326a" name="a1e141f04d306260db4d4fac99d93326a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e141f04d306260db4d4fac99d93326a">&#9670;&#160;</a></span>IASetPrimitiveTopology()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IASetPrimitiveTopology </td>
          <td>(</td>
          <td class="paramtype">D3D11_PRIMITIVE_TOPOLOGY</td>          <td class="paramname"><span class="paramname"><em>topology</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e2599e5fbb34e0322e84a6c10cfffaf" name="a2e2599e5fbb34e0322e84a6c10cfffaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e2599e5fbb34e0322e84a6c10cfffaf">&#9670;&#160;</a></span>IASetVertexBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::IASetVertexBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>vertexBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT *</td>          <td class="paramname"><span class="paramname"><em>strides</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT *</td>          <td class="paramname"><span class="paramname"><em>offsets</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e3ca0273f9a876331c5bec380f17acc" name="a5e3ca0273f9a876331c5bec380f17acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e3ca0273f9a876331c5bec380f17acc">&#9670;&#160;</a></span>Map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::Map </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>subresource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D3D11_MAP</td>          <td class="paramname"><span class="paramname"><em>mapType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>mapFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D3D11_MAPPED_SUBRESOURCE *</td>          <td class="paramname"><span class="paramname"><em>mappedResource</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af42b9528f9814ea31449611439a3e02c" name="af42b9528f9814ea31449611439a3e02c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af42b9528f9814ea31449611439a3e02c">&#9670;&#160;</a></span>OMGetBlendState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMGetBlendState </td>
          <td>(</td>
          <td class="paramtype">ID3D11BlendState **</td>          <td class="paramname"><span class="paramname"><em>blendState</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>blendFactor</em></span>[4], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>sampleMask</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b50823bb0cf4de0db49919289085520" name="a3b50823bb0cf4de0db49919289085520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b50823bb0cf4de0db49919289085520">&#9670;&#160;</a></span>OMGetDepthStencilState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMGetDepthStencilState </td>
          <td>(</td>
          <td class="paramtype">ID3D11DepthStencilState **</td>          <td class="paramname"><span class="paramname"><em>depthStencilState</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>stencilRef</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a311f0dbeb108edb264f85574c0dfcc4a" name="a311f0dbeb108edb264f85574c0dfcc4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a311f0dbeb108edb264f85574c0dfcc4a">&#9670;&#160;</a></span>OMGetRenderTargets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMGetRenderTargets </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11RenderTargetView **</td>          <td class="paramname"><span class="paramname"><em>renderTargetViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DepthStencilView **</td>          <td class="paramname"><span class="paramname"><em>depthStencilView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a23b7a02b64d1971b24fc51ad1153e425" name="a23b7a02b64d1971b24fc51ad1153e425"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23b7a02b64d1971b24fc51ad1153e425">&#9670;&#160;</a></span>OMGetRenderTargetsAndUnorderedAccessViews()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfRenderTargetViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11RenderTargetView **</td>          <td class="paramname"><span class="paramname"><em>renderTargetViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DepthStencilView **</td>          <td class="paramname"><span class="paramname"><em>depthStencilView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViewsStartSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfUnorderedAccessViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11UnorderedAccessView **</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af606bfabd82eec59b59767e01a79a769" name="af606bfabd82eec59b59767e01a79a769"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af606bfabd82eec59b59767e01a79a769">&#9670;&#160;</a></span>OMSetBlendState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMSetBlendState </td>
          <td>(</td>
          <td class="paramtype">ID3D11BlendState *</td>          <td class="paramname"><span class="paramname"><em>blendState</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const FLOAT</td>          <td class="paramname"><span class="paramname"><em>blendFactor</em></span>[4], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>sampleMask</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a898219cbda3cfe49bd45610a80309715" name="a898219cbda3cfe49bd45610a80309715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a898219cbda3cfe49bd45610a80309715">&#9670;&#160;</a></span>OMSetDepthStencilState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMSetDepthStencilState </td>
          <td>(</td>
          <td class="paramtype">ID3D11DepthStencilState *</td>          <td class="paramname"><span class="paramname"><em>depthStencilState</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>stencilRef</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab156bac66d35a414ffebd088e37f8105" name="ab156bac66d35a414ffebd088e37f8105"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab156bac66d35a414ffebd088e37f8105">&#9670;&#160;</a></span>OMSetRenderTargets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMSetRenderTargets </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11RenderTargetView *const *</td>          <td class="paramname"><span class="paramname"><em>renderTargetViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DepthStencilView *</td>          <td class="paramname"><span class="paramname"><em>depthStencilView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af9f4ef26fb794973a9aad09da391008f" name="af9f4ef26fb794973a9aad09da391008f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9f4ef26fb794973a9aad09da391008f">&#9670;&#160;</a></span>OMSetRenderTargetsAndUnorderedAccessViews()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfRenderTargetViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11RenderTargetView *const *</td>          <td class="paramname"><span class="paramname"><em>renderTargetViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DepthStencilView *</td>          <td class="paramname"><span class="paramname"><em>depthStencilView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViewsStartSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfUnorderedAccessViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11UnorderedAccessView *const *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViewsInitialCounts</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aace612c9008b04bde3a52f97db977c0e" name="aace612c9008b04bde3a52f97db977c0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace612c9008b04bde3a52f97db977c0e">&#9670;&#160;</a></span>PSGetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSGetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a70042005fa08169d75bc8f4a2e6d48e1" name="a70042005fa08169d75bc8f4a2e6d48e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70042005fa08169d75bc8f4a2e6d48e1">&#9670;&#160;</a></span>PSGetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSGetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ccb01dd7e86e8dbfa1ffd3090c6dd93" name="a4ccb01dd7e86e8dbfa1ffd3090c6dd93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ccb01dd7e86e8dbfa1ffd3090c6dd93">&#9670;&#160;</a></span>PSGetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSGetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11PixelShader **</td>          <td class="paramname"><span class="paramname"><em>pixelShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance **</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a718d141a3656ac7bce95de5d1754691d" name="a718d141a3656ac7bce95de5d1754691d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a718d141a3656ac7bce95de5d1754691d">&#9670;&#160;</a></span>PSGetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSGetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a267e0ca35d0dc5b54e76d365d9c0f44e" name="a267e0ca35d0dc5b54e76d365d9c0f44e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a267e0ca35d0dc5b54e76d365d9c0f44e">&#9670;&#160;</a></span>PSSetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSSetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a17c62c642f54160a6554f01d1363615c" name="a17c62c642f54160a6554f01d1363615c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17c62c642f54160a6554f01d1363615c">&#9670;&#160;</a></span>PSSetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSSetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState *const *</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a43d399225cfdc2ca0b018d1fda4a06b8" name="a43d399225cfdc2ca0b018d1fda4a06b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43d399225cfdc2ca0b018d1fda4a06b8">&#9670;&#160;</a></span>PSSetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSSetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11PixelShader *</td>          <td class="paramname"><span class="paramname"><em>pixelShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance *const *</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61e08e2880e14a877d6b152e5073e98e" name="a61e08e2880e14a877d6b152e5073e98e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61e08e2880e14a877d6b152e5073e98e">&#9670;&#160;</a></span>PSSetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::PSSetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView *const *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a64f136a28d4915fd77ec79f4869bff39" name="a64f136a28d4915fd77ec79f4869bff39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64f136a28d4915fd77ec79f4869bff39">&#9670;&#160;</a></span>ResolveSubresource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::ResolveSubresource </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>destinationResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationSubresource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>sourceResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>sourceSubresource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DXGI_FORMAT</td>          <td class="paramname"><span class="paramname"><em>format</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae98c343d92c8b77ae7c8ea1c89c9cfa0" name="ae98c343d92c8b77ae7c8ea1c89c9cfa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae98c343d92c8b77ae7c8ea1c89c9cfa0">&#9670;&#160;</a></span>RSGetScissorRects()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::RSGetScissorRects </td>
          <td>(</td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numRects</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D3D11_RECT *</td>          <td class="paramname"><span class="paramname"><em>rects</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a18c23a5ed2a60ce1d8d8f9beb59aa175" name="a18c23a5ed2a60ce1d8d8f9beb59aa175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18c23a5ed2a60ce1d8d8f9beb59aa175">&#9670;&#160;</a></span>RSGetState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::RSGetState </td>
          <td>(</td>
          <td class="paramtype">ID3D11RasterizerState **</td>          <td class="paramname"><span class="paramname"><em>rasterizerState</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a910a911deee7ed55ef25aa5b25001ed9" name="a910a911deee7ed55ef25aa5b25001ed9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a910a911deee7ed55ef25aa5b25001ed9">&#9670;&#160;</a></span>RSGetViewports()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::RSGetViewports </td>
          <td>(</td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numViewports</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D3D11_VIEWPORT *</td>          <td class="paramname"><span class="paramname"><em>viewports</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a79c8ba2ef0fbbf1e9bd4777ba31419d6" name="a79c8ba2ef0fbbf1e9bd4777ba31419d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79c8ba2ef0fbbf1e9bd4777ba31419d6">&#9670;&#160;</a></span>RSSetScissorRects()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::RSSetScissorRects </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfRects</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_RECT *</td>          <td class="paramname"><span class="paramname"><em>rects</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a473c01daba3bc94df5b385a2af467778" name="a473c01daba3bc94df5b385a2af467778"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a473c01daba3bc94df5b385a2af467778">&#9670;&#160;</a></span>RSSetState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::RSSetState </td>
          <td>(</td>
          <td class="paramtype">ID3D11RasterizerState *</td>          <td class="paramname"><span class="paramname"><em>rasterizerState</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab24db51759ed2b02533dda441fb67311" name="ab24db51759ed2b02533dda441fb67311"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab24db51759ed2b02533dda441fb67311">&#9670;&#160;</a></span>RSSetViewports()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::RSSetViewports </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViewports</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_VIEWPORT *</td>          <td class="paramname"><span class="paramname"><em>viewports</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab3a9009cf36ee39282638c799c32d8b1" name="ab3a9009cf36ee39282638c799c32d8b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3a9009cf36ee39282638c799c32d8b1">&#9670;&#160;</a></span>SetPredication()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::SetPredication </td>
          <td>(</td>
          <td class="paramtype">ID3D11Predicate *</td>          <td class="paramname"><span class="paramname"><em>predicate</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>predicateValue</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c3932bc3a5eb5ab3f359201d4d74642" name="a2c3932bc3a5eb5ab3f359201d4d74642"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c3932bc3a5eb5ab3f359201d4d74642">&#9670;&#160;</a></span>SetResourceMinLOD()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::SetResourceMinLOD </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>minLOD</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a784de19b2d103a12479dfe2e1bc3f0a2" name="a784de19b2d103a12479dfe2e1bc3f0a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a784de19b2d103a12479dfe2e1bc3f0a2">&#9670;&#160;</a></span>SOGetTargets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::SOGetTargets </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>soTargets</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a493152cc6ef97898623d179ac3f3d5a7" name="a493152cc6ef97898623d179ac3f3d5a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a493152cc6ef97898623d179ac3f3d5a7">&#9670;&#160;</a></span>SOSetTargets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::SOSetTargets </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>streamOutputTargets</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT *</td>          <td class="paramname"><span class="paramname"><em>offsets</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a205a25051bf255cd6029584c439562e0" name="a205a25051bf255cd6029584c439562e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a205a25051bf255cd6029584c439562e0">&#9670;&#160;</a></span>Unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::Unmap </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>subresource</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acf8f5ba08bfc783037249a6db7a146b8" name="acf8f5ba08bfc783037249a6db7a146b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf8f5ba08bfc783037249a6db7a146b8">&#9670;&#160;</a></span>UpdateSubresource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::UpdateSubresource </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>destinationResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>destinationSubresource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_BOX *</td>          <td class="paramname"><span class="paramname"><em>destinationBox</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>sourceData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>sourceRowPitch</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>sourceDepthPitch</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a71a8244ec1dcbf48208863549463f1f5" name="a71a8244ec1dcbf48208863549463f1f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71a8244ec1dcbf48208863549463f1f5">&#9670;&#160;</a></span>VSGetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSGetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6949b9cca4cbc8c3590dece5feaa71b4" name="a6949b9cca4cbc8c3590dece5feaa71b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6949b9cca4cbc8c3590dece5feaa71b4">&#9670;&#160;</a></span>VSGetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSGetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6245799e73bc03955ef06831a28df6ac" name="a6245799e73bc03955ef06831a28df6ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6245799e73bc03955ef06831a28df6ac">&#9670;&#160;</a></span>VSGetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSGetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11VertexShader **</td>          <td class="paramname"><span class="paramname"><em>ppVertexShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance **</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad14e0df8e4eb18536d6e50263603655c" name="ad14e0df8e4eb18536d6e50263603655c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad14e0df8e4eb18536d6e50263603655c">&#9670;&#160;</a></span>VSGetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSGetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa9792831740e1cb40093b65fd918a634" name="aa9792831740e1cb40093b65fd918a634"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9792831740e1cb40093b65fd918a634">&#9670;&#160;</a></span>VSSetConstantBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSSetConstantBuffers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfBuffers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer *const *</td>          <td class="paramname"><span class="paramname"><em>constantBuffers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac732392a51a3b4e238d10afa45cbc01c" name="ac732392a51a3b4e238d10afa45cbc01c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac732392a51a3b4e238d10afa45cbc01c">&#9670;&#160;</a></span>VSSetSamplers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSSetSamplers </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfSamplers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState *const *</td>          <td class="paramname"><span class="paramname"><em>samplers</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1e73f918776fd58e0e2f72c61e429f30" name="a1e73f918776fd58e0e2f72c61e429f30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e73f918776fd58e0e2f72c61e429f30">&#9670;&#160;</a></span>VSSetShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSSetShader </td>
          <td>(</td>
          <td class="paramtype">ID3D11VertexShader *</td>          <td class="paramname"><span class="paramname"><em>vertexShader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassInstance *const *</td>          <td class="paramname"><span class="paramname"><em>classInstances</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfClassInstances</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb5e2eb2931c1c0f93f7c381d92cac75" name="aeb5e2eb2931c1c0f93f7c381d92cac75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb5e2eb2931c1c0f93f7c381d92cac75">&#9670;&#160;</a></span>VSSetShaderResources()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11DeviceContext::VSSetShaderResources </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>startSlot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numberOfViews</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView *const *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViews</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_graphics_d3_d11_8h.xhtml">HWGraphicsD3D11.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics.xhtml">Graphics</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11.xhtml">D3D11</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device_context.xhtml">D3D11DeviceContext</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
