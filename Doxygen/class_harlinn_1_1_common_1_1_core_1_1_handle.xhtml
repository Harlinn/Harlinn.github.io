<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Handle&lt; DerivedT, HandleT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_handle-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Handle&lt; DerivedT, HandleT &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCHandle.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Handle&lt; DerivedT, HandleT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_handle__inherit__graph.svg" width="1154" height="1010"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a18c8eaf7218e23cc413d9ca9a8e31468" id="r_a18c8eaf7218e23cc413d9ca9a8e31468"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18c8eaf7218e23cc413d9ca9a8e31468">DerivedType</a> = DerivedT</td></tr>
<tr class="separator:a18c8eaf7218e23cc413d9ca9a8e31468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa428c7964441885409f184d7e34acbce" id="r_aa428c7964441885409f184d7e34acbce"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> = HandleT</td></tr>
<tr class="separator:aa428c7964441885409f184d7e34acbce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adc3317fb28a8061cde894df2b6894c48" id="r_adc3317fb28a8061cde894df2b6894c48"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adc3317fb28a8061cde894df2b6894c48">~Handle</a> () noexcept</td></tr>
<tr class="separator:adc3317fb28a8061cde894df2b6894c48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abee9b1a827f5d947b6f2130f6ce56f21" id="r_abee9b1a827f5d947b6f2130f6ce56f21"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abee9b1a827f5d947b6f2130f6ce56f21">IsValid</a> () const noexcept</td></tr>
<tr class="separator:abee9b1a827f5d947b6f2130f6ce56f21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb70a2a59aeaa7c85b43abe952c39179" id="r_abb70a2a59aeaa7c85b43abe952c39179"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb70a2a59aeaa7c85b43abe952c39179">Handle</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other)=delete</td></tr>
<tr class="separator:abb70a2a59aeaa7c85b43abe952c39179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cc49fed55e92c20c47a7472bcf0d916" id="r_a8cc49fed55e92c20c47a7472bcf0d916"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8cc49fed55e92c20c47a7472bcf0d916">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other)=delete</td></tr>
<tr class="separator:a8cc49fed55e92c20c47a7472bcf0d916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6847836c48d9a927f5d65ab171a6cabb" id="r_a6847836c48d9a927f5d65ab171a6cabb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6847836c48d9a927f5d65ab171a6cabb">Handle</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a6847836c48d9a927f5d65ab171a6cabb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3015fe8a862420a51ba14adccbfe32" id="r_a8a3015fe8a862420a51ba14adccbfe32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a3015fe8a862420a51ba14adccbfe32">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a8a3015fe8a862420a51ba14adccbfe32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53f87d2ebdf3e11d92c9e699c10bb98c" id="r_a53f87d2ebdf3e11d92c9e699c10bb98c"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a53f87d2ebdf3e11d92c9e699c10bb98c">operator&lt;=&gt;</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a53f87d2ebdf3e11d92c9e699c10bb98c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a158cfb823345634f90f75fcaebc9be1e" id="r_a158cfb823345634f90f75fcaebc9be1e"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a158cfb823345634f90f75fcaebc9be1e">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a158cfb823345634f90f75fcaebc9be1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a426c966db96e48883cf37aa619ddc811" id="r_a426c966db96e48883cf37aa619ddc811"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a426c966db96e48883cf37aa619ddc811">operator&lt;=&gt;</a> (<a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> handle) const noexcept</td></tr>
<tr class="separator:a426c966db96e48883cf37aa619ddc811"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6421667bed053df49cc11685b5d490af" id="r_a6421667bed053df49cc11685b5d490af"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6421667bed053df49cc11685b5d490af">operator==</a> (<a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> handle) const noexcept</td></tr>
<tr class="separator:a6421667bed053df49cc11685b5d490af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a370706347436cf008e9abc73aa29451f" id="r_a370706347436cf008e9abc73aa29451f"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a370706347436cf008e9abc73aa29451f">operator HandleType</a> () const noexcept</td></tr>
<tr class="separator:a370706347436cf008e9abc73aa29451f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18834c23bf0f4e979c74699cd61e576e" id="r_a18834c23bf0f4e979c74699cd61e576e"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18834c23bf0f4e979c74699cd61e576e">Value</a> () const noexcept</td></tr>
<tr class="separator:a18834c23bf0f4e979c74699cd61e576e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a004f898e11f3e7964876517bca93520f" id="r_a004f898e11f3e7964876517bca93520f"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a004f898e11f3e7964876517bca93520f">OwnsHandle</a> () const noexcept</td></tr>
<tr class="separator:a004f898e11f3e7964876517bca93520f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a26018a2a2b154b9b169709c6f4b8ca6b" id="r_a26018a2a2b154b9b169709c6f4b8ca6b"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a26018a2a2b154b9b169709c6f4b8ca6b">InvalidHandleValue</a> () noexcept</td></tr>
<tr class="separator:a26018a2a2b154b9b169709c6f4b8ca6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad7c4be0d398b2f1f0c608ae347941541" id="r_ad7c4be0d398b2f1f0c608ae347941541"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad7c4be0d398b2f1f0c608ae347941541">Handle</a> () noexcept</td></tr>
<tr class="separator:ad7c4be0d398b2f1f0c608ae347941541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84f5edca0cf9fe835d193bb358f9ecd9" id="r_a84f5edca0cf9fe835d193bb358f9ecd9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84f5edca0cf9fe835d193bb358f9ecd9">SetValue</a> (<a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> handle, bool ownsHandle=true)</td></tr>
<tr class="separator:a84f5edca0cf9fe835d193bb358f9ecd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0620b59b2b5902e5dfd25055d8a2a33" id="r_aa0620b59b2b5902e5dfd25055d8a2a33"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa0620b59b2b5902e5dfd25055d8a2a33">Handle</a> (<a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> handle, bool ownsHandle=true) noexcept</td></tr>
<tr class="separator:aa0620b59b2b5902e5dfd25055d8a2a33"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a7787e872f5227a764ea9ce06a4b23360" id="r_a7787e872f5227a764ea9ce06a4b23360"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7787e872f5227a764ea9ce06a4b23360">value_</a></td></tr>
<tr class="separator:a7787e872f5227a764ea9ce06a4b23360"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a9f6a1a57adb8c1851faf9eff1acbcf87" id="r_a9f6a1a57adb8c1851faf9eff1acbcf87"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9f6a1a57adb8c1851faf9eff1acbcf87">ownsHandle_</a></td></tr>
<tr class="separator:a9f6a1a57adb8c1851faf9eff1acbcf87"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a18c8eaf7218e23cc413d9ca9a8e31468" name="a18c8eaf7218e23cc413d9ca9a8e31468"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18c8eaf7218e23cc413d9ca9a8e31468">&#9670;&#160;</a></span>DerivedType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::DerivedType = DerivedT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa428c7964441885409f184d7e34acbce" name="aa428c7964441885409f184d7e34acbce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa428c7964441885409f184d7e34acbce">&#9670;&#160;</a></span>HandleType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::HandleType = HandleT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad7c4be0d398b2f1f0c608ae347941541" name="ad7c4be0d398b2f1f0c608ae347941541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7c4be0d398b2f1f0c608ae347941541">&#9670;&#160;</a></span>Handle() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::Handle </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa0620b59b2b5902e5dfd25055d8a2a33" name="aa0620b59b2b5902e5dfd25055d8a2a33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0620b59b2b5902e5dfd25055d8a2a33">&#9670;&#160;</a></span>Handle() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::Handle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a></td>          <td class="paramname"><span class="paramname"><em>handle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>ownsHandle</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adc3317fb28a8061cde894df2b6894c48" name="adc3317fb28a8061cde894df2b6894c48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc3317fb28a8061cde894df2b6894c48">&#9670;&#160;</a></span>~Handle()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::~<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abb70a2a59aeaa7c85b43abe952c39179" name="abb70a2a59aeaa7c85b43abe952c39179"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb70a2a59aeaa7c85b43abe952c39179">&#9670;&#160;</a></span>Handle() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::Handle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt; DerivedT, HandleT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6847836c48d9a927f5d65ab171a6cabb" name="a6847836c48d9a927f5d65ab171a6cabb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6847836c48d9a927f5d65ab171a6cabb">&#9670;&#160;</a></span>Handle() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::Handle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt; DerivedT, HandleT &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a26018a2a2b154b9b169709c6f4b8ca6b" name="a26018a2a2b154b9b169709c6f4b8ca6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26018a2a2b154b9b169709c6f4b8ca6b">&#9670;&#160;</a></span>InvalidHandleValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::InvalidHandleValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abee9b1a827f5d947b6f2130f6ce56f21" name="abee9b1a827f5d947b6f2130f6ce56f21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abee9b1a827f5d947b6f2130f6ce56f21">&#9670;&#160;</a></span>IsValid()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::IsValid </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a370706347436cf008e9abc73aa29451f" name="a370706347436cf008e9abc73aa29451f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a370706347436cf008e9abc73aa29451f">&#9670;&#160;</a></span>operator HandleType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator <a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a53f87d2ebdf3e11d92c9e699c10bb98c" name="a53f87d2ebdf3e11d92c9e699c10bb98c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53f87d2ebdf3e11d92c9e699c10bb98c">&#9670;&#160;</a></span>operator&lt;=&gt;() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator&lt;=&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt; DerivedT, HandleT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a426c966db96e48883cf37aa619ddc811" name="a426c966db96e48883cf37aa619ddc811"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a426c966db96e48883cf37aa619ddc811">&#9670;&#160;</a></span>operator&lt;=&gt;() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator&lt;=&gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a></td>          <td class="paramname"><span class="paramname"><em>handle</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8a3015fe8a862420a51ba14adccbfe32" name="a8a3015fe8a862420a51ba14adccbfe32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a3015fe8a862420a51ba14adccbfe32">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt; DerivedT, HandleT &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8cc49fed55e92c20c47a7472bcf0d916" name="a8cc49fed55e92c20c47a7472bcf0d916"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cc49fed55e92c20c47a7472bcf0d916">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt; DerivedT, HandleT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a158cfb823345634f90f75fcaebc9be1e" name="a158cfb823345634f90f75fcaebc9be1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a158cfb823345634f90f75fcaebc9be1e">&#9670;&#160;</a></span>operator==() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a>&lt; DerivedT, HandleT &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6421667bed053df49cc11685b5d490af" name="a6421667bed053df49cc11685b5d490af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6421667bed053df49cc11685b5d490af">&#9670;&#160;</a></span>operator==() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a></td>          <td class="paramname"><span class="paramname"><em>handle</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a004f898e11f3e7964876517bca93520f" name="a004f898e11f3e7964876517bca93520f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a004f898e11f3e7964876517bca93520f">&#9670;&#160;</a></span>OwnsHandle()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::OwnsHandle </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a84f5edca0cf9fe835d193bb358f9ecd9" name="a84f5edca0cf9fe835d193bb358f9ecd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84f5edca0cf9fe835d193bb358f9ecd9">&#9670;&#160;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::SetValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a></td>          <td class="paramname"><span class="paramname"><em>handle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>ownsHandle</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a18834c23bf0f4e979c74699cd61e576e" name="a18834c23bf0f4e979c74699cd61e576e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18834c23bf0f4e979c74699cd61e576e">&#9670;&#160;</a></span>Value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::Value </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a9f6a1a57adb8c1851faf9eff1acbcf87" name="a9f6a1a57adb8c1851faf9eff1acbcf87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f6a1a57adb8c1851faf9eff1acbcf87">&#9670;&#160;</a></span>ownsHandle_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::ownsHandle_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7787e872f5227a764ea9ce06a4b23360" name="a7787e872f5227a764ea9ce06a4b23360"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7787e872f5227a764ea9ce06a4b23360">&#9670;&#160;</a></span>value_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename HandleT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aa428c7964441885409f184d7e34acbce">HandleType</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Harlinn::Common::Core::Handle</a>&lt; DerivedT, HandleT &gt;::value_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_handle_8h.xhtml">HCCHandle.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_handle.xhtml">Handle</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
