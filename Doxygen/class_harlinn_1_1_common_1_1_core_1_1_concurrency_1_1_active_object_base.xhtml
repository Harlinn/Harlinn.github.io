<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Concurrency::ActiveObjectBase&lt; MessageT, maxQueueSize &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Concurrency::ActiveObjectBase&lt; MessageT, maxQueueSize &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCActiveObject.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Concurrency::ActiveObjectBase&lt; MessageT, maxQueueSize &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base__inherit__graph.svg" width="1754" height="310"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::Concurrency::ActiveObjectBase&lt; MessageT, maxQueueSize &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base__coll__graph.svg" width="1843" height="654"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a18e2d16d285d0bc513d446304d8a1206" id="r_a18e2d16d285d0bc513d446304d8a1206"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> = MessageT</td></tr>
<tr class="separator:a18e2d16d285d0bc513d446304d8a1206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a831e0206a7ccd3973643b533abf22374" id="r_a831e0206a7ccd3973643b533abf22374"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a831e0206a7ccd3973643b533abf22374">ConcurrentQueue</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_simple_concurrent_queue.xhtml">SimpleConcurrentQueue</a>&lt;MessageT, maxQueueSize&gt;</td></tr>
<tr class="separator:a831e0206a7ccd3973643b533abf22374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a128d2aa5d79627de93caa4404efe5095" id="r_a128d2aa5d79627de93caa4404efe5095"><td class="memTemplParams" colspan="2">template&lt;typename CallbackT &gt; </td></tr>
<tr class="memitem:a128d2aa5d79627de93caa4404efe5095"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a128d2aa5d79627de93caa4404efe5095">Event</a> = boost::signals2::signal&lt;CallbackT&gt;</td></tr>
<tr class="separator:a128d2aa5d79627de93caa4404efe5095"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9a6047daf0b862e05b3d2c2dc896ad4b" id="r_a9a6047daf0b862e05b3d2c2dc896ad4b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a6047daf0b862e05b3d2c2dc896ad4b">ActiveObjectBase</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;threadName)</td></tr>
<tr class="separator:a9a6047daf0b862e05b3d2c2dc896ad4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21b54f8693027262e3b8be157d21c808" id="r_a21b54f8693027262e3b8be157d21c808"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21b54f8693027262e3b8be157d21c808">ThreadName</a> () const noexcept</td></tr>
<tr class="separator:a21b54f8693027262e3b8be157d21c808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67120b71181b0d09cf021599e811c451" id="r_a67120b71181b0d09cf021599e811c451"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a67120b71181b0d09cf021599e811c451">Started</a> () const noexcept</td></tr>
<tr class="separator:a67120b71181b0d09cf021599e811c451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5098a41dbd67562c55a40d30ce1eef7" id="r_aa5098a41dbd67562c55a40d30ce1eef7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa5098a41dbd67562c55a40d30ce1eef7">Stopped</a> () const noexcept</td></tr>
<tr class="separator:aa5098a41dbd67562c55a40d30ce1eef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23715eea193ebf917392131f47d672f1" id="r_a23715eea193ebf917392131f47d672f1"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23715eea193ebf917392131f47d672f1">MessagesPosted</a> () const</td></tr>
<tr class="separator:a23715eea193ebf917392131f47d672f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6d534701c7399680541c919d846919" id="r_aac6d534701c7399680541c919d846919"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac6d534701c7399680541c919d846919">MessagesProcessed</a> () const</td></tr>
<tr class="separator:aac6d534701c7399680541c919d846919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13350057a902624bb2b0da31d5df34c2" id="r_a13350057a902624bb2b0da31d5df34c2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a13350057a902624bb2b0da31d5df34c2">Start</a> ()=0</td></tr>
<tr class="separator:a13350057a902624bb2b0da31d5df34c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeeb8b6a45cccc8cf935ec64312727de" id="r_abeeb8b6a45cccc8cf935ec64312727de"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abeeb8b6a45cccc8cf935ec64312727de">Stop</a> ()=0</td></tr>
<tr class="separator:abeeb8b6a45cccc8cf935ec64312727de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add1d0c59f087f5789f5d282a5b2ada8a" id="r_add1d0c59f087f5789f5d282a5b2ada8a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add1d0c59f087f5789f5d282a5b2ada8a">PostMessage</a> (const <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;message)</td></tr>
<tr class="separator:add1d0c59f087f5789f5d282a5b2ada8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a362086a39b50b1009358f5c3e5282184" id="r_a362086a39b50b1009358f5c3e5282184"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a362086a39b50b1009358f5c3e5282184">PostMessage</a> (<a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;&amp;message)</td></tr>
<tr class="separator:a362086a39b50b1009358f5c3e5282184"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:adf4c75d3fd85409571672983337092e5" id="r_adf4c75d3fd85409571672983337092e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a128d2aa5d79627de93caa4404efe5095">Event</a>&lt; void(<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">ActiveObjectBase</a> *, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_message_event_args.xhtml">ActiveObjectMessageEventArgs</a>&lt; <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &gt; &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adf4c75d3fd85409571672983337092e5">OnProcessMessage</a></td></tr>
<tr class="separator:adf4c75d3fd85409571672983337092e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11fb8489ff2736d5ac353f7ebf31be02" id="r_a11fb8489ff2736d5ac353f7ebf31be02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a128d2aa5d79627de93caa4404efe5095">Event</a>&lt; void(<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">ActiveObjectBase</a> *, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_exception_event_args.xhtml">ActiveObjectExceptionEventArgs</a> &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a11fb8489ff2736d5ac353f7ebf31be02">OnException</a></td></tr>
<tr class="separator:a11fb8489ff2736d5ac353f7ebf31be02"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abd5835489acc812ebf5c7135fcbb793e" id="r_abd5835489acc812ebf5c7135fcbb793e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abd5835489acc812ebf5c7135fcbb793e">IsStopMessage</a> (const <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;message) const noexcept=0</td></tr>
<tr class="separator:abd5835489acc812ebf5c7135fcbb793e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18e23bfab110db23275a3d1e2af2093d" id="r_a18e23bfab110db23275a3d1e2af2093d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18e23bfab110db23275a3d1e2af2093d">PostStopMessage</a> ()=0</td></tr>
<tr class="separator:a18e23bfab110db23275a3d1e2af2093d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2392711ef8329223549ac0b1d2dee00c" id="r_a2392711ef8329223549ac0b1d2dee00c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2392711ef8329223549ac0b1d2dee00c">ProcessMessage</a> (const <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;message)</td></tr>
<tr class="separator:a2392711ef8329223549ac0b1d2dee00c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d8aae29362ea582d9d83576970e4a9b" id="r_a1d8aae29362ea582d9d83576970e4a9b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1d8aae29362ea582d9d83576970e4a9b">BeforeProcessMessages</a> ()</td></tr>
<tr class="memdesc:a1d8aae29362ea582d9d83576970e4a9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides an opportunity to implement any initialization that needs to be performed in the context of the worker thread of the active object before it starts the message loop.  <br /></td></tr>
<tr class="separator:a1d8aae29362ea582d9d83576970e4a9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65ff639204ca81158c7bd049ef19d870" id="r_a65ff639204ca81158c7bd049ef19d870"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a65ff639204ca81158c7bd049ef19d870">ProcessMessages</a> ()</td></tr>
<tr class="separator:a65ff639204ca81158c7bd049ef19d870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a81d12e8d8a0f0988f02c3907f671b" id="r_a37a81d12e8d8a0f0988f02c3907f671b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a37a81d12e8d8a0f0988f02c3907f671b">AfterProcessMessages</a> ()</td></tr>
<tr class="memdesc:a37a81d12e8d8a0f0988f02c3907f671b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides an opportunity to implement any cleanup that needs to be performed in the context of the worker thread of the active object after the message loop exits.  <br /></td></tr>
<tr class="separator:a37a81d12e8d8a0f0988f02c3907f671b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78cf2f7a7058ddbd69e685bf13aa6b7" id="r_ad78cf2f7a7058ddbd69e685bf13aa6b7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad78cf2f7a7058ddbd69e685bf13aa6b7">Run</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_event_wait_handle.xhtml">EventWaitHandle</a> &amp;manualEventWaitHandle)</td></tr>
<tr class="separator:ad78cf2f7a7058ddbd69e685bf13aa6b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820cc8512e7214eb070f35d207625bb6" id="r_a820cc8512e7214eb070f35d207625bb6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a820cc8512e7214eb070f35d207625bb6">HandleException</a> (const std::exception &amp;error, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;message)</td></tr>
<tr class="separator:a820cc8512e7214eb070f35d207625bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ae69c3cd1206569651cf9c5609a498f42" id="r_ae69c3cd1206569651cf9c5609a498f42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a831e0206a7ccd3973643b533abf22374">ConcurrentQueue</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae69c3cd1206569651cf9c5609a498f42">messages_</a></td></tr>
<tr class="separator:ae69c3cd1206569651cf9c5609a498f42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d0335b982a0217843d93711cfa5b33e" id="r_a6d0335b982a0217843d93711cfa5b33e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d0335b982a0217843d93711cfa5b33e">threadName_</a></td></tr>
<tr class="separator:a6d0335b982a0217843d93711cfa5b33e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eacfb072d935f4d663de960b41cf6c9" id="r_a7eacfb072d935f4d663de960b41cf6c9"><td class="memItemLeft" align="right" valign="top">std::atomic&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7eacfb072d935f4d663de960b41cf6c9">started_</a></td></tr>
<tr class="separator:a7eacfb072d935f4d663de960b41cf6c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86f7c7bfce3863a91db47fff89647907" id="r_a86f7c7bfce3863a91db47fff89647907"><td class="memItemLeft" align="right" valign="top">std::atomic&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a86f7c7bfce3863a91db47fff89647907">stopped_</a></td></tr>
<tr class="separator:a86f7c7bfce3863a91db47fff89647907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2209cc88b340292b960c206b74c54a66" id="r_a2209cc88b340292b960c206b74c54a66"><td class="memItemLeft" align="right" valign="top">std::atomic&lt; size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2209cc88b340292b960c206b74c54a66">messagesPosted_</a></td></tr>
<tr class="separator:a2209cc88b340292b960c206b74c54a66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6401eb291ad5392972a76c1fc915f1" id="r_acb6401eb291ad5392972a76c1fc915f1"><td class="memItemLeft" align="right" valign="top">std::atomic&lt; size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb6401eb291ad5392972a76c1fc915f1">messagesProcessed_</a></td></tr>
<tr class="separator:acb6401eb291ad5392972a76c1fc915f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a132afadef10b755095d4bb5356a54013" id="r_a132afadef10b755095d4bb5356a54013"><td class="memTemplParams" colspan="2">template&lt;typename MessageT , size_t maxQueueSize&gt; </td></tr>
<tr class="memitem:a132afadef10b755095d4bb5356a54013"><td class="memTemplItemLeft" align="right" valign="top">class&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a132afadef10b755095d4bb5356a54013">ActiveObject</a></td></tr>
<tr class="separator:a132afadef10b755095d4bb5356a54013"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a831e0206a7ccd3973643b533abf22374" name="a831e0206a7ccd3973643b533abf22374"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a831e0206a7ccd3973643b533abf22374">&#9670;&#160;</a></span>ConcurrentQueue</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::ConcurrentQueue = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_simple_concurrent_queue.xhtml">SimpleConcurrentQueue</a>&lt;MessageT, maxQueueSize&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a128d2aa5d79627de93caa4404efe5095" name="a128d2aa5d79627de93caa4404efe5095"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a128d2aa5d79627de93caa4404efe5095">&#9670;&#160;</a></span>Event</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<div class="memtemplate">
template&lt;typename CallbackT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::Event = boost::signals2::signal&lt;CallbackT&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18e2d16d285d0bc513d446304d8a1206" name="a18e2d16d285d0bc513d446304d8a1206"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18e2d16d285d0bc513d446304d8a1206">&#9670;&#160;</a></span>MessageType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::MessageType = MessageT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9a6047daf0b862e05b3d2c2dc896ad4b" name="a9a6047daf0b862e05b3d2c2dc896ad4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a6047daf0b862e05b3d2c2dc896ad4b">&#9670;&#160;</a></span>ActiveObjectBase()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::ActiveObjectBase </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>threadName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a37a81d12e8d8a0f0988f02c3907f671b" name="a37a81d12e8d8a0f0988f02c3907f671b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37a81d12e8d8a0f0988f02c3907f671b">&#9670;&#160;</a></span>AfterProcessMessages()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::AfterProcessMessages </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Provides an opportunity to implement any cleanup that needs to be performed in the context of the worker thread of the active object after the message loop exits. </p>

<p>Reimplemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#ae66ecfac545fb96f0f4c9466668c89ad">Harlinn::Common::Core::Logging::LogManager</a>.</p>

</div>
</div>
<a id="a1d8aae29362ea582d9d83576970e4a9b" name="a1d8aae29362ea582d9d83576970e4a9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d8aae29362ea582d9d83576970e4a9b">&#9670;&#160;</a></span>BeforeProcessMessages()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::BeforeProcessMessages </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Provides an opportunity to implement any initialization that needs to be performed in the context of the worker thread of the active object before it starts the message loop. </p>

<p>Reimplemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_application.xhtml#a625bfe43ce24769672e402dda3ad5d89">Harlinn::Common::Core::Application</a>, and <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#a979da30ec298e7d1a5b62456c961a402">Harlinn::Common::Core::Logging::LogManager</a>.</p>

</div>
</div>
<a id="a820cc8512e7214eb070f35d207625bb6" name="a820cc8512e7214eb070f35d207625bb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a820cc8512e7214eb070f35d207625bb6">&#9670;&#160;</a></span>HandleException()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::HandleException </td>
          <td>(</td>
          <td class="paramtype">const std::exception &amp;</td>          <td class="paramname"><span class="paramname"><em>error</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>message</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd5835489acc812ebf5c7135fcbb793e" name="abd5835489acc812ebf5c7135fcbb793e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd5835489acc812ebf5c7135fcbb793e">&#9670;&#160;</a></span>IsStopMessage()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::IsStopMessage </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>message</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_application.xhtml#a95ea0678f5117a697dd2f6e5cb344d61">Harlinn::Common::Core::Application</a>, and <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#a37619200811f0e55c098c14cabe04cab">Harlinn::Common::Core::Logging::LogManager</a>.</p>

</div>
</div>
<a id="a23715eea193ebf917392131f47d672f1" name="a23715eea193ebf917392131f47d672f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23715eea193ebf917392131f47d672f1">&#9670;&#160;</a></span>MessagesPosted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::MessagesPosted </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac6d534701c7399680541c919d846919" name="aac6d534701c7399680541c919d846919"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac6d534701c7399680541c919d846919">&#9670;&#160;</a></span>MessagesProcessed()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::MessagesProcessed </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="add1d0c59f087f5789f5d282a5b2ada8a" name="add1d0c59f087f5789f5d282a5b2ada8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add1d0c59f087f5789f5d282a5b2ada8a">&#9670;&#160;</a></span>PostMessage() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::PostMessage </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>message</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a362086a39b50b1009358f5c3e5282184" name="a362086a39b50b1009358f5c3e5282184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a362086a39b50b1009358f5c3e5282184">&#9670;&#160;</a></span>PostMessage() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::PostMessage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>message</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a18e23bfab110db23275a3d1e2af2093d" name="a18e23bfab110db23275a3d1e2af2093d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18e23bfab110db23275a3d1e2af2093d">&#9670;&#160;</a></span>PostStopMessage()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::PostStopMessage </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_application.xhtml#a971d59395f0c3c0cabfafd53296f44b1">Harlinn::Common::Core::Application</a>, and <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#af9a2317d64521bf49f0cfe91833a0d47">Harlinn::Common::Core::Logging::LogManager</a>.</p>

</div>
</div>
<a id="a2392711ef8329223549ac0b1d2dee00c" name="a2392711ef8329223549ac0b1d2dee00c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2392711ef8329223549ac0b1d2dee00c">&#9670;&#160;</a></span>ProcessMessage()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::ProcessMessage </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>message</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_application.xhtml#ae015272f665113f973f6e8be4cfec68a">Harlinn::Common::Core::Application</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#ad4a41564ed00989e520925b2f2469c9f">Harlinn::Common::Core::Logging::LogManager</a>, and <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_sinks_1_1_l_m_d_b_sink.xhtml#a9dca79bbbba5bac4ad546cfe5eacf5d2">Harlinn::Common::Core::Logging::Sinks::LMDBSink</a>.</p>

</div>
</div>
<a id="a65ff639204ca81158c7bd049ef19d870" name="a65ff639204ca81158c7bd049ef19d870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65ff639204ca81158c7bd049ef19d870">&#9670;&#160;</a></span>ProcessMessages()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::ProcessMessages </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad78cf2f7a7058ddbd69e685bf13aa6b7" name="ad78cf2f7a7058ddbd69e685bf13aa6b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad78cf2f7a7058ddbd69e685bf13aa6b7">&#9670;&#160;</a></span>Run()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::Run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_event_wait_handle.xhtml">EventWaitHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>manualEventWaitHandle</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a13350057a902624bb2b0da31d5df34c2" name="a13350057a902624bb2b0da31d5df34c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13350057a902624bb2b0da31d5df34c2">&#9670;&#160;</a></span>Start()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::Start </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_application.xhtml#aa8c397954a20cc34210674745b7d1ec9">Harlinn::Common::Core::Application</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a23485816ad89d96e4caabb8f50afc835">Harlinn::Common::Core::Concurrency::ActiveObject&lt; MessageT, maxQueueSize &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a23485816ad89d96e4caabb8f50afc835">Harlinn::Common::Core::Concurrency::ActiveObject&lt; std::shared_ptr&lt; ApplicationMessage &gt; &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a23485816ad89d96e4caabb8f50afc835">Harlinn::Common::Core::Concurrency::ActiveObject&lt; std::shared_ptr&lt; LMDBSinkMessage &gt; &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a23485816ad89d96e4caabb8f50afc835">Harlinn::Common::Core::Concurrency::ActiveObject&lt; std::shared_ptr&lt; LogManagerMessage &gt; &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#af3fac808eecbadd6d890f6fbac71877e">Harlinn::Common::Core::Logging::LogManager</a>, and <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_sinks_1_1_l_m_d_b_sink.xhtml#a1f8a11073d94f863f2527ff1e78abf31">Harlinn::Common::Core::Logging::Sinks::LMDBSink</a>.</p>

</div>
</div>
<a id="a67120b71181b0d09cf021599e811c451" name="a67120b71181b0d09cf021599e811c451"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67120b71181b0d09cf021599e811c451">&#9670;&#160;</a></span>Started()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::Started </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abeeb8b6a45cccc8cf935ec64312727de" name="abeeb8b6a45cccc8cf935ec64312727de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abeeb8b6a45cccc8cf935ec64312727de">&#9670;&#160;</a></span>Stop()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::Stop </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_application.xhtml#ad4be84538bccce9f83e583bf289f4799">Harlinn::Common::Core::Application</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a0aa2fd6be5bc3ba35f38cfe101b43fc2">Harlinn::Common::Core::Concurrency::ActiveObject&lt; MessageT, maxQueueSize &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a0aa2fd6be5bc3ba35f38cfe101b43fc2">Harlinn::Common::Core::Concurrency::ActiveObject&lt; std::shared_ptr&lt; ApplicationMessage &gt; &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a0aa2fd6be5bc3ba35f38cfe101b43fc2">Harlinn::Common::Core::Concurrency::ActiveObject&lt; std::shared_ptr&lt; LMDBSinkMessage &gt; &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml#a0aa2fd6be5bc3ba35f38cfe101b43fc2">Harlinn::Common::Core::Concurrency::ActiveObject&lt; std::shared_ptr&lt; LogManagerMessage &gt; &gt;</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_log_manager.xhtml#adce72223fa7720d9aca4b719c7a20c49">Harlinn::Common::Core::Logging::LogManager</a>, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_logging_1_1_sinks_1_1_l_m_d_b_sink.xhtml#a5591e2e3eb1d6912adb296a4cf275081">Harlinn::Common::Core::Logging::Sinks::LMDBSink</a>, and <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_services_1_1_application.xhtml#ad8773f391dad072d2ab420993dc5adb4">Harlinn::Common::Core::Services::Application</a>.</p>

</div>
</div>
<a id="aa5098a41dbd67562c55a40d30ce1eef7" name="aa5098a41dbd67562c55a40d30ce1eef7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5098a41dbd67562c55a40d30ce1eef7">&#9670;&#160;</a></span>Stopped()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::Stopped </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a21b54f8693027262e3b8be157d21c808" name="a21b54f8693027262e3b8be157d21c808"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21b54f8693027262e3b8be157d21c808">&#9670;&#160;</a></span>ThreadName()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::ThreadName </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Symbol Documentation</h2>
<a id="a132afadef10b755095d4bb5356a54013" name="a132afadef10b755095d4bb5356a54013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a132afadef10b755095d4bb5356a54013">&#9670;&#160;</a></span>ActiveObject</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object.xhtml">ActiveObject</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae69c3cd1206569651cf9c5609a498f42" name="ae69c3cd1206569651cf9c5609a498f42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae69c3cd1206569651cf9c5609a498f42">&#9670;&#160;</a></span>messages_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a831e0206a7ccd3973643b533abf22374">ConcurrentQueue</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::messages_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2209cc88b340292b960c206b74c54a66" name="a2209cc88b340292b960c206b74c54a66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2209cc88b340292b960c206b74c54a66">&#9670;&#160;</a></span>messagesPosted_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic&lt;size_t&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::messagesPosted_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb6401eb291ad5392972a76c1fc915f1" name="acb6401eb291ad5392972a76c1fc915f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb6401eb291ad5392972a76c1fc915f1">&#9670;&#160;</a></span>messagesProcessed_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic&lt;size_t&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::messagesProcessed_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a11fb8489ff2736d5ac353f7ebf31be02" name="a11fb8489ff2736d5ac353f7ebf31be02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11fb8489ff2736d5ac353f7ebf31be02">&#9670;&#160;</a></span>OnException</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a128d2aa5d79627de93caa4404efe5095">Event</a>&lt;void( <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">ActiveObjectBase</a>*, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_exception_event_args.xhtml">ActiveObjectExceptionEventArgs</a>&amp; )&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::OnException</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adf4c75d3fd85409571672983337092e5" name="adf4c75d3fd85409571672983337092e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf4c75d3fd85409571672983337092e5">&#9670;&#160;</a></span>OnProcessMessage</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a128d2aa5d79627de93caa4404efe5095">Event</a>&lt;void( <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">ActiveObjectBase</a>*, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_message_event_args.xhtml">ActiveObjectMessageEventArgs</a>&lt;<a class="el" href="#a18e2d16d285d0bc513d446304d8a1206">MessageType</a>&gt;&amp; )&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::OnProcessMessage</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7eacfb072d935f4d663de960b41cf6c9" name="a7eacfb072d935f4d663de960b41cf6c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7eacfb072d935f4d663de960b41cf6c9">&#9670;&#160;</a></span>started_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic&lt;bool&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::started_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a86f7c7bfce3863a91db47fff89647907" name="a86f7c7bfce3863a91db47fff89647907"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86f7c7bfce3863a91db47fff89647907">&#9670;&#160;</a></span>stopped_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic&lt;bool&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::stopped_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d0335b982a0217843d93711cfa5b33e" name="a6d0335b982a0217843d93711cfa5b33e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d0335b982a0217843d93711cfa5b33e">&#9670;&#160;</a></span>threadName_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename MessageT , size_t maxQueueSize = 10 * 1024&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">Harlinn::Common::Core::Concurrency::ActiveObjectBase</a>&lt; MessageT, maxQueueSize &gt;::threadName_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_active_object_8h.xhtml">HCCActiveObject.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_concurrency.xhtml">Concurrency</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_concurrency_1_1_active_object_base.xhtml">ActiveObjectBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
