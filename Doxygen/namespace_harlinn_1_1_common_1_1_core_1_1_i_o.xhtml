<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::IO Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#concepts">Concepts</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::IO Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks.xhtml">Blocks</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_isolated_storage.xhtml">IsolatedStorage</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_path.xhtml">Path</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_serialization.xhtml">Serialization</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml">Sockets</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1abstract.xhtml">abstract</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for asynchronous I/O notification handlers.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1abstract.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_attached_system_stream.xhtml">AttachedSystemStream</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">BinaryReader</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader_base.xhtml">BinaryReaderBase</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_writer.xhtml">BinaryWriter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_writer_base.xhtml">BinaryWriterBase</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_buffered_binary_reader.xhtml">BufferedBinaryReader</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_buffered_binary_writer.xhtml">BufferedBinaryWriter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_buffer_stream.xhtml">BufferStream</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements a stream for a buffer.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_buffer_stream.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_config.xhtml">CommConfig</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_dispatcher.xhtml">CommDeviceDispatcher</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_handler.xhtml">CommDeviceHandler</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_request.xhtml">CommDeviceRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml">CommDeviceStream</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_connect_pipe_request.xhtml">ConnectPipeRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml">Context</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml" title="Context is an I/O completion port with an attached thread-pool that services I/O completion notificat...">Context</a> is an I/O completion port with an attached thread-pool that services I/O completion notifications.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_device_control_block.xhtml">DeviceControlBlock</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_directory.xhtml">Directory</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_directory_access_mask.xhtml">DirectoryAccessMask</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The access mask for a directory.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_directory_access_mask.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_directory_not_found_exception.xhtml">DirectoryNotFoundException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_drive_not_found_exception.xhtml">DriveNotFoundException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_end_of_stream_exception.xhtml">EndOfStreamException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file.xhtml">File</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_access_mask.xhtml">FileAccessMask</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The access mask for a file.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_access_mask.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_dispatcher.xhtml">FileDispatcher</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_handler.xhtml">FileHandler</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_info.xhtml">FileInfo</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_load_exception.xhtml">FileLoadException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_not_found_exception.xhtml">FileNotFoundException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_request.xhtml">FileRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_stream.xhtml">FileStream</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_system_entries.xhtml">FileSystemEntries</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_system_entry.xhtml">FileSystemEntry</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_find_data.xhtml">FindData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_find_data_base.xhtml">FindDataBase</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_find_data_base_3_01char_01_4.xhtml">FindDataBase&lt; char &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_find_data_base_3_01wchar__t_01_4.xhtml">FindDataBase&lt; wchar_t &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_i_o_completion_port.xhtml">IOCompletionPort</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_i_o_exception.xhtml">IOException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_i_stream_memory_stream.xhtml">IStreamMemoryStream</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_i_stream_stream.xhtml">IStreamStream</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A stream wrapper for the IStream interface.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_i_stream_stream.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_memory_stream.xhtml">MemoryStream</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a stream stored in memory.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_memory_stream.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_overlapped.xhtml">Overlapped</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_path_too_long_exception.xhtml">PathTooLongException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_pipe.xhtml">Pipe</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_pipe_access_mask.xhtml">PipeAccessMask</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_pipe_dispatcher.xhtml">PipeDispatcher</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_pipe_exception.xhtml">PipeException</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_pipe_handler.xhtml">PipeHandler</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_pipe_request.xhtml">PipeRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_read_comm_device_request.xhtml">ReadCommDeviceRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_read_file_request.xhtml">ReadFileRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_read_pipe_request.xhtml">ReadPipeRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all asynchronous requests.  <a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_serial_port.xhtml">SerialPort</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_serial_ports.xhtml">SerialPorts</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_split_path.xhtml">SplitPath</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_system_stream.xhtml">SystemStream</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_transact_pipe_request.xhtml">TransactPipeRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_wait_event_comm_device_request.xhtml">WaitEventCommDeviceRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_write_buffer.xhtml">WriteBuffer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_write_comm_device_request.xhtml">WriteCommDeviceRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_write_file_request.xhtml">WriteFileRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_write_pipe_request.xhtml">WritePipeRequest</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="concepts" name="concepts"></a>
Concepts</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_reader.xhtml">StreamReader</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_writer.xhtml">StreamWriter</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_position.xhtml">StreamPosition</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_size.xhtml">StreamSize</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_i_o.xhtml">StreamIO</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_seek.xhtml">StreamSeek</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_feature_tests.xhtml">StreamFeatureTests</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_flush.xhtml">StreamFlush</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream_clone.xhtml">StreamClone</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="concept_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_stream.xhtml">Stream</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a70b3ac21b4a57e030c23bb12becc0009" id="r_a70b3ac21b4a57e030c23bb12becc0009"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a70b3ac21b4a57e030c23bb12becc0009"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a70b3ac21b4a57e030c23bb12becc0009">DirectoryInfo</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_system_entry.xhtml">FileSystemEntry</a>&lt;StringT&gt;</td></tr>
<tr class="separator:a70b3ac21b4a57e030c23bb12becc0009"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a6a9aa4730805d9ba69493d528a169f86" id="r_a6a9aa4730805d9ba69493d528a169f86"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a9aa4730805d9ba69493d528a169f86">Parity</a> : Byte { <br />
&#160;&#160;<a class="el" href="#a6a9aa4730805d9ba69493d528a169f86a6adf97f83acf6453d4a6a4b1070f3754">None</a> = NOPARITY
, <br />
&#160;&#160;<a class="el" href="#a6a9aa4730805d9ba69493d528a169f86a37b6bd7fe61d651735cec3d3b0356c66">Odd</a> = ODDPARITY
, <br />
&#160;&#160;<a class="el" href="#a6a9aa4730805d9ba69493d528a169f86a35537fbc25d87ffe59e4f35fefcd34b7">Even</a> = EVENPARITY
, <br />
&#160;&#160;<a class="el" href="#a6a9aa4730805d9ba69493d528a169f86ab82a9a13f4651e9abcbde90cd24ce2cb">Mark</a> = MARKPARITY
, <br />
&#160;&#160;<a class="el" href="#a6a9aa4730805d9ba69493d528a169f86ad511f8439ecde36647437fbba67a4394">Space</a> = SPACEPARITY
<br />
 }</td></tr>
<tr class="memdesc:a6a9aa4730805d9ba69493d528a169f86"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parity scheme.  <a href="#a6a9aa4730805d9ba69493d528a169f86">More...</a><br /></td></tr>
<tr class="separator:a6a9aa4730805d9ba69493d528a169f86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c5ca9a1555b20defdf7e823f1e3be84" id="r_a4c5ca9a1555b20defdf7e823f1e3be84"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4c5ca9a1555b20defdf7e823f1e3be84">StopBits</a> : Byte { <br />
&#160;&#160;<a class="el" href="#a4c5ca9a1555b20defdf7e823f1e3be84a06c2cea18679d64399783748fa367bdd">One</a> = ONESTOPBIT
, <br />
&#160;&#160;<a class="el" href="#a4c5ca9a1555b20defdf7e823f1e3be84ac1ced57069889668088d8d24691407b4">One5</a> = ONE5STOPBITS
, <br />
&#160;&#160;<a class="el" href="#a4c5ca9a1555b20defdf7e823f1e3be84aaada29daee1d64ed0fe907043855cb7e">Two</a> = TWOSTOPBITS
<br />
 }</td></tr>
<tr class="memdesc:a4c5ca9a1555b20defdf7e823f1e3be84"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of stop bits.  <a href="#a4c5ca9a1555b20defdf7e823f1e3be84">More...</a><br /></td></tr>
<tr class="separator:a4c5ca9a1555b20defdf7e823f1e3be84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4be71424be3b33461bc74f680953efc0" id="r_a4be71424be3b33461bc74f680953efc0"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4be71424be3b33461bc74f680953efc0">DtrControl</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a4be71424be3b33461bc74f680953efc0abcfaccebf745acfd5e75351095a5394a">Disable</a> = DTR_CONTROL_DISABLE
, <br />
&#160;&#160;<a class="el" href="#a4be71424be3b33461bc74f680953efc0a2faec1f9f8cc7f8f40d521c4dd574f49">Enable</a> = DTR_CONTROL_ENABLE
, <br />
&#160;&#160;<a class="el" href="#a4be71424be3b33461bc74f680953efc0a7559811a22a9c4b79332bd85a197e4c5">Handshake</a> = DTR_CONTROL_HANDSHAKE
<br />
 }</td></tr>
<tr class="memdesc:a4be71424be3b33461bc74f680953efc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">The DTR (data-terminal-ready) flow control.  <a href="#a4be71424be3b33461bc74f680953efc0">More...</a><br /></td></tr>
<tr class="separator:a4be71424be3b33461bc74f680953efc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ad6ab7a0fbb48ebfb665bac67f54bed" id="r_a8ad6ab7a0fbb48ebfb665bac67f54bed"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8ad6ab7a0fbb48ebfb665bac67f54bed">RtsControl</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a8ad6ab7a0fbb48ebfb665bac67f54bedabcfaccebf745acfd5e75351095a5394a">Disable</a> = RTS_CONTROL_DISABLE
, <br />
&#160;&#160;<a class="el" href="#a8ad6ab7a0fbb48ebfb665bac67f54beda2faec1f9f8cc7f8f40d521c4dd574f49">Enable</a> = RTS_CONTROL_ENABLE
, <br />
&#160;&#160;<a class="el" href="#a8ad6ab7a0fbb48ebfb665bac67f54beda7559811a22a9c4b79332bd85a197e4c5">Handshake</a> = RTS_CONTROL_HANDSHAKE
, <br />
&#160;&#160;<a class="el" href="#a8ad6ab7a0fbb48ebfb665bac67f54bedaa8875bbe4272c0bdd786cfaaedf77921">Toggle</a> = RTS_CONTROL_TOGGLE
<br />
 }</td></tr>
<tr class="memdesc:a8ad6ab7a0fbb48ebfb665bac67f54bed"><td class="mdescLeft">&#160;</td><td class="mdescRight">The RTS (request-to-send) flow control.  <a href="#a8ad6ab7a0fbb48ebfb665bac67f54bed">More...</a><br /></td></tr>
<tr class="separator:a8ad6ab7a0fbb48ebfb665bac67f54bed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fc11016321301bed88a89943f666442" id="r_a2fc11016321301bed88a89943f666442"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fc11016321301bed88a89943f666442">FlowControl</a> { <br />
&#160;&#160;<a class="el" href="#a2fc11016321301bed88a89943f666442a6adf97f83acf6453d4a6a4b1070f3754">None</a>
, <br />
&#160;&#160;<a class="el" href="#a2fc11016321301bed88a89943f666442a68b2e819c7ae75383d71fba14fd307cf">XonXoff</a>
, <br />
&#160;&#160;<a class="el" href="#a2fc11016321301bed88a89943f666442a87c996149a638feafa898609db3576d6">CtsRts</a>
, <br />
&#160;&#160;<a class="el" href="#a2fc11016321301bed88a89943f666442a4cd6ab82cecaed908af3e0b8b6d7fa55">CtsDtr</a>
, <br />
&#160;&#160;<a class="el" href="#a2fc11016321301bed88a89943f666442acb67e53741c168083df5bd00d311128f">DsrRts</a>
, <br />
&#160;&#160;<a class="el" href="#a2fc11016321301bed88a89943f666442a24c64bd9539b7287353489dc775616a0">DsrDtr</a>
<br />
 }</td></tr>
<tr class="separator:a2fc11016321301bed88a89943f666442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a11b994dfb0e9555ae11e30a55ed03" id="r_ae4a11b994dfb0e9555ae11e30a55ed03"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03">PurgeFlags</a> : UInt32 { <br />
&#160;&#160;<a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03a4beb26469ed257139dfde3842b8e0a25">TxAbort</a> = PURGE_TXABORT
, <br />
&#160;&#160;<a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03af18aba92d9a5a08ce4e06312febc8784">RxAbort</a> = PURGE_RXABORT
, <br />
&#160;&#160;<a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03a52bae791e8250633b3200fb855d8fd0e">TxClear</a> = PURGE_TXCLEAR
, <br />
&#160;&#160;<a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03a4b96bf095fbc9986608a437870932a21">RxClear</a> = PURGE_RXCLEAR
<br />
 }</td></tr>
<tr class="separator:ae4a11b994dfb0e9555ae11e30a55ed03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43b2b6cc23c699d0d11dabf91e452a73" id="r_a43b2b6cc23c699d0d11dabf91e452a73"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73">EscapeFunction</a> : UInt32 { <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73ad2e1cb7e7b6e65e67381819e67f4d20b">SetXOff</a> = SETXOFF
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73a41e90f469ae45e2555129dc5838a5d81">SetXOn</a> = SETXON
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73ae32b3348c3a7b6600812850c52598d73">SetRTS</a> = SETRTS
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73ae4c112006388557428869e496ac46ef9">ClearRTS</a> = CLRRTS
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73aab693d076f4a9113476e7bf4dbb0f596">SetDTR</a> = SETDTR
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73aaf157c77144d43e242d9f4df77a59c75">ClearDTR</a> = CLRDTR
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73a526d688f37a86d3c3f27d0c5016eb71d">Reset</a> = RESETDEV
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73ad54805c8364f9094fe35fc685beff555">SetBreak</a> = SETBREAK
, <br />
&#160;&#160;<a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73a25c12c1a592ce399a53b82ede6ea0052">ClearBreak</a> = CLRBREAK
<br />
 }</td></tr>
<tr class="separator:a43b2b6cc23c699d0d11dabf91e452a73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa4043e816cdf7fff3351ef2fb3e5e7e" id="r_afa4043e816cdf7fff3351ef2fb3e5e7e"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7e">CommDeviceRequestType</a> { <br />
&#160;&#160;<a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7ea88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</a>
, <br />
&#160;&#160;<a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7ea7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a>
, <br />
&#160;&#160;<a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7ea1129c0e4d43f2d121652a7302712cff6">Write</a>
, <br />
&#160;&#160;<a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7ea46c0bc3bb4c3822652b9d22638ac8592">ReadScatter</a>
, <br />
&#160;&#160;<a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7ea67d5ce4c6637a563ac36918c936275a1">WriteGather</a>
, <br />
&#160;&#160;<a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7ea26ffc7a770c8ad5385e8c55c1900b7af">WaitEvent</a>
<br />
 }</td></tr>
<tr class="separator:afa4043e816cdf7fff3351ef2fb3e5e7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ef3d1fff903b2cf0a2a2fef8f004299" id="r_a6ef3d1fff903b2cf0a2a2fef8f004299"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299">FileAttributes</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a060d84e58c348e44da6637e57e2e9201">Readonly</a> = 0x00000001
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a7acdf85c69cc3c5305456a293524386e">Hidden</a> = 0x00000002
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299aa45da96d0bf6575970f2d27af22be28a">System</a> = 0x00000004
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299ae73cda510e8bb947f7e61089e5581494">Directory</a> = 0x00000010
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299ae727b00944f81e1d0a95c12886ac4641">Archive</a> = 0x00000020
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299ae0ac20adce6ffee48c7151b070aa5737">Device</a> = 0x00000040
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a960b44c579bc2f6818d2daaf9e4c16f0">Normal</a> = 0x00000080
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a10d85d7664a911bcaec89732098c269a">Temporary</a> = 0x00000100
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a665edbfa4075b64522e0304e3b81dbeb">SparseFile</a> = 0x00000200
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a2452ed8906b5677e159ec14af42d4464">ReparsePoint</a> = 0x00000400
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a4d602abc0c0f2f7c1a5156d964517e4e">Compressed</a> = 0x00000800
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a8d9da4bc0e49a50e09ac9f7e56789d39">Offline</a> = 0x00001000
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299af5dda7285a5b290d1fa723217beb178d">NotContentIndexed</a> = 0x00002000
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299adef09fa4a833717d38298eb37c861af8">Encrypted</a> = 0x00004000
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a97031c48f2f5f2e9a5dac76901c1dfcf">IntegrityStream</a> = 0x00008000
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a615e6f9baca5553d44683a098d342b70">Virtual</a> = 0x00010000
, <br />
&#160;&#160;<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299a46fb5b0b5312031f598898350090ca38">NoScrubData</a> = 0x00020000
<br />
 }</td></tr>
<tr class="separator:a6ef3d1fff903b2cf0a2a2fef8f004299"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a119922fe47306af0809ad307f644e239" id="r_a119922fe47306af0809ad307f644e239"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a119922fe47306af0809ad307f644e239">FileAccess</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a> = FILE_READ_ACCESS
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a1129c0e4d43f2d121652a7302712cff6">Write</a> = FILE_WRITE_ACCESS
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a70a2a84088d405a2e3f1e3accaa16723">ReadWrite</a> = FILE_READ_ACCESS | FILE_WRITE_ACCESS
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a3ac4692f3935a49a0b243eecf529faa9">Append</a> = FILE_APPEND_DATA
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a721920642d6f43e0f5d2172e0afee463">ReadExtendedAttributes</a> = FILE_READ_EA
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239adda2caf384dfda99dc7d5accaf2b8135">WriteExtendedAttributes</a> = FILE_WRITE_EA
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a29d5eebe071ec16a16eaf04b7cf717f5">ReadAttributes</a> = FILE_READ_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a70e88a144f018b27557a6d1f7bfdc027">WriteAttributes</a> = FILE_WRITE_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a0becb5d6322cc6ee2d5acfe585718755">StandardRightsRead</a> = STANDARD_RIGHTS_READ
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a771305671b0c5d7391a442f58344086e">StandardRightsWrite</a> = STANDARD_RIGHTS_WRITE
, <br />
&#160;&#160;<a class="el" href="#a119922fe47306af0809ad307f644e239a7a1920d61156abc05a60135aefe8bc67">Default</a> = FILE_ALL_ACCESS
<br />
 }</td></tr>
<tr class="separator:a119922fe47306af0809ad307f644e239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad08150ca836d96d6a2e802d0a799e3ec" id="r_ad08150ca836d96d6a2e802d0a799e3ec"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad08150ca836d96d6a2e802d0a799e3ec">FileMode</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3eca16aad4508a33afcd497d9cb37480722f">CreateNew</a> = CREATE_NEW
, <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3eca686e697538050e4664636337cc3b834f">Create</a> = CREATE_ALWAYS
, <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3ecac3bf447eabe632720a3aa1a7ce401274">Open</a> = OPEN_EXISTING
, <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3eca2e034baee96e72d88dc601ff77b8dd96">OpenOrCreate</a> = OPEN_ALWAYS
, <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3ecaa8156810bfee2bd2b44765b9e91db3bd">Truncate</a> = TRUNCATE_EXISTING
, <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3eca3ac4692f3935a49a0b243eecf529faa9">Append</a> = 6
, <br />
&#160;&#160;<a class="el" href="#ad08150ca836d96d6a2e802d0a799e3eca7a1920d61156abc05a60135aefe8bc67">Default</a> = OpenOrCreate
<br />
 }</td></tr>
<tr class="separator:ad08150ca836d96d6a2e802d0a799e3ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13505d1b63b90d7148c4d113d5c85f7c" id="r_a13505d1b63b90d7148c4d113d5c85f7c"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7c">FileShare</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7ca6adf97f83acf6453d4a6a4b1070f3754">None</a> = 0
, <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7ca7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a> = 1
, <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7ca1129c0e4d43f2d121652a7302712cff6">Write</a> = 2
, <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7ca70a2a84088d405a2e3f1e3accaa16723">ReadWrite</a> = 3
, <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7caf2a6c498fb90ee345d997f888fce3b18">Delete</a> = 4
, <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7ca6711ce41907fd6bb07b48b7d1f6a60c5">Inheritable</a> = 16
, <br />
&#160;&#160;<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7ca7a1920d61156abc05a60135aefe8bc67">Default</a> = None
<br />
 }</td></tr>
<tr class="separator:a13505d1b63b90d7148c4d113d5c85f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ea9a757527637cdf825a63d7cdad659" id="r_a9ea9a757527637cdf825a63d7cdad659"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ea9a757527637cdf825a63d7cdad659">FileOptions</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659aacb7820573f20d69befb56e41f440549">WriteThrough</a> = FILE_FLAG_WRITE_THROUGH
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659a6adf97f83acf6453d4a6a4b1070f3754">None</a> = 0
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659adef09fa4a833717d38298eb37c861af8">Encrypted</a> = 0x00004000
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659a0f55772a66ac13443543235e6dff37e0">DeleteOnClose</a> = FILE_FLAG_DELETE_ON_CLOSE
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659ab98905eaa0b9c27d44a2b71fc0cc0053">SequentialScan</a> = FILE_FLAG_SEQUENTIAL_SCAN
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659a10db094b878f085cfcdaf63716e1b37c">RandomAccess</a> = FILE_FLAG_RANDOM_ACCESS
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659a288aae25bc408055f50c21c991903a44">Asynchronous</a> = FILE_FLAG_OVERLAPPED
, <br />
&#160;&#160;<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659a7a1920d61156abc05a60135aefe8bc67">Default</a> = FILE_FLAG_SEQUENTIAL_SCAN
<br />
 }</td></tr>
<tr class="separator:a9ea9a757527637cdf825a63d7cdad659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae7807fa07a9fa1176a683da0c0484fa" id="r_aae7807fa07a9fa1176a683da0c0484fa"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aae7807fa07a9fa1176a683da0c0484fa">FileSystemRights</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa9737b198b43957e0daee34be05d34687">ReadData</a> = 0x000001
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faab7d3aa194943aa16f20889f042086069">ListDirectory</a> = ReadData
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa6e1b51cfac84762d246873062581366d">WriteData</a> = 0x000002
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faabbb992d8cfdc63aac2f7f49683724be2">CreateFiles</a> = WriteData
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faafb0842088cddfff4746fea0f6a0afd01">AppendData</a> = 0x000004
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faac8d000b7fbcb5f75f70bc423850b5e9f">CreateDirectories</a> = AppendData
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa721920642d6f43e0f5d2172e0afee463">ReadExtendedAttributes</a> = 0x000008
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faadda2caf384dfda99dc7d5accaf2b8135">WriteExtendedAttributes</a> = 0x000010
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa7f7413bd983f50dae1342455318ccd69">ExecuteFile</a> = 0x000020
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa975e8b324cf1e05ee9c7490b51c230e0">Traverse</a> = ExecuteFile
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faabe0ed4c5cc820817d20b25c5dbd302fb">DeleteSubdirectoriesAndFiles</a> = 0x000040
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa29d5eebe071ec16a16eaf04b7cf717f5">ReadAttributes</a> = 0x000080
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa70e88a144f018b27557a6d1f7bfdc027">WriteAttributes</a> = 0x000100
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faaf2a6c498fb90ee345d997f888fce3b18">Delete</a> = 0x010000
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faae1c92b30b08d486bf4793cf49a55d6af">ReadPermissions</a> = 0x020000
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faaeee2f0e26d79c327733e00edcd874bb2">ChangePermissions</a> = 0x040000
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa0148c75e378cd6e4934669437136396e">TakeOwnership</a> = 0x080000
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faab18b960c57a784907dc1cd97ba8a8065">Synchronize</a> = 0x100000
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa8a1db58568147877ebe2c30e1a822b8d">FullControl</a> = 0x1F01FF
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a> = ReadData | ReadExtendedAttributes | ReadAttributes | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa8a1f1ed01b9d6d145309ce94f3721b65">ReadAndExecute</a> = Read | ExecuteFile
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa1129c0e4d43f2d121652a7302712cff6">Write</a> = WriteData | AppendData | WriteExtendedAttributes | WriteAttributes
, <br />
&#160;&#160;<a class="el" href="#aae7807fa07a9fa1176a683da0c0484faa7f090bbab1cc7f9c08bf4e54d932d3c0">Modify</a> = ReadAndExecute | Write | Delete
<br />
 }</td></tr>
<tr class="separator:aae7807fa07a9fa1176a683da0c0484fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43d9e8bd207fc87491a4437c6fada79b" id="r_a43d9e8bd207fc87491a4437c6fada79b"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a43d9e8bd207fc87491a4437c6fada79b">FileAccessRights</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79baa85e916ed0951816492b3dd35ebe578f">HCC_COMMON_CORE_SECURITY_BASE_ENUM_ACCESS_RIGHTS</a>
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba9737b198b43957e0daee34be05d34687">ReadData</a> = FILE_READ_DATA
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba6e1b51cfac84762d246873062581366d">WriteData</a> = FILE_WRITE_DATA
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba3ac4692f3935a49a0b243eecf529faa9">Append</a> = FILE_APPEND_DATA
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba721920642d6f43e0f5d2172e0afee463">ReadExtendedAttributes</a> = FILE_READ_EA
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79badda2caf384dfda99dc7d5accaf2b8135">WriteExtendedAttributes</a> = FILE_WRITE_EA
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba40cd014b7b6251e3a22e6a45a73a64e1">Execute</a> = FILE_EXECUTE
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba29d5eebe071ec16a16eaf04b7cf717f5">ReadAttributes</a> = FILE_READ_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba70e88a144f018b27557a6d1f7bfdc027">WriteAttributes</a> = FILE_WRITE_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a> = ReadData | ReadExtendedAttributes | ReadAttributes | Synchronize | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba1129c0e4d43f2d121652a7302712cff6">Write</a> = WriteData | WriteExtendedAttributes | WriteAttributes | Synchronize | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba8a1db58568147877ebe2c30e1a822b8d">FullControl</a> = FILE_ALL_ACCESS
<br />
 }</td></tr>
<tr class="separator:a43d9e8bd207fc87491a4437c6fada79b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab001dd07a0b69031da4f40347aa14b26" id="r_ab001dd07a0b69031da4f40347aa14b26"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab001dd07a0b69031da4f40347aa14b26">DirectoryAccessRights</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26aa85e916ed0951816492b3dd35ebe578f">HCC_COMMON_CORE_SECURITY_BASE_ENUM_ACCESS_RIGHTS</a>
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26ae6cc9a4187b8d036772e281b73bae25d">AddFile</a> = FILE_ADD_FILE
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26afa49cdef0778c0a25789221d33efa5d9">AddSubDirectory</a> = FILE_ADD_SUBDIRECTORY
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a721920642d6f43e0f5d2172e0afee463">ReadExtendedAttributes</a> = FILE_READ_EA
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26adda2caf384dfda99dc7d5accaf2b8135">WriteExtendedAttributes</a> = FILE_WRITE_EA
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a975e8b324cf1e05ee9c7490b51c230e0">Traverse</a> = FILE_TRAVERSE
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26ac9cbe5e0e93ae9324b54954af1785298">DeleteChild</a> = FILE_DELETE_CHILD
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a29d5eebe071ec16a16eaf04b7cf717f5">ReadAttributes</a> = FILE_READ_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a70e88a144f018b27557a6d1f7bfdc027">WriteAttributes</a> = FILE_WRITE_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a> = Traverse | ReadExtendedAttributes | ReadAttributes | Synchronize | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a1129c0e4d43f2d121652a7302712cff6">Write</a> = AddFile | AddSubDirectory | DeleteChild |WriteExtendedAttributes | WriteAttributes | Synchronize | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26a8a1db58568147877ebe2c30e1a822b8d">FullControl</a> = FILE_ALL_ACCESS
<br />
 }</td></tr>
<tr class="separator:ab001dd07a0b69031da4f40347aa14b26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c3c45102ad354cb31217b4baa64bd64" id="r_a5c3c45102ad354cb31217b4baa64bd64"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c3c45102ad354cb31217b4baa64bd64">SeekOrigin</a> { <br />
&#160;&#160;<a class="el" href="#a5c3c45102ad354cb31217b4baa64bd64a87a408e5da79c65157f9776e9a7e2658">StartOfFile</a> = 0
, <br />
&#160;&#160;<a class="el" href="#a5c3c45102ad354cb31217b4baa64bd64a28f47fca9070284299ff9305ad05b54b">CurrentPosition</a> = 1
, <br />
&#160;&#160;<a class="el" href="#a5c3c45102ad354cb31217b4baa64bd64a9556e151da49cd4bcf0352857cb33509">EndOfFile</a> = 2
<br />
 }</td></tr>
<tr class="separator:a5c3c45102ad354cb31217b4baa64bd64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88e5e8b1c77e668874c139cda3cad218" id="r_a88e5e8b1c77e668874c139cda3cad218"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a88e5e8b1c77e668874c139cda3cad218">FileRequestType</a> { <br />
&#160;&#160;<a class="el" href="#a88e5e8b1c77e668874c139cda3cad218a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</a>
, <br />
&#160;&#160;<a class="el" href="#a88e5e8b1c77e668874c139cda3cad218a7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a>
, <br />
&#160;&#160;<a class="el" href="#a88e5e8b1c77e668874c139cda3cad218a1129c0e4d43f2d121652a7302712cff6">Write</a>
, <br />
&#160;&#160;<a class="el" href="#a88e5e8b1c77e668874c139cda3cad218a46c0bc3bb4c3822652b9d22638ac8592">ReadScatter</a>
, <br />
&#160;&#160;<a class="el" href="#a88e5e8b1c77e668874c139cda3cad218a67d5ce4c6637a563ac36918c936275a1">WriteGather</a>
<br />
 }</td></tr>
<tr class="separator:a88e5e8b1c77e668874c139cda3cad218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e9effb171a9d3efbd0b0fe56a30596" id="r_a35e9effb171a9d3efbd0b0fe56a30596"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596">RequestWaitResult</a> : Int32 { <br />
&#160;&#160;<a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596a4307e7e7986aa21a4b7c3ef2b5e948f6">Incomplete</a> = -3
, <br />
&#160;&#160;<a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596a004bf12711c355f9f61e09f12466c416">IoCompletion</a> = -2
, <br />
&#160;&#160;<a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596ac85a251cc457840f1e032f1b733e9398">Timeout</a> = -1
, <br />
&#160;&#160;<a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</a> = 0
, <br />
&#160;&#160;<a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596a505a83f220c02df2f85c3810cd9ceb38">Success</a> = 1
<br />
 }</td></tr>
<tr class="memdesc:a35e9effb171a9d3efbd0b0fe56a30596"><td class="mdescLeft">&#160;</td><td class="mdescRight">The result for Request::Wait.  <a href="#a35e9effb171a9d3efbd0b0fe56a30596">More...</a><br /></td></tr>
<tr class="separator:a35e9effb171a9d3efbd0b0fe56a30596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a764778f1ca956f42add7a627c4ac6d2a" id="r_a764778f1ca956f42add7a627c4ac6d2a"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a764778f1ca956f42add7a627c4ac6d2a">PipeAccessRights</a> : DWORD { <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aaa85e916ed0951816492b3dd35ebe578f">HCC_COMMON_CORE_SECURITY_BASE_ENUM_ACCESS_RIGHTS</a>
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa9737b198b43957e0daee34be05d34687">ReadData</a> = FILE_READ_DATA
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa6e1b51cfac84762d246873062581366d">WriteData</a> = FILE_WRITE_DATA
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aad34940a82ed41ed086e5e05828439f76">CreateInstance</a> = FILE_CREATE_PIPE_INSTANCE
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa721920642d6f43e0f5d2172e0afee463">ReadExtendedAttributes</a> = FILE_READ_EA
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aadda2caf384dfda99dc7d5accaf2b8135">WriteExtendedAttributes</a> = FILE_WRITE_EA
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa29d5eebe071ec16a16eaf04b7cf717f5">ReadAttributes</a> = FILE_READ_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa70e88a144f018b27557a6d1f7bfdc027">WriteAttributes</a> = FILE_WRITE_ATTRIBUTES
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a> = ReadData | ReadExtendedAttributes | ReadAttributes | Synchronize | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa1129c0e4d43f2d121652a7302712cff6">Write</a> = WriteData | WriteExtendedAttributes | WriteAttributes | Synchronize | ReadPermissions
, <br />
&#160;&#160;<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2aa8a1db58568147877ebe2c30e1a822b8d">FullControl</a> = FILE_ALL_ACCESS
<br />
 }</td></tr>
<tr class="separator:a764778f1ca956f42add7a627c4ac6d2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27ab962996878b0c809db3bf2e60a8e6" id="r_a27ab962996878b0c809db3bf2e60a8e6"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6">PipeOpenMode</a> : UInt32 { <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6aefeb369cccbd560588a756610865664c">In</a> = PIPE_ACCESS_INBOUND
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6a7c147cda9e49590f6abe83d118b7353b">Out</a> = PIPE_ACCESS_OUTBOUND
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6a47a54d9da8952a3980d27488b00a21c1">InOut</a> = PIPE_ACCESS_DUPLEX
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6aa0544e219bca3e8e88b609d89e734960">FirstInstance</a> = FILE_FLAG_FIRST_PIPE_INSTANCE
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6aacb7820573f20d69befb56e41f440549">WriteThrough</a> = FILE_FLAG_WRITE_THROUGH
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6a5f1b91d5ebf354ef9c15b0671c0e8b18">Overlapped</a> = FILE_FLAG_OVERLAPPED
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6a9a5219b3b103391c634ee2dea9cfe5a5">WriteACL</a> = WRITE_DAC
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6aeefa9ccbf2071c722eefe2ce44c70b02">WriteOwner</a> = WRITE_OWNER
, <br />
&#160;&#160;<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6a81a69280451111624464e4f7d6988691">SystemSecurity</a> = ACCESS_SYSTEM_SECURITY
<br />
 }</td></tr>
<tr class="separator:a27ab962996878b0c809db3bf2e60a8e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe2205c129a5f919fc08afd10e3afefb" id="r_abe2205c129a5f919fc08afd10e3afefb"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe2205c129a5f919fc08afd10e3afefb">PipeMode</a> : UInt32 { <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefba20550804a6328e3541a4414854d01017">WriteByte</a> = PIPE_TYPE_BYTE
, <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefba26e20509fee1aae414c27fbecdef2db7">WriteMessage</a> = PIPE_TYPE_MESSAGE
, <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefbac436c659ad8f88223c0342dd623bf952">ReadByte</a> = PIPE_READMODE_BYTE
, <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefbad1b73309db7e1905c1fabf13c3cb38ac">ReadMessage</a> = PIPE_READMODE_MESSAGE
, <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefbaa245c3230debe5c956484ecc6fa93877">Byte</a> = WriteByte | ReadByte
, <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefba4c2a8fe7eaf24721cc7a9f0175115bd4">Message</a> = WriteMessage | ReadMessage
, <br />
&#160;&#160;<a class="el" href="#abe2205c129a5f919fc08afd10e3afefba1e1b48ea3466b9169faa2a419e52a7c3">RejectRemoteClients</a> = PIPE_REJECT_REMOTE_CLIENTS
<br />
 }</td></tr>
<tr class="separator:abe2205c129a5f919fc08afd10e3afefb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29889fb1d4f9193b26dd21422541eb6d" id="r_a29889fb1d4f9193b26dd21422541eb6d"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a29889fb1d4f9193b26dd21422541eb6d">PipeRequestType</a> { <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</a>
, <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6da7a1a5f3e79fdc91edf2f5ead9d66abb4">Read</a>
, <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6da1129c0e4d43f2d121652a7302712cff6">Write</a>
, <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6da46c0bc3bb4c3822652b9d22638ac8592">ReadScatter</a>
, <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6da67d5ce4c6637a563ac36918c936275a1">WriteGather</a>
, <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6da49ab28040dfa07f53544970c6d147e1e">Connect</a>
, <br />
&#160;&#160;<a class="el" href="#a29889fb1d4f9193b26dd21422541eb6dab40263c0e023bef4680022eb5e9ed486">Transact</a>
<br />
 }</td></tr>
<tr class="separator:a29889fb1d4f9193b26dd21422541eb6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a95d2dd4c7cb4c00062a503d033904609" id="r_a95d2dd4c7cb4c00062a503d033904609"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a95d2dd4c7cb4c00062a503d033904609">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03">PurgeFlags</a>, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>)</td></tr>
<tr class="separator:a95d2dd4c7cb4c00062a503d033904609"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a113d9e3013ef9cdcc42bd2a40599652b" id="r_a113d9e3013ef9cdcc42bd2a40599652b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a113d9e3013ef9cdcc42bd2a40599652b">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml#a553ad670b6814f3c007ba1a7e59c9fe1">CommDeviceStream::ErrorFlags</a>, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>)</td></tr>
<tr class="separator:a113d9e3013ef9cdcc42bd2a40599652b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a751ac9b40d3cfee8bcfb6d1acf820684" id="r_a751ac9b40d3cfee8bcfb6d1acf820684"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a751ac9b40d3cfee8bcfb6d1acf820684">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml#a04b82529468a5c218509a5693fd7a6ae">CommDeviceStream::EventFlags</a>, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>)</td></tr>
<tr class="separator:a751ac9b40d3cfee8bcfb6d1acf820684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa223d4c695706d3f766f3a2c2e0a6cb2" id="r_aa223d4c695706d3f766f3a2c2e0a6cb2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa223d4c695706d3f766f3a2c2e0a6cb2">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml#a280550c2f53686e1577d32511c5c0130">CommDeviceStream::ModemStatusFlags</a>, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>)</td></tr>
<tr class="separator:aa223d4c695706d3f766f3a2c2e0a6cb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ba93fcdcd8db83b36c4a53c52d7b112" id="r_a7ba93fcdcd8db83b36c4a53c52d7b112"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7ba93fcdcd8db83b36c4a53c52d7b112">CreateDirectoryEntry</a> (const char *pathName, const SECURITY_ATTRIBUTES *securityAttributes)</td></tr>
<tr class="memdesc:a7ba93fcdcd8db83b36c4a53c52d7b112"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new directory. If the underlying file system supports security on files and directories, the function applies a specified security descriptor to the new directory.  <br /></td></tr>
<tr class="separator:a7ba93fcdcd8db83b36c4a53c52d7b112"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92747179978c4fe36a389bf86b9dfce5" id="r_a92747179978c4fe36a389bf86b9dfce5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a92747179978c4fe36a389bf86b9dfce5">CreateDirectoryEntry</a> (const wchar_t *pathName, const SECURITY_ATTRIBUTES *securityAttributes)</td></tr>
<tr class="memdesc:a92747179978c4fe36a389bf86b9dfce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new directory. If the underlying file system supports security on files and directories, the function applies a specified security descriptor to the new directory.  <br /></td></tr>
<tr class="separator:a92747179978c4fe36a389bf86b9dfce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add8030e9610ec79a0de069118a104f00" id="r_add8030e9610ec79a0de069118a104f00"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:add8030e9610ec79a0de069118a104f00"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#add8030e9610ec79a0de069118a104f00">CreateDirectoryEntry</a> (const StringT &amp;pathName, const SECURITY_ATTRIBUTES *securityAttributes)</td></tr>
<tr class="memdesc:add8030e9610ec79a0de069118a104f00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new directory. If the underlying file system supports security on files and directories, the function applies a specified security descriptor to the new directory.  <br /></td></tr>
<tr class="separator:add8030e9610ec79a0de069118a104f00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5d18547a2fee20868a5ced77fe26a62" id="r_aa5d18547a2fee20868a5ced77fe26a62"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa5d18547a2fee20868a5ced77fe26a62">EraseDirectoryEntry</a> (const char *pathName)</td></tr>
<tr class="memdesc:aa5d18547a2fee20868a5ced77fe26a62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes an existing empty directory.  <br /></td></tr>
<tr class="separator:aa5d18547a2fee20868a5ced77fe26a62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53cbfd9f4cefa3de2d338222052b0bec" id="r_a53cbfd9f4cefa3de2d338222052b0bec"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a53cbfd9f4cefa3de2d338222052b0bec">EraseDirectoryEntry</a> (const wchar_t *pathName)</td></tr>
<tr class="memdesc:a53cbfd9f4cefa3de2d338222052b0bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes an existing empty directory.  <br /></td></tr>
<tr class="separator:a53cbfd9f4cefa3de2d338222052b0bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd130fe4bde01d154e072ae2b0e94771" id="r_acd130fe4bde01d154e072ae2b0e94771"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:acd130fe4bde01d154e072ae2b0e94771"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#acd130fe4bde01d154e072ae2b0e94771">EraseDirectoryEntry</a> (const StringT &amp;pathName)</td></tr>
<tr class="memdesc:acd130fe4bde01d154e072ae2b0e94771"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes an existing empty directory.  <br /></td></tr>
<tr class="separator:acd130fe4bde01d154e072ae2b0e94771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a665f8bc5408c1e708c8dbe59c9cbff10" id="r_a665f8bc5408c1e708c8dbe59c9cbff10"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a665f8bc5408c1e708c8dbe59c9cbff10">CreateFileEntry</a> (const char *fileName, DWORD desiredAccess, DWORD shareMode, const SECURITY_ATTRIBUTES *securityAttributes, DWORD creationDisposition, DWORD flagsAndAttributes, HANDLE templateFileHandle=nullptr)</td></tr>
<tr class="memdesc:a665f8bc5408c1e708c8dbe59c9cbff10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates or opens a file or I/O device. The most commonly used I/O devices are as follows: file, file stream, directory, physical disk, volume, console buffer, tape drive, communications resource, mailslot, and pipe. The function returns a handle that can be used to access the file or device for various types of I/O depending on the file or device and the flags and attributes specified.  <br /></td></tr>
<tr class="separator:a665f8bc5408c1e708c8dbe59c9cbff10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e865d14bc1c7b1318e7ecf660553f0" id="r_a27e865d14bc1c7b1318e7ecf660553f0"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a27e865d14bc1c7b1318e7ecf660553f0">CreateFileEntry</a> (const wchar_t *fileName, DWORD desiredAccess, DWORD shareMode, const SECURITY_ATTRIBUTES *securityAttributes, DWORD creationDisposition, DWORD flagsAndAttributes, HANDLE templateFileHandle=nullptr)</td></tr>
<tr class="separator:a27e865d14bc1c7b1318e7ecf660553f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac977b428c5816cf6929f06478137a1fe" id="r_ac977b428c5816cf6929f06478137a1fe"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:ac977b428c5816cf6929f06478137a1fe"><td class="memTemplItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ac977b428c5816cf6929f06478137a1fe">CreateFileEntry</a> (const StringT &amp;fileName, DWORD desiredAccess, DWORD shareMode, const SECURITY_ATTRIBUTES *securityAttributes, DWORD creationDisposition, DWORD flagsAndAttributes, HANDLE templateFileHandle=nullptr)</td></tr>
<tr class="separator:ac977b428c5816cf6929f06478137a1fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4f75ae2f11ff8263f5ad3136fad7886" id="r_ad4f75ae2f11ff8263f5ad3136fad7886"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad4f75ae2f11ff8263f5ad3136fad7886">FindFirstFileEntry</a> (const char *fileName, FINDEX_INFO_LEVELS infoLevel, WIN32_FIND_DATAA *findData, FINDEX_SEARCH_OPS searchOp, DWORD additionalFlags)</td></tr>
<tr class="separator:ad4f75ae2f11ff8263f5ad3136fad7886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91b1cc7f15b41ba9f146bc5210106277" id="r_a91b1cc7f15b41ba9f146bc5210106277"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91b1cc7f15b41ba9f146bc5210106277">FindFirstFileEntry</a> (const wchar_t *fileName, FINDEX_INFO_LEVELS infoLevel, WIN32_FIND_DATAW *findData, FINDEX_SEARCH_OPS searchOp, DWORD additionalFlags)</td></tr>
<tr class="separator:a91b1cc7f15b41ba9f146bc5210106277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a875c142fbb5c6c0062474988cb36aa66" id="r_a875c142fbb5c6c0062474988cb36aa66"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT, typename FindDataT  = std::conditional_t&lt;std::is_same_v&lt;typename StringT::value_type,wchar_t&gt;, WIN32_FIND_DATAW, WIN32_FIND_DATAA&gt;&gt; </td></tr>
<tr class="memitem:a875c142fbb5c6c0062474988cb36aa66"><td class="memTemplItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a875c142fbb5c6c0062474988cb36aa66">FindFirstFileEntry</a> (const StringT &amp;fileName, FINDEX_INFO_LEVELS infoLevel, FindDataT *findData, FINDEX_SEARCH_OPS searchOp, DWORD additionalFlags)</td></tr>
<tr class="separator:a875c142fbb5c6c0062474988cb36aa66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17f71ae11ba497fdf041f6b48a17da59" id="r_a17f71ae11ba497fdf041f6b48a17da59"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a17f71ae11ba497fdf041f6b48a17da59">FindFirstFileEntry</a> (const char *fileName, WIN32_FIND_DATAA *findData)</td></tr>
<tr class="separator:a17f71ae11ba497fdf041f6b48a17da59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aa11948ae789a6fa38349d2b21dd033" id="r_a0aa11948ae789a6fa38349d2b21dd033"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0aa11948ae789a6fa38349d2b21dd033">FindFirstFileEntry</a> (const wchar_t *fileName, WIN32_FIND_DATAW *findData)</td></tr>
<tr class="separator:a0aa11948ae789a6fa38349d2b21dd033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f15d6801fda27aca146f3dd326ec3ac" id="r_a5f15d6801fda27aca146f3dd326ec3ac"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT, typename FindDataT  = std::conditional_t&lt;std::is_same_v&lt;typename StringT::value_type, wchar_t&gt;, WIN32_FIND_DATAW, WIN32_FIND_DATAA&gt;&gt; </td></tr>
<tr class="memitem:a5f15d6801fda27aca146f3dd326ec3ac"><td class="memTemplItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a5f15d6801fda27aca146f3dd326ec3ac">FindFirstFileEntry</a> (const StringT &amp;fileName, FindDataT *findData)</td></tr>
<tr class="separator:a5f15d6801fda27aca146f3dd326ec3ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada269e32dabf97d452fc2fab266e53f6" id="r_ada269e32dabf97d452fc2fab266e53f6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ada269e32dabf97d452fc2fab266e53f6">FindNextFileEntry</a> (HANDLE findHandle, WIN32_FIND_DATAA *findData)</td></tr>
<tr class="separator:ada269e32dabf97d452fc2fab266e53f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedc720638e5ac66575fbe793d86b3c39" id="r_aedc720638e5ac66575fbe793d86b3c39"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aedc720638e5ac66575fbe793d86b3c39">FindNextFileEntry</a> (HANDLE findHandle, WIN32_FIND_DATAW *findData)</td></tr>
<tr class="separator:aedc720638e5ac66575fbe793d86b3c39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ebaab96568ee6ac2ea626516a9babb0" id="r_a5ebaab96568ee6ac2ea626516a9babb0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ebaab96568ee6ac2ea626516a9babb0">EraseFileEntry</a> (const char *fileName)</td></tr>
<tr class="separator:a5ebaab96568ee6ac2ea626516a9babb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab80df14232a9892e544e979c63a2a9f6" id="r_ab80df14232a9892e544e979c63a2a9f6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab80df14232a9892e544e979c63a2a9f6">EraseFileEntry</a> (const wchar_t *fileName)</td></tr>
<tr class="separator:ab80df14232a9892e544e979c63a2a9f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a521f4fb0d3dcfd8b879159936239bd0e" id="r_a521f4fb0d3dcfd8b879159936239bd0e"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a521f4fb0d3dcfd8b879159936239bd0e"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a521f4fb0d3dcfd8b879159936239bd0e">EraseFileEntry</a> (const StringT &amp;fileName)</td></tr>
<tr class="separator:a521f4fb0d3dcfd8b879159936239bd0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc20e500b6cff064c2e9ebda6ac2907a" id="r_acc20e500b6cff064c2e9ebda6ac2907a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acc20e500b6cff064c2e9ebda6ac2907a">EraseVolumeMountPoint</a> (const wchar_t *volumeMountPoint)</td></tr>
<tr class="separator:acc20e500b6cff064c2e9ebda6ac2907a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e1ebdfd48b503955020f44375c0ad1f" id="r_a5e1ebdfd48b503955020f44375c0ad1f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5e1ebdfd48b503955020f44375c0ad1f">EraseVolumeMountPoint</a> (const char *volumeMountPoint)</td></tr>
<tr class="separator:a5e1ebdfd48b503955020f44375c0ad1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1c8c77afc69e68a0708b25f57a45e40" id="r_ac1c8c77afc69e68a0708b25f57a45e40"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:ac1c8c77afc69e68a0708b25f57a45e40"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ac1c8c77afc69e68a0708b25f57a45e40">EraseVolumeMountPoint</a> (const StringT &amp;volumeMountPoint)</td></tr>
<tr class="separator:ac1c8c77afc69e68a0708b25f57a45e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a593b9a0aa34dcd0a374029cd090a0b68" id="r_a593b9a0aa34dcd0a374029cd090a0b68"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a593b9a0aa34dcd0a374029cd090a0b68">FindFirstEntryChangeNotification</a> (const char *fileName, bool watchSubtree, DWORD notifyFilter)</td></tr>
<tr class="separator:a593b9a0aa34dcd0a374029cd090a0b68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14cd75498832dd4a69089c71456fdb5d" id="r_a14cd75498832dd4a69089c71456fdb5d"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a14cd75498832dd4a69089c71456fdb5d">FindFirstEntryChangeNotification</a> (const wchar_t *fileName, bool watchSubtree, DWORD notifyFilter)</td></tr>
<tr class="separator:a14cd75498832dd4a69089c71456fdb5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e263324f79b66bf45a2e7c0fae72c2b" id="r_a0e263324f79b66bf45a2e7c0fae72c2b"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a0e263324f79b66bf45a2e7c0fae72c2b"><td class="memTemplItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a0e263324f79b66bf45a2e7c0fae72c2b">FindFirstEntryChangeNotification</a> (const StringT &amp;fileName, bool watchSubtree, DWORD notifyFilter)</td></tr>
<tr class="separator:a0e263324f79b66bf45a2e7c0fae72c2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23e7e446e359977c34fccc20e5beea1b" id="r_a23e7e446e359977c34fccc20e5beea1b"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23e7e446e359977c34fccc20e5beea1b">FindFirstVolumeEntry</a> (wchar_t *volumeName, DWORD volumeNameLength)</td></tr>
<tr class="separator:a23e7e446e359977c34fccc20e5beea1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1e1f43f88f918da290d5480d1424a4" id="r_acd1e1f43f88f918da290d5480d1424a4"><td class="memItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acd1e1f43f88f918da290d5480d1424a4">FindFirstVolumeEntry</a> (char *volumeName, DWORD volumeNameLength)</td></tr>
<tr class="separator:acd1e1f43f88f918da290d5480d1424a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6340023515ba65142d66aeb78d3edd1f" id="r_a6340023515ba65142d66aeb78d3edd1f"><td class="memTemplParams" colspan="2">template&lt;WideStringLike StringT&gt; </td></tr>
<tr class="memitem:a6340023515ba65142d66aeb78d3edd1f"><td class="memTemplItemLeft" align="right" valign="top">HANDLE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a6340023515ba65142d66aeb78d3edd1f">FindFirstVolumeEntry</a> (StringT &amp;resultString)</td></tr>
<tr class="separator:a6340023515ba65142d66aeb78d3edd1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ab77025b8193ad941ef56d801d2925a" id="r_a7ab77025b8193ad941ef56d801d2925a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7ab77025b8193ad941ef56d801d2925a">FindNextVolumeEntry</a> (HANDLE findHandle, wchar_t *volumeName, DWORD volumeNameLength)</td></tr>
<tr class="separator:a7ab77025b8193ad941ef56d801d2925a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec8fac85cceb6e50b155047c52e5b03a" id="r_aec8fac85cceb6e50b155047c52e5b03a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec8fac85cceb6e50b155047c52e5b03a">FindNextVolumeEntry</a> (HANDLE findHandle, char *volumeName, DWORD volumeNameLength)</td></tr>
<tr class="separator:aec8fac85cceb6e50b155047c52e5b03a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab66899e75bde4308cdf31ccd237d9a0a" id="r_ab66899e75bde4308cdf31ccd237d9a0a"><td class="memTemplParams" colspan="2">template&lt;WideStringLike StringT&gt; </td></tr>
<tr class="memitem:ab66899e75bde4308cdf31ccd237d9a0a"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ab66899e75bde4308cdf31ccd237d9a0a">FindNextVolumeEntry</a> (HANDLE findHandle, StringT &amp;resultString)</td></tr>
<tr class="separator:ab66899e75bde4308cdf31ccd237d9a0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf15569172f4bb002843d397d5dd0115" id="r_abf15569172f4bb002843d397d5dd0115"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abf15569172f4bb002843d397d5dd0115">QueryDiskFreeSpace</a> (const char *rootPathName, LPDWORD sectorsPerCluster, LPDWORD bytesPerSector, LPDWORD numberOfFreeClusters, LPDWORD totalNumberOfClusters)</td></tr>
<tr class="separator:abf15569172f4bb002843d397d5dd0115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a857efc17b4f2953f1d6829091c113917" id="r_a857efc17b4f2953f1d6829091c113917"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a857efc17b4f2953f1d6829091c113917">QueryDiskFreeSpace</a> (const wchar_t *rootPathName, LPDWORD sectorsPerCluster, LPDWORD bytesPerSector, LPDWORD numberOfFreeClusters, LPDWORD totalNumberOfClusters)</td></tr>
<tr class="separator:a857efc17b4f2953f1d6829091c113917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7e5382c047b8e11ba5f52829b68b139" id="r_ab7e5382c047b8e11ba5f52829b68b139"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:ab7e5382c047b8e11ba5f52829b68b139"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ab7e5382c047b8e11ba5f52829b68b139">QueryDiskFreeSpace</a> (const StringT &amp;rootPathName, LPDWORD sectorsPerCluster, LPDWORD bytesPerSector, LPDWORD numberOfFreeClusters, LPDWORD totalNumberOfClusters)</td></tr>
<tr class="separator:ab7e5382c047b8e11ba5f52829b68b139"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47655878d521227eebd971ab660a81ca" id="r_a47655878d521227eebd971ab660a81ca"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47655878d521227eebd971ab660a81ca">QueryDiskFreeSpace</a> (const char *rootPathName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *freeBytesAvailableToCaller, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *totalNumberOfBytes, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *totalNumberOfFreeBytes)</td></tr>
<tr class="separator:a47655878d521227eebd971ab660a81ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1a472beaca53037ccb399af09022623" id="r_af1a472beaca53037ccb399af09022623"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af1a472beaca53037ccb399af09022623">QueryDiskFreeSpace</a> (const wchar_t *rootPathName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *freeBytesAvailableToCaller, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *totalNumberOfBytes, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *totalNumberOfFreeBytes)</td></tr>
<tr class="separator:af1a472beaca53037ccb399af09022623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2d543d3b7acf9be3ac5087970be8848" id="r_ac2d543d3b7acf9be3ac5087970be8848"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:ac2d543d3b7acf9be3ac5087970be8848"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ac2d543d3b7acf9be3ac5087970be8848">QueryDiskFreeSpace</a> (const StringT &amp;rootPathName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *freeBytesAvailableToCaller, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *totalNumberOfBytes, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *totalNumberOfFreeBytes)</td></tr>
<tr class="separator:ac2d543d3b7acf9be3ac5087970be8848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8724c293e997fdfc9fa4a955bdbe796b" id="r_a8724c293e997fdfc9fa4a955bdbe796b"><td class="memItemLeft" align="right" valign="top">HRESULT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8724c293e997fdfc9fa4a955bdbe796b">QueryDiskSpaceInformation</a> (const char *rootPath, DISK_SPACE_INFORMATION *diskSpaceInfo)</td></tr>
<tr class="separator:a8724c293e997fdfc9fa4a955bdbe796b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd7503caea1cc06466c72d088dbacb57" id="r_acd7503caea1cc06466c72d088dbacb57"><td class="memItemLeft" align="right" valign="top">HRESULT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acd7503caea1cc06466c72d088dbacb57">QueryDiskSpaceInformation</a> (const wchar_t *rootPath, DISK_SPACE_INFORMATION *diskSpaceInfo)</td></tr>
<tr class="separator:acd7503caea1cc06466c72d088dbacb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd846b9d75d1e158928e1a6c2bc8b3d7" id="r_abd846b9d75d1e158928e1a6c2bc8b3d7"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:abd846b9d75d1e158928e1a6c2bc8b3d7"><td class="memTemplItemLeft" align="right" valign="top">HRESULT&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#abd846b9d75d1e158928e1a6c2bc8b3d7">QueryDiskSpaceInformation</a> (const StringT &amp;rootPath, DISK_SPACE_INFORMATION *diskSpaceInfo)</td></tr>
<tr class="separator:abd846b9d75d1e158928e1a6c2bc8b3d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ab823ee2bcad04638bf95b088ebda17" id="r_a1ab823ee2bcad04638bf95b088ebda17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ab823ee2bcad04638bf95b088ebda17">QueryDriveType</a> (const char *rootPathName)</td></tr>
<tr class="separator:a1ab823ee2bcad04638bf95b088ebda17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c1db85cc3eed173546500915566adb7" id="r_a2c1db85cc3eed173546500915566adb7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c1db85cc3eed173546500915566adb7">QueryDriveType</a> (const wchar_t *rootPathName)</td></tr>
<tr class="separator:a2c1db85cc3eed173546500915566adb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf97a6034114f240c5563529f0c6867c" id="r_adf97a6034114f240c5563529f0c6867c"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:adf97a6034114f240c5563529f0c6867c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#adf97a6034114f240c5563529f0c6867c">QueryDriveType</a> (const StringT &amp;rootPathName)</td></tr>
<tr class="separator:adf97a6034114f240c5563529f0c6867c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a162f3b6137f77c72ff4dac6020ec2b35" id="r_a162f3b6137f77c72ff4dac6020ec2b35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a162f3b6137f77c72ff4dac6020ec2b35">QueryFileAttributes</a> (const char *fileName)</td></tr>
<tr class="separator:a162f3b6137f77c72ff4dac6020ec2b35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6045338f4750c9447fcc88d6847d159e" id="r_a6045338f4750c9447fcc88d6847d159e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6045338f4750c9447fcc88d6847d159e">QueryFileAttributes</a> (const wchar_t *fileName)</td></tr>
<tr class="separator:a6045338f4750c9447fcc88d6847d159e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adadd7e2b8902c9dde2fdf0f73f45a5bc" id="r_adadd7e2b8902c9dde2fdf0f73f45a5bc"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:adadd7e2b8902c9dde2fdf0f73f45a5bc"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#adadd7e2b8902c9dde2fdf0f73f45a5bc">QueryFileAttributes</a> (const StringT &amp;fileName)</td></tr>
<tr class="separator:adadd7e2b8902c9dde2fdf0f73f45a5bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84c952500b82998be999542401eec3e0" id="r_a84c952500b82998be999542401eec3e0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84c952500b82998be999542401eec3e0">QueryFileAttributes</a> (const char *fileName, GET_FILEEX_INFO_LEVELS infoLevel, void *result)</td></tr>
<tr class="separator:a84c952500b82998be999542401eec3e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15d9a55ba46d90f55302973f965cc3c7" id="r_a15d9a55ba46d90f55302973f965cc3c7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a15d9a55ba46d90f55302973f965cc3c7">QueryFileAttributes</a> (const wchar_t *fileName, GET_FILEEX_INFO_LEVELS infoLevel, void *result)</td></tr>
<tr class="separator:a15d9a55ba46d90f55302973f965cc3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abafa388f52bd9d68a903e3ad8bc6a636" id="r_abafa388f52bd9d68a903e3ad8bc6a636"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:abafa388f52bd9d68a903e3ad8bc6a636"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#abafa388f52bd9d68a903e3ad8bc6a636">QueryFileAttributes</a> (const StringT &amp;fileName, GET_FILEEX_INFO_LEVELS infoLevel, void *result)</td></tr>
<tr class="separator:abafa388f52bd9d68a903e3ad8bc6a636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2f1930e19cd430ee68cc0a75fb4064f" id="r_ae2f1930e19cd430ee68cc0a75fb4064f"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae2f1930e19cd430ee68cc0a75fb4064f">QueryFullPathName</a> (const char *fileName, DWORD bufferLength, char *buffer, char **filePart=nullptr)</td></tr>
<tr class="separator:ae2f1930e19cd430ee68cc0a75fb4064f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7a6bd9c4ae3cb4dc6aa382f05ec565b" id="r_ac7a6bd9c4ae3cb4dc6aa382f05ec565b"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7a6bd9c4ae3cb4dc6aa382f05ec565b">QueryFullPathName</a> (const wchar_t *fileName, DWORD bufferLength, wchar_t *buffer, wchar_t **filePart=nullptr)</td></tr>
<tr class="separator:ac7a6bd9c4ae3cb4dc6aa382f05ec565b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4fc808311828a8451ad9e8711bebe4a" id="r_af4fc808311828a8451ad9e8711bebe4a"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:af4fc808311828a8451ad9e8711bebe4a"><td class="memTemplItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#af4fc808311828a8451ad9e8711bebe4a">QueryFullPathName</a> (const StringT &amp;fileName, DWORD bufferLength, wchar_t *buffer, wchar_t **filePart=nullptr)</td></tr>
<tr class="separator:af4fc808311828a8451ad9e8711bebe4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c314917e5c74f743a45124e19c3098" id="r_ae3c314917e5c74f743a45124e19c3098"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae3c314917e5c74f743a45124e19c3098">QueryRelativePathTo</a> (const wchar_t *fromPath, DWORD fromAttributes, const wchar_t *relativeToPath, DWORD toAttributes, wchar_t *resultPath)</td></tr>
<tr class="separator:ae3c314917e5c74f743a45124e19c3098"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac55a1c1406c85791f532538dbca9d8da" id="r_ac55a1c1406c85791f532538dbca9d8da"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac55a1c1406c85791f532538dbca9d8da">QueryRelativePathTo</a> (const char *fromPath, DWORD fromAttributes, const char *relativeToPath, DWORD toAttributes, char *resultPath)</td></tr>
<tr class="separator:ac55a1c1406c85791f532538dbca9d8da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795ed0a03c83b5b90be48e1cae777515" id="r_a795ed0a03c83b5b90be48e1cae777515"><td class="memTemplParams" colspan="2">template&lt;SimpleWideStringLike StringT1, SimpleWideStringLike StringT2&gt; </td></tr>
<tr class="memitem:a795ed0a03c83b5b90be48e1cae777515"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a795ed0a03c83b5b90be48e1cae777515">QueryRelativePathTo</a> (const StringT1 &amp;fromPath, DWORD fromAttributes, const StringT2 &amp;relativeToPath, DWORD toAttributes, wchar_t *resultPath)</td></tr>
<tr class="separator:a795ed0a03c83b5b90be48e1cae777515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0560b9fb619782ece248a86447afd9ce" id="r_a0560b9fb619782ece248a86447afd9ce"><td class="memTemplParams" colspan="2">template&lt;SimpleAnsiStringLike StringT1, SimpleAnsiStringLike StringT2&gt; </td></tr>
<tr class="memitem:a0560b9fb619782ece248a86447afd9ce"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a0560b9fb619782ece248a86447afd9ce">QueryRelativePathTo</a> (const StringT1 &amp;fromPath, DWORD fromAttributes, const StringT2 &amp;relativeToPath, DWORD toAttributes, char *resultPath)</td></tr>
<tr class="separator:a0560b9fb619782ece248a86447afd9ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe7876b79f51b1af47f195917d4c094f" id="r_abe7876b79f51b1af47f195917d4c094f"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe7876b79f51b1af47f195917d4c094f">QueryTempPath</a> (DWORD bufferLength, char *buffer)</td></tr>
<tr class="separator:abe7876b79f51b1af47f195917d4c094f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a399cfcf4d9ed3126387db36be49e4005" id="r_a399cfcf4d9ed3126387db36be49e4005"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a399cfcf4d9ed3126387db36be49e4005">QueryTempPath</a> (DWORD bufferLength, wchar_t *buffer)</td></tr>
<tr class="separator:a399cfcf4d9ed3126387db36be49e4005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b2d3307d93f5728e734eeb0e6b07894" id="r_a6b2d3307d93f5728e734eeb0e6b07894"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b2d3307d93f5728e734eeb0e6b07894">QueryTempPath2</a> (DWORD bufferLength, char *buffer)</td></tr>
<tr class="separator:a6b2d3307d93f5728e734eeb0e6b07894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fd836b42991a630a458754fdc9aa78c" id="r_a3fd836b42991a630a458754fdc9aa78c"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3fd836b42991a630a458754fdc9aa78c">QueryTempPath2</a> (DWORD bufferLength, wchar_t *buffer)</td></tr>
<tr class="separator:a3fd836b42991a630a458754fdc9aa78c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83d5aded37b4ed9b6e062fa2a1f85746" id="r_a83d5aded37b4ed9b6e062fa2a1f85746"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83d5aded37b4ed9b6e062fa2a1f85746">QueryTempFileName</a> (const char *pathName, const char *prefixString, UINT unique, char *tempFileName)</td></tr>
<tr class="separator:a83d5aded37b4ed9b6e062fa2a1f85746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4f7729413f5e711bbda4ba52c0eed1c" id="r_af4f7729413f5e711bbda4ba52c0eed1c"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af4f7729413f5e711bbda4ba52c0eed1c">QueryTempFileName</a> (const wchar_t *pathName, const wchar_t *prefixString, UINT unique, wchar_t *tempFileName)</td></tr>
<tr class="separator:af4f7729413f5e711bbda4ba52c0eed1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5dc3658078a829bd600f39d2c9805a6" id="r_aa5dc3658078a829bd600f39d2c9805a6"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:aa5dc3658078a829bd600f39d2c9805a6"><td class="memTemplItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aa5dc3658078a829bd600f39d2c9805a6">QueryTempFileName</a> (const StringT &amp;pathName, const typename StringT::value_type *prefixString, UINT unique, wchar_t *tempFileName)</td></tr>
<tr class="separator:aa5dc3658078a829bd600f39d2c9805a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a114e4fc7db2a1c56b5abb319b94bd83f" id="r_a114e4fc7db2a1c56b5abb319b94bd83f"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a114e4fc7db2a1c56b5abb319b94bd83f"><td class="memTemplItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a114e4fc7db2a1c56b5abb319b94bd83f">QueryTempFileName</a> (const StringT &amp;pathName, const StringT &amp;prefixString, UINT unique, wchar_t *tempFileName)</td></tr>
<tr class="separator:a114e4fc7db2a1c56b5abb319b94bd83f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac908f3f5a5128b858d87871eec02faab" id="r_ac908f3f5a5128b858d87871eec02faab"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac908f3f5a5128b858d87871eec02faab">QueryLongPathName</a> (const char *shortPathName, char *longPathBuffer, DWORD longPathBufferSize)</td></tr>
<tr class="separator:ac908f3f5a5128b858d87871eec02faab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfd188d24ae519d5f4c0c7fe26fd1ee6" id="r_acfd188d24ae519d5f4c0c7fe26fd1ee6"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acfd188d24ae519d5f4c0c7fe26fd1ee6">QueryLongPathName</a> (const wchar_t *shortPathName, wchar_t *longPathBuffer, DWORD longPathBufferSize)</td></tr>
<tr class="separator:acfd188d24ae519d5f4c0c7fe26fd1ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d5ecaa814f3e76b29481cb7012ebbf7" id="r_a1d5ecaa814f3e76b29481cb7012ebbf7"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a1d5ecaa814f3e76b29481cb7012ebbf7"><td class="memTemplItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a1d5ecaa814f3e76b29481cb7012ebbf7">QueryLongPathName</a> (const StringT &amp;shortPathName, wchar_t *longPathBuffer, DWORD longPathBufferSize)</td></tr>
<tr class="separator:a1d5ecaa814f3e76b29481cb7012ebbf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a652baa6691e18e9ea3c37ee107797636" id="r_a652baa6691e18e9ea3c37ee107797636"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a652baa6691e18e9ea3c37ee107797636">QueryShortPathName</a> (const char *longPathName, char *shortPathBuffer, DWORD shortPathBufferSize)</td></tr>
<tr class="separator:a652baa6691e18e9ea3c37ee107797636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedbf9d36a6116ecdccb8d70e8a6653c8" id="r_aedbf9d36a6116ecdccb8d70e8a6653c8"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aedbf9d36a6116ecdccb8d70e8a6653c8">QueryShortPathName</a> (const wchar_t *longPathName, wchar_t *shortPathBuffer, DWORD shortPathBufferSize)</td></tr>
<tr class="separator:aedbf9d36a6116ecdccb8d70e8a6653c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2193aecbb89f5c2485f4a99c4dc1065d" id="r_a2193aecbb89f5c2485f4a99c4dc1065d"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a2193aecbb89f5c2485f4a99c4dc1065d"><td class="memTemplItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a2193aecbb89f5c2485f4a99c4dc1065d">QueryShortPathName</a> (const StringT &amp;longPathName, wchar_t *shortPathBuffer, DWORD shortPathBufferSize)</td></tr>
<tr class="separator:a2193aecbb89f5c2485f4a99c4dc1065d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae979ebd21976f826f1875448c6e7068f" id="r_ae979ebd21976f826f1875448c6e7068f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae979ebd21976f826f1875448c6e7068f">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299">FileAttributes</a>, DWORD)</td></tr>
<tr class="separator:ae979ebd21976f826f1875448c6e7068f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44e23d8d2bc1195f622983b2057bd07f" id="r_a44e23d8d2bc1195f622983b2057bd07f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a44e23d8d2bc1195f622983b2057bd07f">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a119922fe47306af0809ad307f644e239">FileAccess</a>, DWORD)</td></tr>
<tr class="separator:a44e23d8d2bc1195f622983b2057bd07f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b2b72747f411262811549962d0e25c1" id="r_a1b2b72747f411262811549962d0e25c1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1b2b72747f411262811549962d0e25c1">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7c">FileShare</a>, DWORD)</td></tr>
<tr class="separator:a1b2b72747f411262811549962d0e25c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97792c0d3d4afbf548173bf24a63dc3" id="r_ae97792c0d3d4afbf548173bf24a63dc3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae97792c0d3d4afbf548173bf24a63dc3">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a9ea9a757527637cdf825a63d7cdad659">FileOptions</a>, DWORD)</td></tr>
<tr class="separator:ae97792c0d3d4afbf548173bf24a63dc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6249d9784782923fddf51092225b3a5" id="r_ac6249d9784782923fddf51092225b3a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6249d9784782923fddf51092225b3a5">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#aae7807fa07a9fa1176a683da0c0484fa">FileSystemRights</a>, DWORD)</td></tr>
<tr class="separator:ac6249d9784782923fddf51092225b3a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10a44c6e7d50f01353c6c81ab7c837ae" id="r_a10a44c6e7d50f01353c6c81ab7c837ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a10a44c6e7d50f01353c6c81ab7c837ae">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a43d9e8bd207fc87491a4437c6fada79b">FileAccessRights</a>, DWORD)</td></tr>
<tr class="separator:a10a44c6e7d50f01353c6c81ab7c837ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c6ec382a080dccf5081038db8c64a25" id="r_a0c6ec382a080dccf5081038db8c64a25"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0c6ec382a080dccf5081038db8c64a25">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#ab001dd07a0b69031da4f40347aa14b26">DirectoryAccessRights</a>, DWORD)</td></tr>
<tr class="separator:a0c6ec382a080dccf5081038db8c64a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ee678c7f0f9a17b0dfc8f6d97e1f8c7" id="r_a3ee678c7f0f9a17b0dfc8f6d97e1f8c7"><td class="memTemplParams" colspan="2">template&lt;typename CharT &gt; <br />
requires (std::is_same_v&lt;std::remove_cvref_t&lt;CharT&gt;,char&gt; || std::is_same_v&lt;std::remove_cvref_t&lt;CharT&gt;, wchar_t&gt;)</td></tr>
<tr class="memitem:a3ee678c7f0f9a17b0dfc8f6d97e1f8c7"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a3ee678c7f0f9a17b0dfc8f6d97e1f8c7">FileSystemEntries</a> (const CharT *b, const CharT *e) -&gt; FileSystemEntries&lt; std::basic_string&lt; std::remove_cvref_t&lt; CharT &gt; &gt; &gt;</td></tr>
<tr class="separator:a3ee678c7f0f9a17b0dfc8f6d97e1f8c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a636003e2d7e5cc20cc9e2778a8468638" id="r_a636003e2d7e5cc20cc9e2778a8468638"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a636003e2d7e5cc20cc9e2778a8468638">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a764778f1ca956f42add7a627c4ac6d2a">PipeAccessRights</a>, DWORD)</td></tr>
<tr class="separator:a636003e2d7e5cc20cc9e2778a8468638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a484e025c564c5e22c6ffc753d57d2bf9" id="r_a484e025c564c5e22c6ffc753d57d2bf9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a484e025c564c5e22c6ffc753d57d2bf9">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6">PipeOpenMode</a>, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>)</td></tr>
<tr class="separator:a484e025c564c5e22c6ffc753d57d2bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac7dc861afcd74d0ca9bb38c9e70849e" id="r_aac7dc861afcd74d0ca9bb38c9e70849e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac7dc861afcd74d0ca9bb38c9e70849e">HCC_DEFINE_ENUM_FLAG_OPERATORS</a> (<a class="el" href="#abe2205c129a5f919fc08afd10e3afefb">PipeMode</a>, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>)</td></tr>
<tr class="separator:aac7dc861afcd74d0ca9bb38c9e70849e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a70b3ac21b4a57e030c23bb12becc0009" name="a70b3ac21b4a57e030c23bb12becc0009"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70b3ac21b4a57e030c23bb12becc0009">&#9670;&#160;</a></span>DirectoryInfo</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a70b3ac21b4a57e030c23bb12becc0009">Harlinn::Common::Core::IO::DirectoryInfo</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file_system_entry.xhtml">FileSystemEntry</a>&lt;StringT&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="afa4043e816cdf7fff3351ef2fb3e5e7e" name="afa4043e816cdf7fff3351ef2fb3e5e7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa4043e816cdf7fff3351ef2fb3e5e7e">&#9670;&#160;</a></span>CommDeviceRequestType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#afa4043e816cdf7fff3351ef2fb3e5e7e">Harlinn::Common::Core::IO::CommDeviceRequestType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="afa4043e816cdf7fff3351ef2fb3e5e7ea88183b946cc5f0e8c96b2e66e1c74a7e" name="afa4043e816cdf7fff3351ef2fb3e5e7ea88183b946cc5f0e8c96b2e66e1c74a7e"></a>Unknown&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afa4043e816cdf7fff3351ef2fb3e5e7ea7a1a5f3e79fdc91edf2f5ead9d66abb4" name="afa4043e816cdf7fff3351ef2fb3e5e7ea7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afa4043e816cdf7fff3351ef2fb3e5e7ea1129c0e4d43f2d121652a7302712cff6" name="afa4043e816cdf7fff3351ef2fb3e5e7ea1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afa4043e816cdf7fff3351ef2fb3e5e7ea46c0bc3bb4c3822652b9d22638ac8592" name="afa4043e816cdf7fff3351ef2fb3e5e7ea46c0bc3bb4c3822652b9d22638ac8592"></a>ReadScatter&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afa4043e816cdf7fff3351ef2fb3e5e7ea67d5ce4c6637a563ac36918c936275a1" name="afa4043e816cdf7fff3351ef2fb3e5e7ea67d5ce4c6637a563ac36918c936275a1"></a>WriteGather&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="afa4043e816cdf7fff3351ef2fb3e5e7ea26ffc7a770c8ad5385e8c55c1900b7af" name="afa4043e816cdf7fff3351ef2fb3e5e7ea26ffc7a770c8ad5385e8c55c1900b7af"></a>WaitEvent&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ab001dd07a0b69031da4f40347aa14b26" name="ab001dd07a0b69031da4f40347aa14b26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab001dd07a0b69031da4f40347aa14b26">&#9670;&#160;</a></span>DirectoryAccessRights</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#ab001dd07a0b69031da4f40347aa14b26">Harlinn::Common::Core::IO::DirectoryAccessRights</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26aa85e916ed0951816492b3dd35ebe578f" name="ab001dd07a0b69031da4f40347aa14b26aa85e916ed0951816492b3dd35ebe578f"></a>HCC_COMMON_CORE_SECURITY_BASE_ENUM_ACCESS_RIGHTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26ae6cc9a4187b8d036772e281b73bae25d" name="ab001dd07a0b69031da4f40347aa14b26ae6cc9a4187b8d036772e281b73bae25d"></a>AddFile&#160;</td><td class="fielddoc"><p>The right to create a file in the directory. </p>
</td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26afa49cdef0778c0a25789221d33efa5d9" name="ab001dd07a0b69031da4f40347aa14b26afa49cdef0778c0a25789221d33efa5d9"></a>AddSubDirectory&#160;</td><td class="fielddoc"><p>The right to create a subdirectory. </p>
</td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a721920642d6f43e0f5d2172e0afee463" name="ab001dd07a0b69031da4f40347aa14b26a721920642d6f43e0f5d2172e0afee463"></a>ReadExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26adda2caf384dfda99dc7d5accaf2b8135" name="ab001dd07a0b69031da4f40347aa14b26adda2caf384dfda99dc7d5accaf2b8135"></a>WriteExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a975e8b324cf1e05ee9c7490b51c230e0" name="ab001dd07a0b69031da4f40347aa14b26a975e8b324cf1e05ee9c7490b51c230e0"></a>Traverse&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26ac9cbe5e0e93ae9324b54954af1785298" name="ab001dd07a0b69031da4f40347aa14b26ac9cbe5e0e93ae9324b54954af1785298"></a>DeleteChild&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a29d5eebe071ec16a16eaf04b7cf717f5" name="ab001dd07a0b69031da4f40347aa14b26a29d5eebe071ec16a16eaf04b7cf717f5"></a>ReadAttributes&#160;</td><td class="fielddoc"><p>The right to read directory attributes. </p>
</td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a70e88a144f018b27557a6d1f7bfdc027" name="ab001dd07a0b69031da4f40347aa14b26a70e88a144f018b27557a6d1f7bfdc027"></a>WriteAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a7a1a5f3e79fdc91edf2f5ead9d66abb4" name="ab001dd07a0b69031da4f40347aa14b26a7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a1129c0e4d43f2d121652a7302712cff6" name="ab001dd07a0b69031da4f40347aa14b26a1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab001dd07a0b69031da4f40347aa14b26a8a1db58568147877ebe2c30e1a822b8d" name="ab001dd07a0b69031da4f40347aa14b26a8a1db58568147877ebe2c30e1a822b8d"></a>FullControl&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a4be71424be3b33461bc74f680953efc0" name="a4be71424be3b33461bc74f680953efc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4be71424be3b33461bc74f680953efc0">&#9670;&#160;</a></span>DtrControl</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a4be71424be3b33461bc74f680953efc0">Harlinn::Common::Core::IO::DtrControl</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The DTR (data-terminal-ready) flow control. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4be71424be3b33461bc74f680953efc0abcfaccebf745acfd5e75351095a5394a" name="a4be71424be3b33461bc74f680953efc0abcfaccebf745acfd5e75351095a5394a"></a>Disable&#160;</td><td class="fielddoc"><p>Disables the DTR line when the device is opened and leaves it disabled. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4be71424be3b33461bc74f680953efc0a2faec1f9f8cc7f8f40d521c4dd574f49" name="a4be71424be3b33461bc74f680953efc0a2faec1f9f8cc7f8f40d521c4dd574f49"></a>Enable&#160;</td><td class="fielddoc"><p>Enables the DTR line when the device is opened and leaves it on. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4be71424be3b33461bc74f680953efc0a7559811a22a9c4b79332bd85a197e4c5" name="a4be71424be3b33461bc74f680953efc0a7559811a22a9c4b79332bd85a197e4c5"></a>Handshake&#160;</td><td class="fielddoc"><p>Enables DTR handshaking. If handshaking is enabled, it is an error for the application to adjust the line by using the EscapeCommFunction function. </p>
</td></tr>
</table>

</div>
</div>
<a id="a43b2b6cc23c699d0d11dabf91e452a73" name="a43b2b6cc23c699d0d11dabf91e452a73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43b2b6cc23c699d0d11dabf91e452a73">&#9670;&#160;</a></span>EscapeFunction</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a43b2b6cc23c699d0d11dabf91e452a73">Harlinn::Common::Core::IO::EscapeFunction</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73ad2e1cb7e7b6e65e67381819e67f4d20b" name="a43b2b6cc23c699d0d11dabf91e452a73ad2e1cb7e7b6e65e67381819e67f4d20b"></a>SetXOff&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73a41e90f469ae45e2555129dc5838a5d81" name="a43b2b6cc23c699d0d11dabf91e452a73a41e90f469ae45e2555129dc5838a5d81"></a>SetXOn&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73ae32b3348c3a7b6600812850c52598d73" name="a43b2b6cc23c699d0d11dabf91e452a73ae32b3348c3a7b6600812850c52598d73"></a>SetRTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73ae4c112006388557428869e496ac46ef9" name="a43b2b6cc23c699d0d11dabf91e452a73ae4c112006388557428869e496ac46ef9"></a>ClearRTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73aab693d076f4a9113476e7bf4dbb0f596" name="a43b2b6cc23c699d0d11dabf91e452a73aab693d076f4a9113476e7bf4dbb0f596"></a>SetDTR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73aaf157c77144d43e242d9f4df77a59c75" name="a43b2b6cc23c699d0d11dabf91e452a73aaf157c77144d43e242d9f4df77a59c75"></a>ClearDTR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73a526d688f37a86d3c3f27d0c5016eb71d" name="a43b2b6cc23c699d0d11dabf91e452a73a526d688f37a86d3c3f27d0c5016eb71d"></a>Reset&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73ad54805c8364f9094fe35fc685beff555" name="a43b2b6cc23c699d0d11dabf91e452a73ad54805c8364f9094fe35fc685beff555"></a>SetBreak&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43b2b6cc23c699d0d11dabf91e452a73a25c12c1a592ce399a53b82ede6ea0052" name="a43b2b6cc23c699d0d11dabf91e452a73a25c12c1a592ce399a53b82ede6ea0052"></a>ClearBreak&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a119922fe47306af0809ad307f644e239" name="a119922fe47306af0809ad307f644e239"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a119922fe47306af0809ad307f644e239">&#9670;&#160;</a></span>FileAccess</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a119922fe47306af0809ad307f644e239">Harlinn::Common::Core::IO::FileAccess</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a7a1a5f3e79fdc91edf2f5ead9d66abb4" name="a119922fe47306af0809ad307f644e239a7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a1129c0e4d43f2d121652a7302712cff6" name="a119922fe47306af0809ad307f644e239a1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a70a2a84088d405a2e3f1e3accaa16723" name="a119922fe47306af0809ad307f644e239a70a2a84088d405a2e3f1e3accaa16723"></a>ReadWrite&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a3ac4692f3935a49a0b243eecf529faa9" name="a119922fe47306af0809ad307f644e239a3ac4692f3935a49a0b243eecf529faa9"></a>Append&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a721920642d6f43e0f5d2172e0afee463" name="a119922fe47306af0809ad307f644e239a721920642d6f43e0f5d2172e0afee463"></a>ReadExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239adda2caf384dfda99dc7d5accaf2b8135" name="a119922fe47306af0809ad307f644e239adda2caf384dfda99dc7d5accaf2b8135"></a>WriteExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a29d5eebe071ec16a16eaf04b7cf717f5" name="a119922fe47306af0809ad307f644e239a29d5eebe071ec16a16eaf04b7cf717f5"></a>ReadAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a70e88a144f018b27557a6d1f7bfdc027" name="a119922fe47306af0809ad307f644e239a70e88a144f018b27557a6d1f7bfdc027"></a>WriteAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a0becb5d6322cc6ee2d5acfe585718755" name="a119922fe47306af0809ad307f644e239a0becb5d6322cc6ee2d5acfe585718755"></a>StandardRightsRead&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a771305671b0c5d7391a442f58344086e" name="a119922fe47306af0809ad307f644e239a771305671b0c5d7391a442f58344086e"></a>StandardRightsWrite&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a119922fe47306af0809ad307f644e239a7a1920d61156abc05a60135aefe8bc67" name="a119922fe47306af0809ad307f644e239a7a1920d61156abc05a60135aefe8bc67"></a>Default&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a43d9e8bd207fc87491a4437c6fada79b" name="a43d9e8bd207fc87491a4437c6fada79b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43d9e8bd207fc87491a4437c6fada79b">&#9670;&#160;</a></span>FileAccessRights</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a43d9e8bd207fc87491a4437c6fada79b">Harlinn::Common::Core::IO::FileAccessRights</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79baa85e916ed0951816492b3dd35ebe578f" name="a43d9e8bd207fc87491a4437c6fada79baa85e916ed0951816492b3dd35ebe578f"></a>HCC_COMMON_CORE_SECURITY_BASE_ENUM_ACCESS_RIGHTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba9737b198b43957e0daee34be05d34687" name="a43d9e8bd207fc87491a4437c6fada79ba9737b198b43957e0daee34be05d34687"></a>ReadData&#160;</td><td class="fielddoc"><p>The right to write data to the file. </p>
</td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba6e1b51cfac84762d246873062581366d" name="a43d9e8bd207fc87491a4437c6fada79ba6e1b51cfac84762d246873062581366d"></a>WriteData&#160;</td><td class="fielddoc"><p>The right to write data to the file. </p>
</td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba3ac4692f3935a49a0b243eecf529faa9" name="a43d9e8bd207fc87491a4437c6fada79ba3ac4692f3935a49a0b243eecf529faa9"></a>Append&#160;</td><td class="fielddoc"><p>The right to append data to the file. </p>
<p>For local files, write operations will not overwrite existing data if this flag is specified without <a class="el" href="#a43d9e8bd207fc87491a4437c6fada79ba1129c0e4d43f2d121652a7302712cff6">FileAccessRights::Write</a>. </p>
</td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba721920642d6f43e0f5d2172e0afee463" name="a43d9e8bd207fc87491a4437c6fada79ba721920642d6f43e0f5d2172e0afee463"></a>ReadExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79badda2caf384dfda99dc7d5accaf2b8135" name="a43d9e8bd207fc87491a4437c6fada79badda2caf384dfda99dc7d5accaf2b8135"></a>WriteExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba40cd014b7b6251e3a22e6a45a73a64e1" name="a43d9e8bd207fc87491a4437c6fada79ba40cd014b7b6251e3a22e6a45a73a64e1"></a>Execute&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba29d5eebe071ec16a16eaf04b7cf717f5" name="a43d9e8bd207fc87491a4437c6fada79ba29d5eebe071ec16a16eaf04b7cf717f5"></a>ReadAttributes&#160;</td><td class="fielddoc"><p>The right to read file attributes. </p>
</td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba70e88a144f018b27557a6d1f7bfdc027" name="a43d9e8bd207fc87491a4437c6fada79ba70e88a144f018b27557a6d1f7bfdc027"></a>WriteAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba7a1a5f3e79fdc91edf2f5ead9d66abb4" name="a43d9e8bd207fc87491a4437c6fada79ba7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba1129c0e4d43f2d121652a7302712cff6" name="a43d9e8bd207fc87491a4437c6fada79ba1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a43d9e8bd207fc87491a4437c6fada79ba8a1db58568147877ebe2c30e1a822b8d" name="a43d9e8bd207fc87491a4437c6fada79ba8a1db58568147877ebe2c30e1a822b8d"></a>FullControl&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a6ef3d1fff903b2cf0a2a2fef8f004299" name="a6ef3d1fff903b2cf0a2a2fef8f004299"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ef3d1fff903b2cf0a2a2fef8f004299">&#9670;&#160;</a></span>FileAttributes</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299">Harlinn::Common::Core::IO::FileAttributes</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a060d84e58c348e44da6637e57e2e9201" name="a6ef3d1fff903b2cf0a2a2fef8f004299a060d84e58c348e44da6637e57e2e9201"></a>Readonly&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a7acdf85c69cc3c5305456a293524386e" name="a6ef3d1fff903b2cf0a2a2fef8f004299a7acdf85c69cc3c5305456a293524386e"></a>Hidden&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299aa45da96d0bf6575970f2d27af22be28a" name="a6ef3d1fff903b2cf0a2a2fef8f004299aa45da96d0bf6575970f2d27af22be28a"></a>System&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299ae73cda510e8bb947f7e61089e5581494" name="a6ef3d1fff903b2cf0a2a2fef8f004299ae73cda510e8bb947f7e61089e5581494"></a>Directory&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299ae727b00944f81e1d0a95c12886ac4641" name="a6ef3d1fff903b2cf0a2a2fef8f004299ae727b00944f81e1d0a95c12886ac4641"></a>Archive&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299ae0ac20adce6ffee48c7151b070aa5737" name="a6ef3d1fff903b2cf0a2a2fef8f004299ae0ac20adce6ffee48c7151b070aa5737"></a>Device&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a960b44c579bc2f6818d2daaf9e4c16f0" name="a6ef3d1fff903b2cf0a2a2fef8f004299a960b44c579bc2f6818d2daaf9e4c16f0"></a>Normal&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a10d85d7664a911bcaec89732098c269a" name="a6ef3d1fff903b2cf0a2a2fef8f004299a10d85d7664a911bcaec89732098c269a"></a>Temporary&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a665edbfa4075b64522e0304e3b81dbeb" name="a6ef3d1fff903b2cf0a2a2fef8f004299a665edbfa4075b64522e0304e3b81dbeb"></a>SparseFile&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a2452ed8906b5677e159ec14af42d4464" name="a6ef3d1fff903b2cf0a2a2fef8f004299a2452ed8906b5677e159ec14af42d4464"></a>ReparsePoint&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a4d602abc0c0f2f7c1a5156d964517e4e" name="a6ef3d1fff903b2cf0a2a2fef8f004299a4d602abc0c0f2f7c1a5156d964517e4e"></a>Compressed&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a8d9da4bc0e49a50e09ac9f7e56789d39" name="a6ef3d1fff903b2cf0a2a2fef8f004299a8d9da4bc0e49a50e09ac9f7e56789d39"></a>Offline&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299af5dda7285a5b290d1fa723217beb178d" name="a6ef3d1fff903b2cf0a2a2fef8f004299af5dda7285a5b290d1fa723217beb178d"></a>NotContentIndexed&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299adef09fa4a833717d38298eb37c861af8" name="a6ef3d1fff903b2cf0a2a2fef8f004299adef09fa4a833717d38298eb37c861af8"></a>Encrypted&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a97031c48f2f5f2e9a5dac76901c1dfcf" name="a6ef3d1fff903b2cf0a2a2fef8f004299a97031c48f2f5f2e9a5dac76901c1dfcf"></a>IntegrityStream&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a615e6f9baca5553d44683a098d342b70" name="a6ef3d1fff903b2cf0a2a2fef8f004299a615e6f9baca5553d44683a098d342b70"></a>Virtual&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6ef3d1fff903b2cf0a2a2fef8f004299a46fb5b0b5312031f598898350090ca38" name="a6ef3d1fff903b2cf0a2a2fef8f004299a46fb5b0b5312031f598898350090ca38"></a>NoScrubData&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ad08150ca836d96d6a2e802d0a799e3ec" name="ad08150ca836d96d6a2e802d0a799e3ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad08150ca836d96d6a2e802d0a799e3ec">&#9670;&#160;</a></span>FileMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#ad08150ca836d96d6a2e802d0a799e3ec">Harlinn::Common::Core::IO::FileMode</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3eca16aad4508a33afcd497d9cb37480722f" name="ad08150ca836d96d6a2e802d0a799e3eca16aad4508a33afcd497d9cb37480722f"></a>CreateNew&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3eca686e697538050e4664636337cc3b834f" name="ad08150ca836d96d6a2e802d0a799e3eca686e697538050e4664636337cc3b834f"></a>Create&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3ecac3bf447eabe632720a3aa1a7ce401274" name="ad08150ca836d96d6a2e802d0a799e3ecac3bf447eabe632720a3aa1a7ce401274"></a>Open&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3eca2e034baee96e72d88dc601ff77b8dd96" name="ad08150ca836d96d6a2e802d0a799e3eca2e034baee96e72d88dc601ff77b8dd96"></a>OpenOrCreate&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3ecaa8156810bfee2bd2b44765b9e91db3bd" name="ad08150ca836d96d6a2e802d0a799e3ecaa8156810bfee2bd2b44765b9e91db3bd"></a>Truncate&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3eca3ac4692f3935a49a0b243eecf529faa9" name="ad08150ca836d96d6a2e802d0a799e3eca3ac4692f3935a49a0b243eecf529faa9"></a>Append&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ad08150ca836d96d6a2e802d0a799e3eca7a1920d61156abc05a60135aefe8bc67" name="ad08150ca836d96d6a2e802d0a799e3eca7a1920d61156abc05a60135aefe8bc67"></a>Default&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a9ea9a757527637cdf825a63d7cdad659" name="a9ea9a757527637cdf825a63d7cdad659"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ea9a757527637cdf825a63d7cdad659">&#9670;&#160;</a></span>FileOptions</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a9ea9a757527637cdf825a63d7cdad659">Harlinn::Common::Core::IO::FileOptions</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659aacb7820573f20d69befb56e41f440549" name="a9ea9a757527637cdf825a63d7cdad659aacb7820573f20d69befb56e41f440549"></a>WriteThrough&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659a6adf97f83acf6453d4a6a4b1070f3754" name="a9ea9a757527637cdf825a63d7cdad659a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659adef09fa4a833717d38298eb37c861af8" name="a9ea9a757527637cdf825a63d7cdad659adef09fa4a833717d38298eb37c861af8"></a>Encrypted&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659a0f55772a66ac13443543235e6dff37e0" name="a9ea9a757527637cdf825a63d7cdad659a0f55772a66ac13443543235e6dff37e0"></a>DeleteOnClose&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659ab98905eaa0b9c27d44a2b71fc0cc0053" name="a9ea9a757527637cdf825a63d7cdad659ab98905eaa0b9c27d44a2b71fc0cc0053"></a>SequentialScan&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659a10db094b878f085cfcdaf63716e1b37c" name="a9ea9a757527637cdf825a63d7cdad659a10db094b878f085cfcdaf63716e1b37c"></a>RandomAccess&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659a288aae25bc408055f50c21c991903a44" name="a9ea9a757527637cdf825a63d7cdad659a288aae25bc408055f50c21c991903a44"></a>Asynchronous&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a9ea9a757527637cdf825a63d7cdad659a7a1920d61156abc05a60135aefe8bc67" name="a9ea9a757527637cdf825a63d7cdad659a7a1920d61156abc05a60135aefe8bc67"></a>Default&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a88e5e8b1c77e668874c139cda3cad218" name="a88e5e8b1c77e668874c139cda3cad218"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88e5e8b1c77e668874c139cda3cad218">&#9670;&#160;</a></span>FileRequestType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a88e5e8b1c77e668874c139cda3cad218">Harlinn::Common::Core::IO::FileRequestType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a88e5e8b1c77e668874c139cda3cad218a88183b946cc5f0e8c96b2e66e1c74a7e" name="a88e5e8b1c77e668874c139cda3cad218a88183b946cc5f0e8c96b2e66e1c74a7e"></a>Unknown&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a88e5e8b1c77e668874c139cda3cad218a7a1a5f3e79fdc91edf2f5ead9d66abb4" name="a88e5e8b1c77e668874c139cda3cad218a7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a88e5e8b1c77e668874c139cda3cad218a1129c0e4d43f2d121652a7302712cff6" name="a88e5e8b1c77e668874c139cda3cad218a1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a88e5e8b1c77e668874c139cda3cad218a46c0bc3bb4c3822652b9d22638ac8592" name="a88e5e8b1c77e668874c139cda3cad218a46c0bc3bb4c3822652b9d22638ac8592"></a>ReadScatter&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a88e5e8b1c77e668874c139cda3cad218a67d5ce4c6637a563ac36918c936275a1" name="a88e5e8b1c77e668874c139cda3cad218a67d5ce4c6637a563ac36918c936275a1"></a>WriteGather&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a13505d1b63b90d7148c4d113d5c85f7c" name="a13505d1b63b90d7148c4d113d5c85f7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13505d1b63b90d7148c4d113d5c85f7c">&#9670;&#160;</a></span>FileShare</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7c">Harlinn::Common::Core::IO::FileShare</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7ca6adf97f83acf6453d4a6a4b1070f3754" name="a13505d1b63b90d7148c4d113d5c85f7ca6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7ca7a1a5f3e79fdc91edf2f5ead9d66abb4" name="a13505d1b63b90d7148c4d113d5c85f7ca7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7ca1129c0e4d43f2d121652a7302712cff6" name="a13505d1b63b90d7148c4d113d5c85f7ca1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7ca70a2a84088d405a2e3f1e3accaa16723" name="a13505d1b63b90d7148c4d113d5c85f7ca70a2a84088d405a2e3f1e3accaa16723"></a>ReadWrite&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7caf2a6c498fb90ee345d997f888fce3b18" name="a13505d1b63b90d7148c4d113d5c85f7caf2a6c498fb90ee345d997f888fce3b18"></a>Delete&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7ca6711ce41907fd6bb07b48b7d1f6a60c5" name="a13505d1b63b90d7148c4d113d5c85f7ca6711ce41907fd6bb07b48b7d1f6a60c5"></a>Inheritable&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a13505d1b63b90d7148c4d113d5c85f7ca7a1920d61156abc05a60135aefe8bc67" name="a13505d1b63b90d7148c4d113d5c85f7ca7a1920d61156abc05a60135aefe8bc67"></a>Default&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="aae7807fa07a9fa1176a683da0c0484fa" name="aae7807fa07a9fa1176a683da0c0484fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae7807fa07a9fa1176a683da0c0484fa">&#9670;&#160;</a></span>FileSystemRights</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#aae7807fa07a9fa1176a683da0c0484fa">Harlinn::Common::Core::IO::FileSystemRights</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa9737b198b43957e0daee34be05d34687" name="aae7807fa07a9fa1176a683da0c0484faa9737b198b43957e0daee34be05d34687"></a>ReadData&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faab7d3aa194943aa16f20889f042086069" name="aae7807fa07a9fa1176a683da0c0484faab7d3aa194943aa16f20889f042086069"></a>ListDirectory&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa6e1b51cfac84762d246873062581366d" name="aae7807fa07a9fa1176a683da0c0484faa6e1b51cfac84762d246873062581366d"></a>WriteData&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faabbb992d8cfdc63aac2f7f49683724be2" name="aae7807fa07a9fa1176a683da0c0484faabbb992d8cfdc63aac2f7f49683724be2"></a>CreateFiles&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faafb0842088cddfff4746fea0f6a0afd01" name="aae7807fa07a9fa1176a683da0c0484faafb0842088cddfff4746fea0f6a0afd01"></a>AppendData&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faac8d000b7fbcb5f75f70bc423850b5e9f" name="aae7807fa07a9fa1176a683da0c0484faac8d000b7fbcb5f75f70bc423850b5e9f"></a>CreateDirectories&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa721920642d6f43e0f5d2172e0afee463" name="aae7807fa07a9fa1176a683da0c0484faa721920642d6f43e0f5d2172e0afee463"></a>ReadExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faadda2caf384dfda99dc7d5accaf2b8135" name="aae7807fa07a9fa1176a683da0c0484faadda2caf384dfda99dc7d5accaf2b8135"></a>WriteExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa7f7413bd983f50dae1342455318ccd69" name="aae7807fa07a9fa1176a683da0c0484faa7f7413bd983f50dae1342455318ccd69"></a>ExecuteFile&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa975e8b324cf1e05ee9c7490b51c230e0" name="aae7807fa07a9fa1176a683da0c0484faa975e8b324cf1e05ee9c7490b51c230e0"></a>Traverse&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faabe0ed4c5cc820817d20b25c5dbd302fb" name="aae7807fa07a9fa1176a683da0c0484faabe0ed4c5cc820817d20b25c5dbd302fb"></a>DeleteSubdirectoriesAndFiles&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa29d5eebe071ec16a16eaf04b7cf717f5" name="aae7807fa07a9fa1176a683da0c0484faa29d5eebe071ec16a16eaf04b7cf717f5"></a>ReadAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa70e88a144f018b27557a6d1f7bfdc027" name="aae7807fa07a9fa1176a683da0c0484faa70e88a144f018b27557a6d1f7bfdc027"></a>WriteAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faaf2a6c498fb90ee345d997f888fce3b18" name="aae7807fa07a9fa1176a683da0c0484faaf2a6c498fb90ee345d997f888fce3b18"></a>Delete&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faae1c92b30b08d486bf4793cf49a55d6af" name="aae7807fa07a9fa1176a683da0c0484faae1c92b30b08d486bf4793cf49a55d6af"></a>ReadPermissions&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faaeee2f0e26d79c327733e00edcd874bb2" name="aae7807fa07a9fa1176a683da0c0484faaeee2f0e26d79c327733e00edcd874bb2"></a>ChangePermissions&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa0148c75e378cd6e4934669437136396e" name="aae7807fa07a9fa1176a683da0c0484faa0148c75e378cd6e4934669437136396e"></a>TakeOwnership&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faab18b960c57a784907dc1cd97ba8a8065" name="aae7807fa07a9fa1176a683da0c0484faab18b960c57a784907dc1cd97ba8a8065"></a>Synchronize&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa8a1db58568147877ebe2c30e1a822b8d" name="aae7807fa07a9fa1176a683da0c0484faa8a1db58568147877ebe2c30e1a822b8d"></a>FullControl&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa7a1a5f3e79fdc91edf2f5ead9d66abb4" name="aae7807fa07a9fa1176a683da0c0484faa7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa8a1f1ed01b9d6d145309ce94f3721b65" name="aae7807fa07a9fa1176a683da0c0484faa8a1f1ed01b9d6d145309ce94f3721b65"></a>ReadAndExecute&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa1129c0e4d43f2d121652a7302712cff6" name="aae7807fa07a9fa1176a683da0c0484faa1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aae7807fa07a9fa1176a683da0c0484faa7f090bbab1cc7f9c08bf4e54d932d3c0" name="aae7807fa07a9fa1176a683da0c0484faa7f090bbab1cc7f9c08bf4e54d932d3c0"></a>Modify&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a2fc11016321301bed88a89943f666442" name="a2fc11016321301bed88a89943f666442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fc11016321301bed88a89943f666442">&#9670;&#160;</a></span>FlowControl</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a2fc11016321301bed88a89943f666442">Harlinn::Common::Core::IO::FlowControl</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a2fc11016321301bed88a89943f666442a6adf97f83acf6453d4a6a4b1070f3754" name="a2fc11016321301bed88a89943f666442a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a2fc11016321301bed88a89943f666442a68b2e819c7ae75383d71fba14fd307cf" name="a2fc11016321301bed88a89943f666442a68b2e819c7ae75383d71fba14fd307cf"></a>XonXoff&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a2fc11016321301bed88a89943f666442a87c996149a638feafa898609db3576d6" name="a2fc11016321301bed88a89943f666442a87c996149a638feafa898609db3576d6"></a>CtsRts&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a2fc11016321301bed88a89943f666442a4cd6ab82cecaed908af3e0b8b6d7fa55" name="a2fc11016321301bed88a89943f666442a4cd6ab82cecaed908af3e0b8b6d7fa55"></a>CtsDtr&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a2fc11016321301bed88a89943f666442acb67e53741c168083df5bd00d311128f" name="a2fc11016321301bed88a89943f666442acb67e53741c168083df5bd00d311128f"></a>DsrRts&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a2fc11016321301bed88a89943f666442a24c64bd9539b7287353489dc775616a0" name="a2fc11016321301bed88a89943f666442a24c64bd9539b7287353489dc775616a0"></a>DsrDtr&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a6a9aa4730805d9ba69493d528a169f86" name="a6a9aa4730805d9ba69493d528a169f86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a9aa4730805d9ba69493d528a169f86">&#9670;&#160;</a></span>Parity</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a6a9aa4730805d9ba69493d528a169f86">Harlinn::Common::Core::IO::Parity</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The parity scheme. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a6a9aa4730805d9ba69493d528a169f86a6adf97f83acf6453d4a6a4b1070f3754" name="a6a9aa4730805d9ba69493d528a169f86a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6a9aa4730805d9ba69493d528a169f86a37b6bd7fe61d651735cec3d3b0356c66" name="a6a9aa4730805d9ba69493d528a169f86a37b6bd7fe61d651735cec3d3b0356c66"></a>Odd&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6a9aa4730805d9ba69493d528a169f86a35537fbc25d87ffe59e4f35fefcd34b7" name="a6a9aa4730805d9ba69493d528a169f86a35537fbc25d87ffe59e4f35fefcd34b7"></a>Even&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6a9aa4730805d9ba69493d528a169f86ab82a9a13f4651e9abcbde90cd24ce2cb" name="a6a9aa4730805d9ba69493d528a169f86ab82a9a13f4651e9abcbde90cd24ce2cb"></a>Mark&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6a9aa4730805d9ba69493d528a169f86ad511f8439ecde36647437fbba67a4394" name="a6a9aa4730805d9ba69493d528a169f86ad511f8439ecde36647437fbba67a4394"></a>Space&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a764778f1ca956f42add7a627c4ac6d2a" name="a764778f1ca956f42add7a627c4ac6d2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a764778f1ca956f42add7a627c4ac6d2a">&#9670;&#160;</a></span>PipeAccessRights</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a764778f1ca956f42add7a627c4ac6d2a">Harlinn::Common::Core::IO::PipeAccessRights</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aaa85e916ed0951816492b3dd35ebe578f" name="a764778f1ca956f42add7a627c4ac6d2aaa85e916ed0951816492b3dd35ebe578f"></a>HCC_COMMON_CORE_SECURITY_BASE_ENUM_ACCESS_RIGHTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa9737b198b43957e0daee34be05d34687" name="a764778f1ca956f42add7a627c4ac6d2aa9737b198b43957e0daee34be05d34687"></a>ReadData&#160;</td><td class="fielddoc"><p>The right to write data to the pipe. </p>
</td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa6e1b51cfac84762d246873062581366d" name="a764778f1ca956f42add7a627c4ac6d2aa6e1b51cfac84762d246873062581366d"></a>WriteData&#160;</td><td class="fielddoc"><p>The right to write data to the pipe. </p>
</td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aad34940a82ed41ed086e5e05828439f76" name="a764778f1ca956f42add7a627c4ac6d2aad34940a82ed41ed086e5e05828439f76"></a>CreateInstance&#160;</td><td class="fielddoc"><p>The right to create a pipe. </p>
</td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa721920642d6f43e0f5d2172e0afee463" name="a764778f1ca956f42add7a627c4ac6d2aa721920642d6f43e0f5d2172e0afee463"></a>ReadExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aadda2caf384dfda99dc7d5accaf2b8135" name="a764778f1ca956f42add7a627c4ac6d2aadda2caf384dfda99dc7d5accaf2b8135"></a>WriteExtendedAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa29d5eebe071ec16a16eaf04b7cf717f5" name="a764778f1ca956f42add7a627c4ac6d2aa29d5eebe071ec16a16eaf04b7cf717f5"></a>ReadAttributes&#160;</td><td class="fielddoc"><p>The right to read file attributes. </p>
</td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa70e88a144f018b27557a6d1f7bfdc027" name="a764778f1ca956f42add7a627c4ac6d2aa70e88a144f018b27557a6d1f7bfdc027"></a>WriteAttributes&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa7a1a5f3e79fdc91edf2f5ead9d66abb4" name="a764778f1ca956f42add7a627c4ac6d2aa7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa1129c0e4d43f2d121652a7302712cff6" name="a764778f1ca956f42add7a627c4ac6d2aa1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764778f1ca956f42add7a627c4ac6d2aa8a1db58568147877ebe2c30e1a822b8d" name="a764778f1ca956f42add7a627c4ac6d2aa8a1db58568147877ebe2c30e1a822b8d"></a>FullControl&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="abe2205c129a5f919fc08afd10e3afefb" name="abe2205c129a5f919fc08afd10e3afefb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe2205c129a5f919fc08afd10e3afefb">&#9670;&#160;</a></span>PipeMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#abe2205c129a5f919fc08afd10e3afefb">Harlinn::Common::Core::IO::PipeMode</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefba20550804a6328e3541a4414854d01017" name="abe2205c129a5f919fc08afd10e3afefba20550804a6328e3541a4414854d01017"></a>WriteByte&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefba26e20509fee1aae414c27fbecdef2db7" name="abe2205c129a5f919fc08afd10e3afefba26e20509fee1aae414c27fbecdef2db7"></a>WriteMessage&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefbac436c659ad8f88223c0342dd623bf952" name="abe2205c129a5f919fc08afd10e3afefbac436c659ad8f88223c0342dd623bf952"></a>ReadByte&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefbad1b73309db7e1905c1fabf13c3cb38ac" name="abe2205c129a5f919fc08afd10e3afefbad1b73309db7e1905c1fabf13c3cb38ac"></a>ReadMessage&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefbaa245c3230debe5c956484ecc6fa93877" name="abe2205c129a5f919fc08afd10e3afefbaa245c3230debe5c956484ecc6fa93877"></a>Byte&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefba4c2a8fe7eaf24721cc7a9f0175115bd4" name="abe2205c129a5f919fc08afd10e3afefba4c2a8fe7eaf24721cc7a9f0175115bd4"></a>Message&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abe2205c129a5f919fc08afd10e3afefba1e1b48ea3466b9169faa2a419e52a7c3" name="abe2205c129a5f919fc08afd10e3afefba1e1b48ea3466b9169faa2a419e52a7c3"></a>RejectRemoteClients&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a27ab962996878b0c809db3bf2e60a8e6" name="a27ab962996878b0c809db3bf2e60a8e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27ab962996878b0c809db3bf2e60a8e6">&#9670;&#160;</a></span>PipeOpenMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6">Harlinn::Common::Core::IO::PipeOpenMode</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6aefeb369cccbd560588a756610865664c" name="a27ab962996878b0c809db3bf2e60a8e6aefeb369cccbd560588a756610865664c"></a>In&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6a7c147cda9e49590f6abe83d118b7353b" name="a27ab962996878b0c809db3bf2e60a8e6a7c147cda9e49590f6abe83d118b7353b"></a>Out&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6a47a54d9da8952a3980d27488b00a21c1" name="a27ab962996878b0c809db3bf2e60a8e6a47a54d9da8952a3980d27488b00a21c1"></a>InOut&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6aa0544e219bca3e8e88b609d89e734960" name="a27ab962996878b0c809db3bf2e60a8e6aa0544e219bca3e8e88b609d89e734960"></a>FirstInstance&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6aacb7820573f20d69befb56e41f440549" name="a27ab962996878b0c809db3bf2e60a8e6aacb7820573f20d69befb56e41f440549"></a>WriteThrough&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6a5f1b91d5ebf354ef9c15b0671c0e8b18" name="a27ab962996878b0c809db3bf2e60a8e6a5f1b91d5ebf354ef9c15b0671c0e8b18"></a>Overlapped&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6a9a5219b3b103391c634ee2dea9cfe5a5" name="a27ab962996878b0c809db3bf2e60a8e6a9a5219b3b103391c634ee2dea9cfe5a5"></a>WriteACL&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6aeefa9ccbf2071c722eefe2ce44c70b02" name="a27ab962996878b0c809db3bf2e60a8e6aeefa9ccbf2071c722eefe2ce44c70b02"></a>WriteOwner&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a27ab962996878b0c809db3bf2e60a8e6a81a69280451111624464e4f7d6988691" name="a27ab962996878b0c809db3bf2e60a8e6a81a69280451111624464e4f7d6988691"></a>SystemSecurity&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a29889fb1d4f9193b26dd21422541eb6d" name="a29889fb1d4f9193b26dd21422541eb6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29889fb1d4f9193b26dd21422541eb6d">&#9670;&#160;</a></span>PipeRequestType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a29889fb1d4f9193b26dd21422541eb6d">Harlinn::Common::Core::IO::PipeRequestType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6da88183b946cc5f0e8c96b2e66e1c74a7e" name="a29889fb1d4f9193b26dd21422541eb6da88183b946cc5f0e8c96b2e66e1c74a7e"></a>Unknown&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6da7a1a5f3e79fdc91edf2f5ead9d66abb4" name="a29889fb1d4f9193b26dd21422541eb6da7a1a5f3e79fdc91edf2f5ead9d66abb4"></a>Read&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6da1129c0e4d43f2d121652a7302712cff6" name="a29889fb1d4f9193b26dd21422541eb6da1129c0e4d43f2d121652a7302712cff6"></a>Write&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6da46c0bc3bb4c3822652b9d22638ac8592" name="a29889fb1d4f9193b26dd21422541eb6da46c0bc3bb4c3822652b9d22638ac8592"></a>ReadScatter&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6da67d5ce4c6637a563ac36918c936275a1" name="a29889fb1d4f9193b26dd21422541eb6da67d5ce4c6637a563ac36918c936275a1"></a>WriteGather&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6da49ab28040dfa07f53544970c6d147e1e" name="a29889fb1d4f9193b26dd21422541eb6da49ab28040dfa07f53544970c6d147e1e"></a>Connect&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a29889fb1d4f9193b26dd21422541eb6dab40263c0e023bef4680022eb5e9ed486" name="a29889fb1d4f9193b26dd21422541eb6dab40263c0e023bef4680022eb5e9ed486"></a>Transact&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ae4a11b994dfb0e9555ae11e30a55ed03" name="ae4a11b994dfb0e9555ae11e30a55ed03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4a11b994dfb0e9555ae11e30a55ed03">&#9670;&#160;</a></span>PurgeFlags</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03">Harlinn::Common::Core::IO::PurgeFlags</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ae4a11b994dfb0e9555ae11e30a55ed03a4beb26469ed257139dfde3842b8e0a25" name="ae4a11b994dfb0e9555ae11e30a55ed03a4beb26469ed257139dfde3842b8e0a25"></a>TxAbort&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae4a11b994dfb0e9555ae11e30a55ed03af18aba92d9a5a08ce4e06312febc8784" name="ae4a11b994dfb0e9555ae11e30a55ed03af18aba92d9a5a08ce4e06312febc8784"></a>RxAbort&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae4a11b994dfb0e9555ae11e30a55ed03a52bae791e8250633b3200fb855d8fd0e" name="ae4a11b994dfb0e9555ae11e30a55ed03a52bae791e8250633b3200fb855d8fd0e"></a>TxClear&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae4a11b994dfb0e9555ae11e30a55ed03a4b96bf095fbc9986608a437870932a21" name="ae4a11b994dfb0e9555ae11e30a55ed03a4b96bf095fbc9986608a437870932a21"></a>RxClear&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a35e9effb171a9d3efbd0b0fe56a30596" name="a35e9effb171a9d3efbd0b0fe56a30596"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35e9effb171a9d3efbd0b0fe56a30596">&#9670;&#160;</a></span>RequestWaitResult</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a35e9effb171a9d3efbd0b0fe56a30596">Harlinn::Common::Core::IO::RequestWaitResult</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The result for <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#ade1e2e3da770332eabb1a5516d77d8b1" title="Wait for the completion of this asynchronous request.">Request::Wait</a>. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a35e9effb171a9d3efbd0b0fe56a30596a4307e7e7986aa21a4b7c3ef2b5e948f6" name="a35e9effb171a9d3efbd0b0fe56a30596a4307e7e7986aa21a4b7c3ef2b5e948f6"></a>Incomplete&#160;</td><td class="fielddoc"><p>timeoutInMilliseconds was set to zero and the operation is still in progress. </p>
</td></tr>
<tr><td class="fieldname"><a id="a35e9effb171a9d3efbd0b0fe56a30596a004bf12711c355f9f61e09f12466c416" name="a35e9effb171a9d3efbd0b0fe56a30596a004bf12711c355f9f61e09f12466c416"></a>IoCompletion&#160;</td><td class="fielddoc"><p>The wait was interrupted by an I/O completion routine or APC. </p>
</td></tr>
<tr><td class="fieldname"><a id="a35e9effb171a9d3efbd0b0fe56a30596ac85a251cc457840f1e032f1b733e9398" name="a35e9effb171a9d3efbd0b0fe56a30596ac85a251cc457840f1e032f1b733e9398"></a>Timeout&#160;</td><td class="fielddoc"><p>Indicates that the timeout interval elapsed. </p>
</td></tr>
<tr><td class="fieldname"><a id="a35e9effb171a9d3efbd0b0fe56a30596a88183b946cc5f0e8c96b2e66e1c74a7e" name="a35e9effb171a9d3efbd0b0fe56a30596a88183b946cc5f0e8c96b2e66e1c74a7e"></a>Unknown&#160;</td><td class="fielddoc"><p>Not used. </p>
</td></tr>
<tr><td class="fieldname"><a id="a35e9effb171a9d3efbd0b0fe56a30596a505a83f220c02df2f85c3810cd9ceb38" name="a35e9effb171a9d3efbd0b0fe56a30596a505a83f220c02df2f85c3810cd9ceb38"></a>Success&#160;</td><td class="fielddoc"><p>Indicates that the wait succeeded. </p>
</td></tr>
</table>

</div>
</div>
<a id="a8ad6ab7a0fbb48ebfb665bac67f54bed" name="a8ad6ab7a0fbb48ebfb665bac67f54bed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ad6ab7a0fbb48ebfb665bac67f54bed">&#9670;&#160;</a></span>RtsControl</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a8ad6ab7a0fbb48ebfb665bac67f54bed">Harlinn::Common::Core::IO::RtsControl</a> : DWORD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The RTS (request-to-send) flow control. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a8ad6ab7a0fbb48ebfb665bac67f54bedabcfaccebf745acfd5e75351095a5394a" name="a8ad6ab7a0fbb48ebfb665bac67f54bedabcfaccebf745acfd5e75351095a5394a"></a>Disable&#160;</td><td class="fielddoc"><p>Disables the RTS line when the device is opened and leaves it disabled. </p>
</td></tr>
<tr><td class="fieldname"><a id="a8ad6ab7a0fbb48ebfb665bac67f54beda2faec1f9f8cc7f8f40d521c4dd574f49" name="a8ad6ab7a0fbb48ebfb665bac67f54beda2faec1f9f8cc7f8f40d521c4dd574f49"></a>Enable&#160;</td><td class="fielddoc"><p>Enables the RTS line when the device is opened and leaves it on. </p>
</td></tr>
<tr><td class="fieldname"><a id="a8ad6ab7a0fbb48ebfb665bac67f54beda7559811a22a9c4b79332bd85a197e4c5" name="a8ad6ab7a0fbb48ebfb665bac67f54beda7559811a22a9c4b79332bd85a197e4c5"></a>Handshake&#160;</td><td class="fielddoc"><p>Enables RTS handshaking. The driver raises the RTS line when the "type-ahead" (input) buffer is less than one-half full and lowers the RTS line when the buffer is more than three-quarters full. If handshaking is enabled, it is an error for the application to adjust the line by using the EscapeCommFunction function. </p>
</td></tr>
<tr><td class="fieldname"><a id="a8ad6ab7a0fbb48ebfb665bac67f54bedaa8875bbe4272c0bdd786cfaaedf77921" name="a8ad6ab7a0fbb48ebfb665bac67f54bedaa8875bbe4272c0bdd786cfaaedf77921"></a>Toggle&#160;</td><td class="fielddoc"><p>Specifies that the RTS line will be high if bytes are available for transmission. After all buffered bytes have been sent, the RTS line will be low. </p>
</td></tr>
</table>

</div>
</div>
<a id="a5c3c45102ad354cb31217b4baa64bd64" name="a5c3c45102ad354cb31217b4baa64bd64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c3c45102ad354cb31217b4baa64bd64">&#9670;&#160;</a></span>SeekOrigin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a5c3c45102ad354cb31217b4baa64bd64">Harlinn::Common::Core::IO::SeekOrigin</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a5c3c45102ad354cb31217b4baa64bd64a87a408e5da79c65157f9776e9a7e2658" name="a5c3c45102ad354cb31217b4baa64bd64a87a408e5da79c65157f9776e9a7e2658"></a>StartOfFile&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5c3c45102ad354cb31217b4baa64bd64a28f47fca9070284299ff9305ad05b54b" name="a5c3c45102ad354cb31217b4baa64bd64a28f47fca9070284299ff9305ad05b54b"></a>CurrentPosition&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a5c3c45102ad354cb31217b4baa64bd64a9556e151da49cd4bcf0352857cb33509" name="a5c3c45102ad354cb31217b4baa64bd64a9556e151da49cd4bcf0352857cb33509"></a>EndOfFile&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a4c5ca9a1555b20defdf7e823f1e3be84" name="a4c5ca9a1555b20defdf7e823f1e3be84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c5ca9a1555b20defdf7e823f1e3be84">&#9670;&#160;</a></span>StopBits</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a4c5ca9a1555b20defdf7e823f1e3be84">Harlinn::Common::Core::IO::StopBits</a> : <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of stop bits. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4c5ca9a1555b20defdf7e823f1e3be84a06c2cea18679d64399783748fa367bdd" name="a4c5ca9a1555b20defdf7e823f1e3be84a06c2cea18679d64399783748fa367bdd"></a>One&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4c5ca9a1555b20defdf7e823f1e3be84ac1ced57069889668088d8d24691407b4" name="a4c5ca9a1555b20defdf7e823f1e3be84ac1ced57069889668088d8d24691407b4"></a>One5&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4c5ca9a1555b20defdf7e823f1e3be84aaada29daee1d64ed0fe907043855cb7e" name="a4c5ca9a1555b20defdf7e823f1e3be84aaada29daee1d64ed0fe907043855cb7e"></a>Two&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a7ba93fcdcd8db83b36c4a53c52d7b112" name="a7ba93fcdcd8db83b36c4a53c52d7b112"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ba93fcdcd8db83b36c4a53c52d7b112">&#9670;&#160;</a></span>CreateDirectoryEntry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::CreateDirectoryEntry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SECURITY_ATTRIBUTES *</td>          <td class="paramname"><span class="paramname"><em>securityAttributes</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new directory. If the underlying file system supports security on files and directories, the function applies a specified security descriptor to the new directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pathName</td><td>The path of the directory to be created. </td></tr>
    <tr><td class="paramname">securityAttributes</td><td>A pointer to a SECURITY_ATTRIBUTES structure. The lpSecurityDescriptor member of the structure specifies a security descriptor for the new directory. If securityAttributes is NULL, the directory gets a default security descriptor. The ACLs in the default security descriptor for a directory are inherited from its parent directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the function succeeds, otherwise false. </dd></dl>

</div>
</div>
<a id="add8030e9610ec79a0de069118a104f00" name="add8030e9610ec79a0de069118a104f00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add8030e9610ec79a0de069118a104f00">&#9670;&#160;</a></span>CreateDirectoryEntry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::CreateDirectoryEntry </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SECURITY_ATTRIBUTES *</td>          <td class="paramname"><span class="paramname"><em>securityAttributes</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new directory. If the underlying file system supports security on files and directories, the function applies a specified security descriptor to the new directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pathName</td><td>The path of the directory to be created. </td></tr>
    <tr><td class="paramname">securityAttributes</td><td>A pointer to a SECURITY_ATTRIBUTES structure. The lpSecurityDescriptor member of the structure specifies a security descriptor for the new directory. If securityAttributes is NULL, the directory gets a default security descriptor. The ACLs in the default security descriptor for a directory are inherited from its parent directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the function succeeds, otherwise false. </dd></dl>

</div>
</div>
<a id="a92747179978c4fe36a389bf86b9dfce5" name="a92747179978c4fe36a389bf86b9dfce5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92747179978c4fe36a389bf86b9dfce5">&#9670;&#160;</a></span>CreateDirectoryEntry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::CreateDirectoryEntry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SECURITY_ATTRIBUTES *</td>          <td class="paramname"><span class="paramname"><em>securityAttributes</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new directory. If the underlying file system supports security on files and directories, the function applies a specified security descriptor to the new directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pathName</td><td>The path of the directory to be created. </td></tr>
    <tr><td class="paramname">securityAttributes</td><td>A pointer to a SECURITY_ATTRIBUTES structure. The lpSecurityDescriptor member of the structure specifies a security descriptor for the new directory. If securityAttributes is NULL, the directory gets a default security descriptor. The ACLs in the default security descriptor for a directory are inherited from its parent directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the function succeeds, otherwise false. </dd></dl>

</div>
</div>
<a id="a665f8bc5408c1e708c8dbe59c9cbff10" name="a665f8bc5408c1e708c8dbe59c9cbff10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a665f8bc5408c1e708c8dbe59c9cbff10">&#9670;&#160;</a></span>CreateFileEntry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::CreateFileEntry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>shareMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SECURITY_ATTRIBUTES *</td>          <td class="paramname"><span class="paramname"><em>securityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>creationDisposition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>flagsAndAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>templateFileHandle</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates or opens a file or I/O device. The most commonly used I/O devices are as follows: file, file stream, directory, physical disk, volume, console buffer, tape drive, communications resource, mailslot, and pipe. The function returns a handle that can be used to access the file or device for various types of I/O depending on the file or device and the flags and attributes specified. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fileName</td><td>The name of the file or device to be created or opened. You may use either forward slashes (/) or backslashes () in this name. </td></tr>
    <tr><td class="paramname">desiredAccess</td><td>The requested access to the file or device, which can be summarized as read, write, both or 0 to indicate neither). The most commonly used values are GENERIC_READ, GENERIC_WRITE, or both (GENERIC_READ | GENERIC_WRITE). For more information, see Generic Access Rights, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file.xhtml">File</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_security.xhtml">Security</a> and Access Rights, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_file.xhtml">File</a> Access Rights Constants, and ACCESS_MASK. If this parameter is zero, the application can query certain metadata such as file, directory, or device attributes without accessing that file or device, even if GENERIC_READ access would have been denied. You cannot request an access mode that conflicts with the sharing mode that is specified by the dwShareMode parameter in an open request that already has an open handle. </td></tr>
    <tr><td class="paramname">shareMode</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">securityAttributes</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">creationDisposition</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">flagsAndAttributes</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">templateFileHandle</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><p class="startdd"></p>
<p class="enddd"></p>
</dd></dl>

</div>
</div>
<a id="ac977b428c5816cf6929f06478137a1fe" name="ac977b428c5816cf6929f06478137a1fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac977b428c5816cf6929f06478137a1fe">&#9670;&#160;</a></span>CreateFileEntry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::CreateFileEntry </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>shareMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SECURITY_ATTRIBUTES *</td>          <td class="paramname"><span class="paramname"><em>securityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>creationDisposition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>flagsAndAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>templateFileHandle</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a27e865d14bc1c7b1318e7ecf660553f0" name="a27e865d14bc1c7b1318e7ecf660553f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27e865d14bc1c7b1318e7ecf660553f0">&#9670;&#160;</a></span>CreateFileEntry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::CreateFileEntry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>desiredAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>shareMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SECURITY_ATTRIBUTES *</td>          <td class="paramname"><span class="paramname"><em>securityAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>creationDisposition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>flagsAndAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>templateFileHandle</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa5d18547a2fee20868a5ced77fe26a62" name="aa5d18547a2fee20868a5ced77fe26a62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5d18547a2fee20868a5ced77fe26a62">&#9670;&#160;</a></span>EraseDirectoryEntry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseDirectoryEntry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes an existing empty directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pathName</td><td>The path of the directory to be removed. This path must specify an empty directory, and the calling process must have delete access to the directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the function succeeds, otherwise false. </dd></dl>

</div>
</div>
<a id="acd130fe4bde01d154e072ae2b0e94771" name="acd130fe4bde01d154e072ae2b0e94771"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd130fe4bde01d154e072ae2b0e94771">&#9670;&#160;</a></span>EraseDirectoryEntry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseDirectoryEntry </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes an existing empty directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pathName</td><td>The path of the directory to be removed. This path must specify an empty directory, and the calling process must have delete access to the directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the function succeeds, otherwise false. </dd></dl>

</div>
</div>
<a id="a53cbfd9f4cefa3de2d338222052b0bec" name="a53cbfd9f4cefa3de2d338222052b0bec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53cbfd9f4cefa3de2d338222052b0bec">&#9670;&#160;</a></span>EraseDirectoryEntry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseDirectoryEntry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes an existing empty directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pathName</td><td>The path of the directory to be removed. This path must specify an empty directory, and the calling process must have delete access to the directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the function succeeds, otherwise false. </dd></dl>

</div>
</div>
<a id="a5ebaab96568ee6ac2ea626516a9babb0" name="a5ebaab96568ee6ac2ea626516a9babb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ebaab96568ee6ac2ea626516a9babb0">&#9670;&#160;</a></span>EraseFileEntry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseFileEntry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a521f4fb0d3dcfd8b879159936239bd0e" name="a521f4fb0d3dcfd8b879159936239bd0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a521f4fb0d3dcfd8b879159936239bd0e">&#9670;&#160;</a></span>EraseFileEntry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseFileEntry </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab80df14232a9892e544e979c63a2a9f6" name="ab80df14232a9892e544e979c63a2a9f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab80df14232a9892e544e979c63a2a9f6">&#9670;&#160;</a></span>EraseFileEntry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseFileEntry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e1ebdfd48b503955020f44375c0ad1f" name="a5e1ebdfd48b503955020f44375c0ad1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e1ebdfd48b503955020f44375c0ad1f">&#9670;&#160;</a></span>EraseVolumeMountPoint() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseVolumeMountPoint </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>volumeMountPoint</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac1c8c77afc69e68a0708b25f57a45e40" name="ac1c8c77afc69e68a0708b25f57a45e40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1c8c77afc69e68a0708b25f57a45e40">&#9670;&#160;</a></span>EraseVolumeMountPoint() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseVolumeMountPoint </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>volumeMountPoint</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acc20e500b6cff064c2e9ebda6ac2907a" name="acc20e500b6cff064c2e9ebda6ac2907a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc20e500b6cff064c2e9ebda6ac2907a">&#9670;&#160;</a></span>EraseVolumeMountPoint() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::EraseVolumeMountPoint </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>volumeMountPoint</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ee678c7f0f9a17b0dfc8f6d97e1f8c7" name="a3ee678c7f0f9a17b0dfc8f6d97e1f8c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ee678c7f0f9a17b0dfc8f6d97e1f8c7">&#9670;&#160;</a></span>FileSystemEntries()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT &gt; <br />
requires (std::is_same_v&lt;std::remove_cvref_t&lt;CharT&gt;,char&gt; || std::is_same_v&lt;std::remove_cvref_t&lt;CharT&gt;, wchar_t&gt;)</div>
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::FileSystemEntries </td>
          <td>(</td>
          <td class="paramtype">const CharT *</td>          <td class="paramname"><span class="paramname"><em>b</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CharT *</td>          <td class="paramname"><span class="paramname"><em>e</em></span>&#160;) -&gt;  FileSystemEntries&lt; std::basic_string&lt; std::remove_cvref_t&lt; CharT &gt; &gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a593b9a0aa34dcd0a374029cd090a0b68" name="a593b9a0aa34dcd0a374029cd090a0b68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a593b9a0aa34dcd0a374029cd090a0b68">&#9670;&#160;</a></span>FindFirstEntryChangeNotification() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstEntryChangeNotification </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>watchSubtree</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>notifyFilter</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0e263324f79b66bf45a2e7c0fae72c2b" name="a0e263324f79b66bf45a2e7c0fae72c2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e263324f79b66bf45a2e7c0fae72c2b">&#9670;&#160;</a></span>FindFirstEntryChangeNotification() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstEntryChangeNotification </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>watchSubtree</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>notifyFilter</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a14cd75498832dd4a69089c71456fdb5d" name="a14cd75498832dd4a69089c71456fdb5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14cd75498832dd4a69089c71456fdb5d">&#9670;&#160;</a></span>FindFirstEntryChangeNotification() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstEntryChangeNotification </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>watchSubtree</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>notifyFilter</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad4f75ae2f11ff8263f5ad3136fad7886" name="ad4f75ae2f11ff8263f5ad3136fad7886"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4f75ae2f11ff8263f5ad3136fad7886">&#9670;&#160;</a></span>FindFirstFileEntry() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstFileEntry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FINDEX_INFO_LEVELS</td>          <td class="paramname"><span class="paramname"><em>infoLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WIN32_FIND_DATAA *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FINDEX_SEARCH_OPS</td>          <td class="paramname"><span class="paramname"><em>searchOp</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>additionalFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a17f71ae11ba497fdf041f6b48a17da59" name="a17f71ae11ba497fdf041f6b48a17da59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17f71ae11ba497fdf041f6b48a17da59">&#9670;&#160;</a></span>FindFirstFileEntry() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstFileEntry </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WIN32_FIND_DATAA *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5f15d6801fda27aca146f3dd326ec3ac" name="a5f15d6801fda27aca146f3dd326ec3ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f15d6801fda27aca146f3dd326ec3ac">&#9670;&#160;</a></span>FindFirstFileEntry() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT, typename FindDataT  = std::conditional_t&lt;std::is_same_v&lt;typename StringT::value_type, wchar_t&gt;, WIN32_FIND_DATAW, WIN32_FIND_DATAA&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstFileEntry </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FindDataT *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a875c142fbb5c6c0062474988cb36aa66" name="a875c142fbb5c6c0062474988cb36aa66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a875c142fbb5c6c0062474988cb36aa66">&#9670;&#160;</a></span>FindFirstFileEntry() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT, typename FindDataT  = std::conditional_t&lt;std::is_same_v&lt;typename StringT::value_type,wchar_t&gt;, WIN32_FIND_DATAW, WIN32_FIND_DATAA&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstFileEntry </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FINDEX_INFO_LEVELS</td>          <td class="paramname"><span class="paramname"><em>infoLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FindDataT *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FINDEX_SEARCH_OPS</td>          <td class="paramname"><span class="paramname"><em>searchOp</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>additionalFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a91b1cc7f15b41ba9f146bc5210106277" name="a91b1cc7f15b41ba9f146bc5210106277"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91b1cc7f15b41ba9f146bc5210106277">&#9670;&#160;</a></span>FindFirstFileEntry() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstFileEntry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FINDEX_INFO_LEVELS</td>          <td class="paramname"><span class="paramname"><em>infoLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WIN32_FIND_DATAW *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FINDEX_SEARCH_OPS</td>          <td class="paramname"><span class="paramname"><em>searchOp</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>additionalFlags</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0aa11948ae789a6fa38349d2b21dd033" name="a0aa11948ae789a6fa38349d2b21dd033"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0aa11948ae789a6fa38349d2b21dd033">&#9670;&#160;</a></span>FindFirstFileEntry() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstFileEntry </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WIN32_FIND_DATAW *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acd1e1f43f88f918da290d5480d1424a4" name="acd1e1f43f88f918da290d5480d1424a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd1e1f43f88f918da290d5480d1424a4">&#9670;&#160;</a></span>FindFirstVolumeEntry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstVolumeEntry </td>
          <td>(</td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>volumeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>volumeNameLength</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6340023515ba65142d66aeb78d3edd1f" name="a6340023515ba65142d66aeb78d3edd1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6340023515ba65142d66aeb78d3edd1f">&#9670;&#160;</a></span>FindFirstVolumeEntry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;WideStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstVolumeEntry </td>
          <td>(</td>
          <td class="paramtype">StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>resultString</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a23e7e446e359977c34fccc20e5beea1b" name="a23e7e446e359977c34fccc20e5beea1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23e7e446e359977c34fccc20e5beea1b">&#9670;&#160;</a></span>FindFirstVolumeEntry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HANDLE Harlinn::Common::Core::IO::FindFirstVolumeEntry </td>
          <td>(</td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>volumeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>volumeNameLength</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ada269e32dabf97d452fc2fab266e53f6" name="ada269e32dabf97d452fc2fab266e53f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada269e32dabf97d452fc2fab266e53f6">&#9670;&#160;</a></span>FindNextFileEntry() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::FindNextFileEntry </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>findHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WIN32_FIND_DATAA *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aedc720638e5ac66575fbe793d86b3c39" name="aedc720638e5ac66575fbe793d86b3c39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedc720638e5ac66575fbe793d86b3c39">&#9670;&#160;</a></span>FindNextFileEntry() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::FindNextFileEntry </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>findHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WIN32_FIND_DATAW *</td>          <td class="paramname"><span class="paramname"><em>findData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec8fac85cceb6e50b155047c52e5b03a" name="aec8fac85cceb6e50b155047c52e5b03a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec8fac85cceb6e50b155047c52e5b03a">&#9670;&#160;</a></span>FindNextVolumeEntry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::FindNextVolumeEntry </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>findHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>volumeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>volumeNameLength</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab66899e75bde4308cdf31ccd237d9a0a" name="ab66899e75bde4308cdf31ccd237d9a0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab66899e75bde4308cdf31ccd237d9a0a">&#9670;&#160;</a></span>FindNextVolumeEntry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;WideStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::FindNextVolumeEntry </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>findHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>resultString</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7ab77025b8193ad941ef56d801d2925a" name="a7ab77025b8193ad941ef56d801d2925a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ab77025b8193ad941ef56d801d2925a">&#9670;&#160;</a></span>FindNextVolumeEntry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::FindNextVolumeEntry </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>findHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>volumeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>volumeNameLength</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a113d9e3013ef9cdcc42bd2a40599652b" name="a113d9e3013ef9cdcc42bd2a40599652b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a113d9e3013ef9cdcc42bd2a40599652b">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml#a553ad670b6814f3c007ba1a7e59c9fe1">CommDeviceStream::ErrorFlags</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a751ac9b40d3cfee8bcfb6d1acf820684" name="a751ac9b40d3cfee8bcfb6d1acf820684"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a751ac9b40d3cfee8bcfb6d1acf820684">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml#a04b82529468a5c218509a5693fd7a6ae">CommDeviceStream::EventFlags</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa223d4c695706d3f766f3a2c2e0a6cb2" name="aa223d4c695706d3f766f3a2c2e0a6cb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa223d4c695706d3f766f3a2c2e0a6cb2">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_comm_device_stream.xhtml#a280550c2f53686e1577d32511c5c0130">CommDeviceStream::ModemStatusFlags</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0c6ec382a080dccf5081038db8c64a25" name="a0c6ec382a080dccf5081038db8c64a25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c6ec382a080dccf5081038db8c64a25">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#ab001dd07a0b69031da4f40347aa14b26">DirectoryAccessRights</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a44e23d8d2bc1195f622983b2057bd07f" name="a44e23d8d2bc1195f622983b2057bd07f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44e23d8d2bc1195f622983b2057bd07f">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a119922fe47306af0809ad307f644e239">FileAccess</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a10a44c6e7d50f01353c6c81ab7c837ae" name="a10a44c6e7d50f01353c6c81ab7c837ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10a44c6e7d50f01353c6c81ab7c837ae">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a43d9e8bd207fc87491a4437c6fada79b">FileAccessRights</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae979ebd21976f826f1875448c6e7068f" name="ae979ebd21976f826f1875448c6e7068f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae979ebd21976f826f1875448c6e7068f">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a6ef3d1fff903b2cf0a2a2fef8f004299">FileAttributes</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae97792c0d3d4afbf548173bf24a63dc3" name="ae97792c0d3d4afbf548173bf24a63dc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae97792c0d3d4afbf548173bf24a63dc3">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a9ea9a757527637cdf825a63d7cdad659">FileOptions</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1b2b72747f411262811549962d0e25c1" name="a1b2b72747f411262811549962d0e25c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b2b72747f411262811549962d0e25c1">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a13505d1b63b90d7148c4d113d5c85f7c">FileShare</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac6249d9784782923fddf51092225b3a5" name="ac6249d9784782923fddf51092225b3a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6249d9784782923fddf51092225b3a5">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#aae7807fa07a9fa1176a683da0c0484fa">FileSystemRights</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a636003e2d7e5cc20cc9e2778a8468638" name="a636003e2d7e5cc20cc9e2778a8468638"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a636003e2d7e5cc20cc9e2778a8468638">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a764778f1ca956f42add7a627c4ac6d2a">PipeAccessRights</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aac7dc861afcd74d0ca9bb38c9e70849e" name="aac7dc861afcd74d0ca9bb38c9e70849e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac7dc861afcd74d0ca9bb38c9e70849e">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#abe2205c129a5f919fc08afd10e3afefb">PipeMode</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a484e025c564c5e22c6ffc753d57d2bf9" name="a484e025c564c5e22c6ffc753d57d2bf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a484e025c564c5e22c6ffc753d57d2bf9">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a27ab962996878b0c809db3bf2e60a8e6">PipeOpenMode</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a95d2dd4c7cb4c00062a503d033904609" name="a95d2dd4c7cb4c00062a503d033904609"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95d2dd4c7cb4c00062a503d033904609">&#9670;&#160;</a></span>HCC_DEFINE_ENUM_FLAG_OPERATORS() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::HCC_DEFINE_ENUM_FLAG_OPERATORS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#ae4a11b994dfb0e9555ae11e30a55ed03">PurgeFlags</a></td>          <td class="paramname"><span class="paramname"><em></em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em></em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abf15569172f4bb002843d397d5dd0115" name="abf15569172f4bb002843d397d5dd0115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf15569172f4bb002843d397d5dd0115">&#9670;&#160;</a></span>QueryDiskFreeSpace() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryDiskFreeSpace </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>sectorsPerCluster</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>bytesPerSector</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>numberOfFreeClusters</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfClusters</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a47655878d521227eebd971ab660a81ca" name="a47655878d521227eebd971ab660a81ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47655878d521227eebd971ab660a81ca">&#9670;&#160;</a></span>QueryDiskFreeSpace() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryDiskFreeSpace </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>freeBytesAvailableToCaller</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfBytes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfFreeBytes</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7e5382c047b8e11ba5f52829b68b139" name="ab7e5382c047b8e11ba5f52829b68b139"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7e5382c047b8e11ba5f52829b68b139">&#9670;&#160;</a></span>QueryDiskFreeSpace() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryDiskFreeSpace </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>sectorsPerCluster</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>bytesPerSector</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>numberOfFreeClusters</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfClusters</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2d543d3b7acf9be3ac5087970be8848" name="ac2d543d3b7acf9be3ac5087970be8848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2d543d3b7acf9be3ac5087970be8848">&#9670;&#160;</a></span>QueryDiskFreeSpace() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryDiskFreeSpace </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>freeBytesAvailableToCaller</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfBytes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfFreeBytes</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a857efc17b4f2953f1d6829091c113917" name="a857efc17b4f2953f1d6829091c113917"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a857efc17b4f2953f1d6829091c113917">&#9670;&#160;</a></span>QueryDiskFreeSpace() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryDiskFreeSpace </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>sectorsPerCluster</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>bytesPerSector</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>numberOfFreeClusters</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPDWORD</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfClusters</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af1a472beaca53037ccb399af09022623" name="af1a472beaca53037ccb399af09022623"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1a472beaca53037ccb399af09022623">&#9670;&#160;</a></span>QueryDiskFreeSpace() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryDiskFreeSpace </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>freeBytesAvailableToCaller</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfBytes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> *</td>          <td class="paramname"><span class="paramname"><em>totalNumberOfFreeBytes</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8724c293e997fdfc9fa4a955bdbe796b" name="a8724c293e997fdfc9fa4a955bdbe796b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8724c293e997fdfc9fa4a955bdbe796b">&#9670;&#160;</a></span>QueryDiskSpaceInformation() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HRESULT Harlinn::Common::Core::IO::QueryDiskSpaceInformation </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>rootPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DISK_SPACE_INFORMATION *</td>          <td class="paramname"><span class="paramname"><em>diskSpaceInfo</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd846b9d75d1e158928e1a6c2bc8b3d7" name="abd846b9d75d1e158928e1a6c2bc8b3d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd846b9d75d1e158928e1a6c2bc8b3d7">&#9670;&#160;</a></span>QueryDiskSpaceInformation() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HRESULT Harlinn::Common::Core::IO::QueryDiskSpaceInformation </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>rootPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DISK_SPACE_INFORMATION *</td>          <td class="paramname"><span class="paramname"><em>diskSpaceInfo</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acd7503caea1cc06466c72d088dbacb57" name="acd7503caea1cc06466c72d088dbacb57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd7503caea1cc06466c72d088dbacb57">&#9670;&#160;</a></span>QueryDiskSpaceInformation() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HRESULT Harlinn::Common::Core::IO::QueryDiskSpaceInformation </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>rootPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DISK_SPACE_INFORMATION *</td>          <td class="paramname"><span class="paramname"><em>diskSpaceInfo</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ab823ee2bcad04638bf95b088ebda17" name="a1ab823ee2bcad04638bf95b088ebda17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ab823ee2bcad04638bf95b088ebda17">&#9670;&#160;</a></span>QueryDriveType() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::QueryDriveType </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adf97a6034114f240c5563529f0c6867c" name="adf97a6034114f240c5563529f0c6867c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf97a6034114f240c5563529f0c6867c">&#9670;&#160;</a></span>QueryDriveType() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::QueryDriveType </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c1db85cc3eed173546500915566adb7" name="a2c1db85cc3eed173546500915566adb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c1db85cc3eed173546500915566adb7">&#9670;&#160;</a></span>QueryDriveType() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::QueryDriveType </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>rootPathName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a162f3b6137f77c72ff4dac6020ec2b35" name="a162f3b6137f77c72ff4dac6020ec2b35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a162f3b6137f77c72ff4dac6020ec2b35">&#9670;&#160;</a></span>QueryFileAttributes() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::QueryFileAttributes </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a84c952500b82998be999542401eec3e0" name="a84c952500b82998be999542401eec3e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84c952500b82998be999542401eec3e0">&#9670;&#160;</a></span>QueryFileAttributes() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryFileAttributes </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GET_FILEEX_INFO_LEVELS</td>          <td class="paramname"><span class="paramname"><em>infoLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adadd7e2b8902c9dde2fdf0f73f45a5bc" name="adadd7e2b8902c9dde2fdf0f73f45a5bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adadd7e2b8902c9dde2fdf0f73f45a5bc">&#9670;&#160;</a></span>QueryFileAttributes() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::QueryFileAttributes </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abafa388f52bd9d68a903e3ad8bc6a636" name="abafa388f52bd9d68a903e3ad8bc6a636"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abafa388f52bd9d68a903e3ad8bc6a636">&#9670;&#160;</a></span>QueryFileAttributes() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryFileAttributes </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GET_FILEEX_INFO_LEVELS</td>          <td class="paramname"><span class="paramname"><em>infoLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6045338f4750c9447fcc88d6847d159e" name="a6045338f4750c9447fcc88d6847d159e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6045338f4750c9447fcc88d6847d159e">&#9670;&#160;</a></span>QueryFileAttributes() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::QueryFileAttributes </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a15d9a55ba46d90f55302973f965cc3c7" name="a15d9a55ba46d90f55302973f965cc3c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15d9a55ba46d90f55302973f965cc3c7">&#9670;&#160;</a></span>QueryFileAttributes() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryFileAttributes </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GET_FILEEX_INFO_LEVELS</td>          <td class="paramname"><span class="paramname"><em>infoLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae2f1930e19cd430ee68cc0a75fb4064f" name="ae2f1930e19cd430ee68cc0a75fb4064f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2f1930e19cd430ee68cc0a75fb4064f">&#9670;&#160;</a></span>QueryFullPathName() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryFullPathName </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **</td>          <td class="paramname"><span class="paramname"><em>filePart</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af4fc808311828a8451ad9e8711bebe4a" name="af4fc808311828a8451ad9e8711bebe4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4fc808311828a8451ad9e8711bebe4a">&#9670;&#160;</a></span>QueryFullPathName() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryFullPathName </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t **</td>          <td class="paramname"><span class="paramname"><em>filePart</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7a6bd9c4ae3cb4dc6aa382f05ec565b" name="ac7a6bd9c4ae3cb4dc6aa382f05ec565b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7a6bd9c4ae3cb4dc6aa382f05ec565b">&#9670;&#160;</a></span>QueryFullPathName() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryFullPathName </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fileName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t **</td>          <td class="paramname"><span class="paramname"><em>filePart</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac908f3f5a5128b858d87871eec02faab" name="ac908f3f5a5128b858d87871eec02faab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac908f3f5a5128b858d87871eec02faab">&#9670;&#160;</a></span>QueryLongPathName() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryLongPathName </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>shortPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>longPathBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>longPathBufferSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d5ecaa814f3e76b29481cb7012ebbf7" name="a1d5ecaa814f3e76b29481cb7012ebbf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d5ecaa814f3e76b29481cb7012ebbf7">&#9670;&#160;</a></span>QueryLongPathName() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryLongPathName </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>shortPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>longPathBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>longPathBufferSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acfd188d24ae519d5f4c0c7fe26fd1ee6" name="acfd188d24ae519d5f4c0c7fe26fd1ee6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfd188d24ae519d5f4c0c7fe26fd1ee6">&#9670;&#160;</a></span>QueryLongPathName() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryLongPathName </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>shortPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>longPathBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>longPathBufferSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac55a1c1406c85791f532538dbca9d8da" name="ac55a1c1406c85791f532538dbca9d8da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac55a1c1406c85791f532538dbca9d8da">&#9670;&#160;</a></span>QueryRelativePathTo() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryRelativePathTo </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>fromPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>fromAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>relativeToPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>toAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>resultPath</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0560b9fb619782ece248a86447afd9ce" name="a0560b9fb619782ece248a86447afd9ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0560b9fb619782ece248a86447afd9ce">&#9670;&#160;</a></span>QueryRelativePathTo() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleAnsiStringLike StringT1, SimpleAnsiStringLike StringT2&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryRelativePathTo </td>
          <td>(</td>
          <td class="paramtype">const StringT1 &amp;</td>          <td class="paramname"><span class="paramname"><em>fromPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>fromAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringT2 &amp;</td>          <td class="paramname"><span class="paramname"><em>relativeToPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>toAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>resultPath</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a795ed0a03c83b5b90be48e1cae777515" name="a795ed0a03c83b5b90be48e1cae777515"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a795ed0a03c83b5b90be48e1cae777515">&#9670;&#160;</a></span>QueryRelativePathTo() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleWideStringLike StringT1, SimpleWideStringLike StringT2&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryRelativePathTo </td>
          <td>(</td>
          <td class="paramtype">const StringT1 &amp;</td>          <td class="paramname"><span class="paramname"><em>fromPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>fromAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringT2 &amp;</td>          <td class="paramname"><span class="paramname"><em>relativeToPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>toAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>resultPath</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae3c314917e5c74f743a45124e19c3098" name="ae3c314917e5c74f743a45124e19c3098"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3c314917e5c74f743a45124e19c3098">&#9670;&#160;</a></span>QueryRelativePathTo() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::IO::QueryRelativePathTo </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>fromPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>fromAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>relativeToPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>toAttributes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>resultPath</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a652baa6691e18e9ea3c37ee107797636" name="a652baa6691e18e9ea3c37ee107797636"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a652baa6691e18e9ea3c37ee107797636">&#9670;&#160;</a></span>QueryShortPathName() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryShortPathName </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>longPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>shortPathBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>shortPathBufferSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2193aecbb89f5c2485f4a99c4dc1065d" name="a2193aecbb89f5c2485f4a99c4dc1065d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2193aecbb89f5c2485f4a99c4dc1065d">&#9670;&#160;</a></span>QueryShortPathName() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryShortPathName </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>longPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>shortPathBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>shortPathBufferSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aedbf9d36a6116ecdccb8d70e8a6653c8" name="aedbf9d36a6116ecdccb8d70e8a6653c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedbf9d36a6116ecdccb8d70e8a6653c8">&#9670;&#160;</a></span>QueryShortPathName() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryShortPathName </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>longPathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>shortPathBuffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>shortPathBufferSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a83d5aded37b4ed9b6e062fa2a1f85746" name="a83d5aded37b4ed9b6e062fa2a1f85746"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83d5aded37b4ed9b6e062fa2a1f85746">&#9670;&#160;</a></span>QueryTempFileName() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempFileName </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>prefixString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>unique</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>tempFileName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a114e4fc7db2a1c56b5abb319b94bd83f" name="a114e4fc7db2a1c56b5abb319b94bd83f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a114e4fc7db2a1c56b5abb319b94bd83f">&#9670;&#160;</a></span>QueryTempFileName() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempFileName </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>prefixString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>unique</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>tempFileName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa5dc3658078a829bd600f39d2c9805a6" name="aa5dc3658078a829bd600f39d2c9805a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5dc3658078a829bd600f39d2c9805a6">&#9670;&#160;</a></span>QueryTempFileName() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempFileName </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const typename StringT::value_type *</td>          <td class="paramname"><span class="paramname"><em>prefixString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>unique</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>tempFileName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af4f7729413f5e711bbda4ba52c0eed1c" name="af4f7729413f5e711bbda4ba52c0eed1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4f7729413f5e711bbda4ba52c0eed1c">&#9670;&#160;</a></span>QueryTempFileName() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempFileName </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>pathName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>prefixString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>unique</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>tempFileName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abe7876b79f51b1af47f195917d4c094f" name="abe7876b79f51b1af47f195917d4c094f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe7876b79f51b1af47f195917d4c094f">&#9670;&#160;</a></span>QueryTempPath() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempPath </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a399cfcf4d9ed3126387db36be49e4005" name="a399cfcf4d9ed3126387db36be49e4005"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a399cfcf4d9ed3126387db36be49e4005">&#9670;&#160;</a></span>QueryTempPath() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempPath </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6b2d3307d93f5728e734eeb0e6b07894" name="a6b2d3307d93f5728e734eeb0e6b07894"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b2d3307d93f5728e734eeb0e6b07894">&#9670;&#160;</a></span>QueryTempPath2() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempPath2 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3fd836b42991a630a458754fdc9aa78c" name="a3fd836b42991a630a458754fdc9aa78c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fd836b42991a630a458754fdc9aa78c">&#9670;&#160;</a></span>QueryTempPath2() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::QueryTempPath2 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>bufferLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml">IO</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
