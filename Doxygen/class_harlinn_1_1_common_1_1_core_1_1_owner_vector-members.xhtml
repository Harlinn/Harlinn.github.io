<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Harlinn::Common::Core::OwnerVector&lt; T &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a97a1a2d2d52e38a9f17be7ffb25926cf">Assign</a>(const OwnerVector &amp;other)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#acbe912bf574d9df2b281876af1940073">back</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a3ad3a508bf093685c58c33983e75a5d1">back</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a1aaff0f065b9d09d85c4fa5b9e521dc9">begin</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ad7dacef1f5ab3bb1912fadbb2b32ec39">begin</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a2ac22821610ddacc2ac4738308376512">capacity</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#abfea8029c6eea2f15c96ba4b8107b1dc">cbegin</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a42438e89c3b6e7c287b4d0f275f8c72e">cend</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a279f49871a0832bca0d4e2f25d9d61c3">clear</a>()</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a44bf084d5d1e0952c5a5b3ba42ab3fd8">const_iterator</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a705022c481b4de0fd858399ca533b82b">const_pointer</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#aa4b8f5f5ca93cfffe9de9e16627fe636">const_reference</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a3609c371375957d6ba39b70b7dc23094">const_reverse_iterator</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ad1c19483fcfc8165dfa07481365f004e">contains</a>(const T *ptr) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#aaf3826874fbde7365cfb3c8bda8f54fe">crbegin</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a04edd7a38ce93caa09a30c53824ae3a7">crend</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a7d9056b6de35d7275d745c596267fa9f">data</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#afe7028c359b7b8b1f935f80ddafdddaf">data</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a4ee6863cdf2b9efa59791321fc1b254b">data_</a></td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a42d4c06f33e11aaeb6d7681e1461c7bc">Delete</a>(T **itPtr, T **itLastPtr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a72efbef6b9cf9ea84609af76f44e93b9">Delete</a>(const_iterator it, const_iterator itLast)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ac1296b6b8c6cf48c64e1a389443ba828">difference_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a6d2df811f204c6adc5a8757027e683f1">emplace</a>(const_iterator it, T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#aac5077270da8660ecf72beaa97f029d3">emplace_back</a>(T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ab66f26a6437b13f79aad403142334a3f">emplace_front</a>(T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a0daec5b030360b096488c3370bfc57cf">empty</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a739be7a1c39c38508a1eaf2f842a5b74">end</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a8375e461c02b09aadc2d79641e237f50">end</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ab8826354e2cd16cddb37623a154136f2">Equals</a>(OwnerVector &amp;other) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a8e949f778fc743187c150051548fb6b5">erase</a>(const_iterator it)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a58a0426d670732f8b398bd77cab7fbc0">find</a>(const T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ab0dde8ba0db0e1f8b263ae15175884cf">find</a>(const T *ptr) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#affbace20721aeb3ad6b5dd7c73a8371c">front</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a88a70881ea7e7d2f554351c05bc99dcb">front</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a8ae7e722622e2db35a1df0b506183a31">insert</a>(const_iterator it, T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a08b79fba6536bbbc8187ba1fdeba7a5d">iterator</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#adbc9f52b320754ebd762cdeabd15d92c">max_size</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a174e7ad041433b2c9d0aeb2bd035ec53">MoveToBack</a>(const_iterator it)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a006924a844424cc4a1b6c6e299592e8a">MoveToFront</a>(const_iterator it)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a587e8a58359b50fefd03c9b4a9406f7e">operator!=</a>(OwnerVector &amp;other) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#aafb7f4402fb2da8a5785e47124ba8ef1">operator!=</a>(Vector&lt; T * &gt; &amp;other) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a1a58614d179d470a38a14f461990bd30">operator=</a>(const OwnerVector &amp;other)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#aaf0c556d641ac47aef711d45e8958146">operator=</a>(OwnerVector &amp;&amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a4b0b1d3dbc29e072e8fd7affe80bfe43">operator==</a>(OwnerVector &amp;other) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a76e4b2a6a99eef2a2527cd68393a5931">operator==</a>(Vector&lt; T * &gt; &amp;other) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#aa7d1bac0979ec2d2c6b386f8e7e8ae2c">operator[]</a>(size_type i) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a19b0b345f2157b9177b287b4e630b479">operator[]</a>(size_type i) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a15a152841e75a220fa829c8fca3dd0e3">OwnerVector</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a61b975a4284c91e4a35af8e4dc623b9f">OwnerVector</a>(size_type count) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a3d34036d88f58ff2925456a6d6445f71">OwnerVector</a>(It first, It last)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a561fe2d4b5ccf180b161aac34ae7abf1">OwnerVector</a>(std::initializer_list&lt; T * &gt; values)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ad35c86c9117e7f741bb8dafe2cf514b3">OwnerVector</a>(const OwnerVector &amp;other)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a532f8b0c785d3cbb40adab3d7f089f86">OwnerVector</a>(OwnerVector &amp;&amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a9684d1a0d936dbeb2dd8c4e0304c403a">pointer</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a3ce71bb75af0e26d8cd1b98966856e26">push_back</a>(T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ae6b9c8e04591f0125b84b3986b82b8ad">push_front</a>(T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a1c733c2802fcab9bd635c97721d13a34">Raw</a>()</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a8481762019dd41ce0c7f0022018a1e5f">Raw</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a6f0ab87de5c3ef16ac15a7d8a88b2083">rbegin</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a223dba88a6efd1d24b5cff205e6282f5">rbegin</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ab49c919f00bfd1842b4629df512a6e74">reference</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#afe48107f252602a71527360ffe6312cc">release</a>(const_iterator it)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a768c9ea7a5df65a54b39c59155f4ca25">rend</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a50e4a8d2a72ec0bc1d350a2e48335fd7">rend</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a824dcf286b6315d4dc21383d77cb1572">reserve</a>(size_type requiredCapacity)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a1be48c98957debbb26630244e3e501c8">resize</a>(size_type newSize)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a592d52c9186f0e6893a1d73d9403e411">reverse_find</a>(const T *ptr)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a74bb4195254879eb553b45e239be3a46">reverse_find</a>(const T *ptr) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a809a4aa9c8217c94bb4a387a10951e8c">reverse_find</a>(const T *ptr, const_iterator itLast)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ad9a735830fa4a0a2f08425c16b8e7aff">reverse_find</a>(const T *ptr, const_iterator itLast) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a17984fd20b1b782c1ac0cf8c6481cada">reverse_iterator</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a0d3b3bee551edf5171cfd1ab19926bf5">size</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a8097fa3db73977beab30a92e6f8604be">size_in_bytes</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a21a19ec03c5f51ea6aae035eebc16435">size_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ad393c2ac28d2fb589cf1031d446a90d9">swap</a>(Vector&lt; T * &gt; &amp;other)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ab70fbc638bdf6be0574b009758d15dea">swap</a>(OwnerVector &amp;other)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a12d7560d7cd40cc26075b26516c72dd8">value_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#ae6505f7b0170a2afd9b6021e28b42224">VectorType</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml#a51b4d5895e18943d4e9e4f79c5510264">~OwnerVector</a>()</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_owner_vector.xhtml">Harlinn::Common::Core::OwnerVector&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
