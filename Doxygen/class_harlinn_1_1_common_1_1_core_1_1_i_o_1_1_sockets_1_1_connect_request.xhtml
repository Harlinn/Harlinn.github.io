<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::IO::Sockets::ConnectRequest Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::IO::Sockets::ConnectRequest Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>For use with <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_handler.xhtml#a811abcb56d4e2037ffefc68f0031ec63" title="Establishes a connection to a specified socket, and optionally sends data once the connection is esta...">SocketHandler::BeginAsyncConnect</a>.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCSocket.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::IO::Sockets::ConnectRequest:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request__inherit__graph.svg" width="214" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::IO::Sockets::ConnectRequest:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request__coll__graph.svg" width="2594" height="407"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a71fc5210f7ef7d7d9b23b58fec2f0235" id="r_a71fc5210f7ef7d7d9b23b58fec2f0235"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a71fc5210f7ef7d7d9b23b58fec2f0235">Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml">SocketRequest</a></td></tr>
<tr class="separator:a71fc5210f7ef7d7d9b23b58fec2f0235"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml">Harlinn::Common::Core::IO::Sockets::SocketRequest</a></td></tr>
<tr class="memitem:a401bc7baf67b4f005522e393c7123b10 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a401bc7baf67b4f005522e393c7123b10"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a401bc7baf67b4f005522e393c7123b10">Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">IO::Request</a></td></tr>
<tr class="separator:a401bc7baf67b4f005522e393c7123b10 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Harlinn::Common::Core::IO::Request</a></td></tr>
<tr class="memitem:aee64a539a2652d2270b43392f7b710a6 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_aee64a539a2652d2270b43392f7b710a6"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#aee64a539a2652d2270b43392f7b710a6">Base</a> = OVERLAPPED</td></tr>
<tr class="separator:aee64a539a2652d2270b43392f7b710a6 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7deee862eb030b8f5a982023a90446b6" id="r_a7deee862eb030b8f5a982023a90446b6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7deee862eb030b8f5a982023a90446b6">ConnectRequest</a> ()</td></tr>
<tr class="separator:a7deee862eb030b8f5a982023a90446b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32f9b11720a825a3b3d8f866e2616841" id="r_a32f9b11720a825a3b3d8f866e2616841"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a32f9b11720a825a3b3d8f866e2616841">ConnectRequest</a> (SOCKET handle, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;address, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *buffer=nullptr, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> numberOfBytesToSend=0)</td></tr>
<tr class="memdesc:a32f9b11720a825a3b3d8f866e2616841"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object.  <br /></td></tr>
<tr class="separator:a32f9b11720a825a3b3d8f866e2616841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac068d64341e0a77e4eeeefdd6ce6cd8e" id="r_ac068d64341e0a77e4eeeefdd6ce6cd8e"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac068d64341e0a77e4eeeefdd6ce6cd8e">ConnectRequest</a> (SOCKET handle, HANDLE manualResetEvent, bool ownsEvent, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;address, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *buffer=nullptr, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> numberOfBytesToSend=0) noexcept</td></tr>
<tr class="memdesc:ac068d64341e0a77e4eeeefdd6ce6cd8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object.  <br /></td></tr>
<tr class="separator:ac068d64341e0a77e4eeeefdd6ce6cd8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a153331467eb9f3315c27eaa098cd8a5d" id="r_a153331467eb9f3315c27eaa098cd8a5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a153331467eb9f3315c27eaa098cd8a5d">ConnectRequest</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a> &amp;socket, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;address, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *buffer=nullptr, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> numberOfBytesToSend=0)</td></tr>
<tr class="memdesc:a153331467eb9f3315c27eaa098cd8a5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object.  <br /></td></tr>
<tr class="separator:a153331467eb9f3315c27eaa098cd8a5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad622832ce74a9f8489d1fb709d07ceb8" id="r_ad622832ce74a9f8489d1fb709d07ceb8"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad622832ce74a9f8489d1fb709d07ceb8">ConnectRequest</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a> &amp;socket, HANDLE manualResetEvent, bool ownsEvent, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;address, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *buffer=nullptr, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> numberOfBytesToSend=0) noexcept</td></tr>
<tr class="memdesc:ad622832ce74a9f8489d1fb709d07ceb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object.  <br /></td></tr>
<tr class="separator:ad622832ce74a9f8489d1fb709d07ceb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4fa83de8e98b02b62cbcb7d28fffc7b" id="r_aa4fa83de8e98b02b62cbcb7d28fffc7b"><td class="memItemLeft" align="right" valign="top">constexpr const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa4fa83de8e98b02b62cbcb7d28fffc7b">Address</a> () const noexcept</td></tr>
<tr class="memdesc:aa4fa83de8e98b02b62cbcb7d28fffc7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the address to which to connect.  <br /></td></tr>
<tr class="separator:aa4fa83de8e98b02b62cbcb7d28fffc7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0067bc41158fadbc4f47937baf555bc" id="r_ae0067bc41158fadbc4f47937baf555bc"><td class="memItemLeft" align="right" valign="top">constexpr const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae0067bc41158fadbc4f47937baf555bc">Buffer</a> () const noexcept</td></tr>
<tr class="memdesc:ae0067bc41158fadbc4f47937baf555bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a pointer to the buffer to be transferred after a connection is established.  <br /></td></tr>
<tr class="separator:ae0067bc41158fadbc4f47937baf555bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a519200cd54c5ef0e5adfef8e5a1b3a30" id="r_a519200cd54c5ef0e5adfef8e5a1b3a30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a519200cd54c5ef0e5adfef8e5a1b3a30">NumberOfBytesToSend</a> () const noexcept</td></tr>
<tr class="memdesc:a519200cd54c5ef0e5adfef8e5a1b3a30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the length, in bytes, of data pointed to by the buffer parameter.  <br /></td></tr>
<tr class="separator:a519200cd54c5ef0e5adfef8e5a1b3a30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml">Harlinn::Common::Core::IO::Sockets::SocketRequest</a></td></tr>
<tr class="memitem:a01b643c0dee4b13167721fe3405caf5f inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a01b643c0dee4b13167721fe3405caf5f"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a01b643c0dee4b13167721fe3405caf5f">Type</a> () const noexcept</td></tr>
<tr class="separator:a01b643c0dee4b13167721fe3405caf5f inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2391d89aaa57ad8dae752afbb90cb41b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a2391d89aaa57ad8dae752afbb90cb41b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a2391d89aaa57ad8dae752afbb90cb41b">SetHandle</a> (SOCKET s)</td></tr>
<tr class="separator:a2391d89aaa57ad8dae752afbb90cb41b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9e21f4213643e3ee4c948194f58765 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a5f9e21f4213643e3ee4c948194f58765"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a5f9e21f4213643e3ee4c948194f58765">SetHandle</a> (HANDLE handle)</td></tr>
<tr class="memdesc:a5f9e21f4213643e3ee4c948194f58765 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the handle that this asynchronous operates on.  <br /></td></tr>
<tr class="separator:a5f9e21f4213643e3ee4c948194f58765 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Harlinn::Common::Core::IO::Request</a></td></tr>
<tr class="memitem:a89924349a0e6954759a3773b72fba184 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a89924349a0e6954759a3773b72fba184"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a89924349a0e6954759a3773b72fba184">Request</a> ()</td></tr>
<tr class="separator:a89924349a0e6954759a3773b72fba184 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c7bfa8209a335a90c1faa3cb22422e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_ad7c7bfa8209a335a90c1faa3cb22422e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#ad7c7bfa8209a335a90c1faa3cb22422e">Request</a> (HANDLE handle)</td></tr>
<tr class="separator:ad7c7bfa8209a335a90c1faa3cb22422e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8070d15bce13b049b69d5382b3ee617b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a8070d15bce13b049b69d5382b3ee617b"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a8070d15bce13b049b69d5382b3ee617b">Request</a> (HANDLE handle, HANDLE manualResetEvent, bool ownsEvent)</td></tr>
<tr class="separator:a8070d15bce13b049b69d5382b3ee617b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b55220a3256be87fdaccd63a860082c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a4b55220a3256be87fdaccd63a860082c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a4b55220a3256be87fdaccd63a860082c">Request</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a> &amp;other)=delete</td></tr>
<tr class="separator:a4b55220a3256be87fdaccd63a860082c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb79a39b72b18c4610ef6f3fc97538d1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_adb79a39b72b18c4610ef6f3fc97538d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#adb79a39b72b18c4610ef6f3fc97538d1">Request</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:adb79a39b72b18c4610ef6f3fc97538d1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6341a259e8c0c9d51036a005d565caa1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a6341a259e8c0c9d51036a005d565caa1"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a6341a259e8c0c9d51036a005d565caa1">~Request</a> () noexcept</td></tr>
<tr class="separator:a6341a259e8c0c9d51036a005d565caa1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c11e4fa89bd54d85c3dd13ad0fb64c9 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a6c11e4fa89bd54d85c3dd13ad0fb64c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a6c11e4fa89bd54d85c3dd13ad0fb64c9">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a> &amp;other)=delete</td></tr>
<tr class="separator:a6c11e4fa89bd54d85c3dd13ad0fb64c9 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc6bc5d12a0f46b5ff638fb8daedbb6e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_acc6bc5d12a0f46b5ff638fb8daedbb6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#acc6bc5d12a0f46b5ff638fb8daedbb6e">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml">Request</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:acc6bc5d12a0f46b5ff638fb8daedbb6e inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb72ff63e0bf2b9c1d2618c0180cbfa3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_abb72ff63e0bf2b9c1d2618c0180cbfa3"><td class="memItemLeft" align="right" valign="top">constexpr ULONG_PTR&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#abb72ff63e0bf2b9c1d2618c0180cbfa3">Status</a> () const noexcept</td></tr>
<tr class="memdesc:abb72ff63e0bf2b9c1d2618c0180cbfa3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the status code for the I/O request. Will return STATUS_PENDING to indicate that the operation has not yet completed, and for operations that has completed it will return the status code for the completed request.  <br /></td></tr>
<tr class="separator:abb72ff63e0bf2b9c1d2618c0180cbfa3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9497bb448be3b44a485f10a2ddb815 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a7d9497bb448be3b44a485f10a2ddb815"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a7d9497bb448be3b44a485f10a2ddb815">SetResult</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7db81262edfb59ceb8618fa43cc28a88">WinError</a> ioResult, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> numberOfBytesTransferred) noexcept</td></tr>
<tr class="memdesc:a7d9497bb448be3b44a485f10a2ddb815 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the status code and number of bytes transferred for this request.  <br /></td></tr>
<tr class="separator:a7d9497bb448be3b44a485f10a2ddb815 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacf3c14c025bd46cb577b8f0395e44dd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_aacf3c14c025bd46cb577b8f0395e44dd"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#aacf3c14c025bd46cb577b8f0395e44dd">SetResult</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7db81262edfb59ceb8618fa43cc28a88">WinError</a> ioResult) noexcept</td></tr>
<tr class="memdesc:aacf3c14c025bd46cb577b8f0395e44dd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the status code for this request.  <br /></td></tr>
<tr class="separator:aacf3c14c025bd46cb577b8f0395e44dd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67ccd8ebb045f3d6fe49b59117224456 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a67ccd8ebb045f3d6fe49b59117224456"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7db81262edfb59ceb8618fa43cc28a88">WinError</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a67ccd8ebb045f3d6fe49b59117224456">IoResult</a> () const noexcept</td></tr>
<tr class="memdesc:a67ccd8ebb045f3d6fe49b59117224456 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the status code for the I/O request as an unsigned 32-bit integer. Will return STATUS_PENDING to indicate that the operation has not yet completed, and for operations that has completed it will return the status code for the completed request.  <br /></td></tr>
<tr class="separator:a67ccd8ebb045f3d6fe49b59117224456 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1270b0dbe284c602df2f55b5194aadb8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a1270b0dbe284c602df2f55b5194aadb8"><td class="memItemLeft" align="right" valign="top">constexpr ULONG_PTR&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a1270b0dbe284c602df2f55b5194aadb8">NumberOfBytesTransferred</a> () const noexcept</td></tr>
<tr class="memdesc:a1270b0dbe284c602df2f55b5194aadb8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the number of bytes transferred for the I/O request. The result is only valid if the request is completed without errors.  <br /></td></tr>
<tr class="separator:a1270b0dbe284c602df2f55b5194aadb8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ab9610b15f942150f87faebd57f23b7 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a6ab9610b15f942150f87faebd57f23b7"><td class="memItemLeft" align="right" valign="top">constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a6ab9610b15f942150f87faebd57f23b7">Position</a> () const noexcept</td></tr>
<tr class="memdesc:a6ab9610b15f942150f87faebd57f23b7 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the file position at which to start the I/O request.  <br /></td></tr>
<tr class="separator:a6ab9610b15f942150f87faebd57f23b7 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58ad8e64ccaf18a73f41ff71bd983157 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a58ad8e64ccaf18a73f41ff71bd983157"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a58ad8e64ccaf18a73f41ff71bd983157">SetPosition</a> (size_t position) noexcept</td></tr>
<tr class="memdesc:a58ad8e64ccaf18a73f41ff71bd983157 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the file position at which to start the I/O request.  <br /></td></tr>
<tr class="separator:a58ad8e64ccaf18a73f41ff71bd983157 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a601a1fac1d039990bf3afb6ef0f20888 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a601a1fac1d039990bf3afb6ef0f20888"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a601a1fac1d039990bf3afb6ef0f20888">Clear</a> () noexcept</td></tr>
<tr class="memdesc:a601a1fac1d039990bf3afb6ef0f20888 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares the OVERLAPPED for reuse <br  />
  <br /></td></tr>
<tr class="separator:a601a1fac1d039990bf3afb6ef0f20888 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ebe68b7c80ebd06078930fd4277711 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a74ebe68b7c80ebd06078930fd4277711"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a74ebe68b7c80ebd06078930fd4277711">Reset</a> ()</td></tr>
<tr class="memdesc:a74ebe68b7c80ebd06078930fd4277711 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares the request for reuse <br  />
  <br /></td></tr>
<tr class="separator:a74ebe68b7c80ebd06078930fd4277711 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3ac5d6ddbb8acda075ef825eb95b94c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_ad3ac5d6ddbb8acda075ef825eb95b94c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#ad3ac5d6ddbb8acda075ef825eb95b94c">Reset</a> (HANDLE handle)</td></tr>
<tr class="memdesc:ad3ac5d6ddbb8acda075ef825eb95b94c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares the request for reuse <br  />
  <br /></td></tr>
<tr class="separator:ad3ac5d6ddbb8acda075ef825eb95b94c inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09da3c980b9473bea03e6157020b4e37 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a09da3c980b9473bea03e6157020b4e37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a09da3c980b9473bea03e6157020b4e37">Reset</a> (HANDLE handle, HANDLE manualResetEvent, bool ownsEvent)</td></tr>
<tr class="memdesc:a09da3c980b9473bea03e6157020b4e37 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares the request for reuse <br  />
  <br /></td></tr>
<tr class="separator:a09da3c980b9473bea03e6157020b4e37 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3d01eca5fbb58f7a7229dc19a624d95 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_af3d01eca5fbb58f7a7229dc19a624d95"><td class="memItemLeft" align="right" valign="top">constexpr HANDLE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#af3d01eca5fbb58f7a7229dc19a624d95">Handle</a> () const noexcept</td></tr>
<tr class="memdesc:af3d01eca5fbb58f7a7229dc19a624d95 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the handle that this asynchronous operates on.  <br /></td></tr>
<tr class="separator:af3d01eca5fbb58f7a7229dc19a624d95 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9e21f4213643e3ee4c948194f58765 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a5f9e21f4213643e3ee4c948194f58765"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a5f9e21f4213643e3ee4c948194f58765">SetHandle</a> (HANDLE handle)</td></tr>
<tr class="memdesc:a5f9e21f4213643e3ee4c948194f58765 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the handle that this asynchronous operates on.  <br /></td></tr>
<tr class="separator:a5f9e21f4213643e3ee4c948194f58765 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af09de1ddd9f42aad2409961fb142f63b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_af09de1ddd9f42aad2409961fb142f63b"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml">IO::Context</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#af09de1ddd9f42aad2409961fb142f63b">Context</a> () const noexcept</td></tr>
<tr class="memdesc:af09de1ddd9f42aad2409961fb142f63b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a pointer to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml" title="Context is an I/O completion port with an attached thread-pool that services I/O completion notificat...">IO::Context</a> that the handle this <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml" title="Base class for all asynchronous requests.">Request</a> operates on is bound to.  <br /></td></tr>
<tr class="separator:af09de1ddd9f42aad2409961fb142f63b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0211cb0f6d0439c92fae174a45c096b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_af0211cb0f6d0439c92fae174a45c096b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#af0211cb0f6d0439c92fae174a45c096b">SetContext</a> (std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml">IO::Context</a> &gt; &amp;context)</td></tr>
<tr class="memdesc:af0211cb0f6d0439c92fae174a45c096b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pointer to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml" title="Context is an I/O completion port with an attached thread-pool that services I/O completion notificat...">IO::Context</a> that the handle this <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml" title="Base class for all asynchronous requests.">Request</a> operates on is bound to.  <br /></td></tr>
<tr class="separator:af0211cb0f6d0439c92fae174a45c096b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a713bdc21518a5c2225b5fbab0b8e9575 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a713bdc21518a5c2225b5fbab0b8e9575"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a713bdc21518a5c2225b5fbab0b8e9575">SetContext</a> (std::weak_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml">IO::Context</a> &gt; &amp;context)</td></tr>
<tr class="separator:a713bdc21518a5c2225b5fbab0b8e9575 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf5e0951f4f11cf54e45e9f821bfe2f5 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_adf5e0951f4f11cf54e45e9f821bfe2f5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#adf5e0951f4f11cf54e45e9f821bfe2f5">IoCompleted</a> () const</td></tr>
<tr class="memdesc:adf5e0951f4f11cf54e45e9f821bfe2f5 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">A high performance test operation that can be used to poll for the completion of an outstanding I/O request.  <br /></td></tr>
<tr class="separator:adf5e0951f4f11cf54e45e9f821bfe2f5 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1e2e3da770332eabb1a5516d77d8b1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_ade1e2e3da770332eabb1a5516d77d8b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml#a35e9effb171a9d3efbd0b0fe56a30596">RequestWaitResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#ade1e2e3da770332eabb1a5516d77d8b1">Wait</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> *numberOfBytesTransferred, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> timeoutInMilliseconds, bool alertableWait) const</td></tr>
<tr class="memdesc:ade1e2e3da770332eabb1a5516d77d8b1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for the completion of this asynchronous request.  <br /></td></tr>
<tr class="separator:ade1e2e3da770332eabb1a5516d77d8b1 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a812131aeed21753c0589a17c228b44b4 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a812131aeed21753c0589a17c228b44b4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a812131aeed21753c0589a17c228b44b4">Wait</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> *numberOfBytesTransferred, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> timeoutInMilliseconds=INFINITE) const</td></tr>
<tr class="memdesc:a812131aeed21753c0589a17c228b44b4 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for the completion of this asynchronous request.  <br /></td></tr>
<tr class="separator:a812131aeed21753c0589a17c228b44b4 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477652f9be29fa79cd0afc77f5e177d8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a477652f9be29fa79cd0afc77f5e177d8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a477652f9be29fa79cd0afc77f5e177d8">Wait</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> timeoutInMilliseconds=INFINITE) const</td></tr>
<tr class="memdesc:a477652f9be29fa79cd0afc77f5e177d8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for the completion of this asynchronous request.  <br /></td></tr>
<tr class="separator:a477652f9be29fa79cd0afc77f5e177d8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cefcc22aff05079044b7934aa1edd63 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a4cefcc22aff05079044b7934aa1edd63"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a4cefcc22aff05079044b7934aa1edd63">Cancel</a> () const</td></tr>
<tr class="memdesc:a4cefcc22aff05079044b7934aa1edd63 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cancels the outstanding I/O operation.  <br /></td></tr>
<tr class="separator:a4cefcc22aff05079044b7934aa1edd63 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc02d9fb10afe66eeb0a55cca0d4ce8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_aacc02d9fb10afe66eeb0a55cca0d4ce8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#aacc02d9fb10afe66eeb0a55cca0d4ce8">SetEvent</a> () const</td></tr>
<tr class="memdesc:aacc02d9fb10afe66eeb0a55cca0d4ce8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the event object to the signaled state.  <br /></td></tr>
<tr class="separator:aacc02d9fb10afe66eeb0a55cca0d4ce8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbb5d0c55dc11b3a219837a32163212d inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_abbb5d0c55dc11b3a219837a32163212d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#abbb5d0c55dc11b3a219837a32163212d">Signal</a> () const</td></tr>
<tr class="memdesc:abbb5d0c55dc11b3a219837a32163212d inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the event object to the signaled state.  <br /></td></tr>
<tr class="separator:abbb5d0c55dc11b3a219837a32163212d inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a324c7df3654101366cc51a4205fcac13 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request" id="r_a324c7df3654101366cc51a4205fcac13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request.xhtml#a324c7df3654101366cc51a4205fcac13">ResetEvent</a> () const</td></tr>
<tr class="memdesc:a324c7df3654101366cc51a4205fcac13 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the event object to the non-signaled state.  <br /></td></tr>
<tr class="separator:a324c7df3654101366cc51a4205fcac13 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a4ba3cd6a38c04e9dfab624c407375ff0" id="r_a4ba3cd6a38c04e9dfab624c407375ff0"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ba3cd6a38c04e9dfab624c407375ff0">RequestType</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32a49ab28040dfa07f53544970c6d147e1e">SocketRequestType::Connect</a></td></tr>
<tr class="separator:a4ba3cd6a38c04e9dfab624c407375ff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:acca5f3967701e0346079832562a09493" id="r_acca5f3967701e0346079832562a09493"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acca5f3967701e0346079832562a09493">address_</a></td></tr>
<tr class="separator:acca5f3967701e0346079832562a09493"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac22cf91a96a7a4c23750f53a17efeea" id="r_aac22cf91a96a7a4c23750f53a17efeea"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac22cf91a96a7a4c23750f53a17efeea">buffer_</a> = nullptr</td></tr>
<tr class="separator:aac22cf91a96a7a4c23750f53a17efeea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef5f24598ba1833b6a0064614e306952" id="r_aef5f24598ba1833b6a0064614e306952"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef5f24598ba1833b6a0064614e306952">numberOfBytesToSend_</a> = 0</td></tr>
<tr class="separator:aef5f24598ba1833b6a0064614e306952"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml">Harlinn::Common::Core::IO::Sockets::SocketRequest</a></td></tr>
<tr class="memitem:a23b50477fc8f98ddf91e337a934abe20 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a23b50477fc8f98ddf91e337a934abe20"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a23b50477fc8f98ddf91e337a934abe20">SocketRequest</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a> type)</td></tr>
<tr class="separator:a23b50477fc8f98ddf91e337a934abe20 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58652e1c135f992afb447750060ca31e inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a58652e1c135f992afb447750060ca31e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a58652e1c135f992afb447750060ca31e">SocketRequest</a> (SOCKET handle, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a> type)</td></tr>
<tr class="separator:a58652e1c135f992afb447750060ca31e inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae70a9278f6e5dfc178307496f0b99823 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_ae70a9278f6e5dfc178307496f0b99823"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#ae70a9278f6e5dfc178307496f0b99823">SocketRequest</a> (SOCKET handle, HANDLE manualResetEvent, bool ownsEvent, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a> type) noexcept</td></tr>
<tr class="separator:ae70a9278f6e5dfc178307496f0b99823 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dfcdf186c22ca25ef08f95a8f901735 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_a5dfcdf186c22ca25ef08f95a8f901735"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#a5dfcdf186c22ca25ef08f95a8f901735">SocketRequest</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a> &amp;socket, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a> type)</td></tr>
<tr class="separator:a5dfcdf186c22ca25ef08f95a8f901735 inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9b15edf8606f584d2ec9e49bef1593d inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request" id="r_af9b15edf8606f584d2ec9e49bef1593d"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml#af9b15edf8606f584d2ec9e49bef1593d">SocketRequest</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a> &amp;socket, HANDLE manualResetEvent, bool ownsEvent, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a> type) noexcept</td></tr>
<tr class="separator:af9b15edf8606f584d2ec9e49bef1593d inherit pro_methods_class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>For use with <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_handler.xhtml#a811abcb56d4e2037ffefc68f0031ec63" title="Establishes a connection to a specified socket, and optionally sends data once the connection is esta...">SocketHandler::BeginAsyncConnect</a>. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a71fc5210f7ef7d7d9b23b58fec2f0235" name="a71fc5210f7ef7d7d9b23b58fec2f0235"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71fc5210f7ef7d7d9b23b58fec2f0235">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a71fc5210f7ef7d7d9b23b58fec2f0235">Harlinn::Common::Core::IO::Sockets::ConnectRequest::Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_request.xhtml">SocketRequest</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7deee862eb030b8f5a982023a90446b6" name="a7deee862eb030b8f5a982023a90446b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7deee862eb030b8f5a982023a90446b6">&#9670;&#160;</a></span>ConnectRequest() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::ConnectRequest::ConnectRequest </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a32f9b11720a825a3b3d8f866e2616841" name="a32f9b11720a825a3b3d8f866e2616841"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32f9b11720a825a3b3d8f866e2616841">&#9670;&#160;</a></span>ConnectRequest() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::ConnectRequest::ConnectRequest </td>
          <td>(</td>
          <td class="paramtype">SOCKET</td>          <td class="paramname"><span class="paramname"><em>handle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>address</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>numberOfBytesToSend</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>A descriptor that identifies an unconnected, previously bound socket. </td></tr>
    <tr><td class="paramname">address</td><td>The address to which to connect. </td></tr>
    <tr><td class="paramname">buffer</td><td>A pointer to the buffer to be transferred after a connection is established. This parameter is optional. If the TCP_FASTOPEN option is enabled on handle before BeginAsyncConnect is called, then some of this data may be sent during connection establishment. </td></tr>
    <tr><td class="paramname">numberOfBytesToSend</td><td>The length, in bytes, of data pointed to by the buffer parameter. This parameter is ignored when the buffer parameter is nullptr. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac068d64341e0a77e4eeeefdd6ce6cd8e" name="ac068d64341e0a77e4eeeefdd6ce6cd8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac068d64341e0a77e4eeeefdd6ce6cd8e">&#9670;&#160;</a></span>ConnectRequest() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::ConnectRequest::ConnectRequest </td>
          <td>(</td>
          <td class="paramtype">SOCKET</td>          <td class="paramname"><span class="paramname"><em>handle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>manualResetEvent</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>ownsEvent</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>address</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>numberOfBytesToSend</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>A descriptor that identifies an unconnected, previously bound socket. </td></tr>
    <tr><td class="paramname">manualResetEvent</td><td>A handle to an event that will be set to a signaled state by the system when the operation has completed. </td></tr>
    <tr><td class="paramname">ownsEvent</td><td>if set to true, the destructor will close the handle passed in manualResetEvent. </td></tr>
    <tr><td class="paramname">address</td><td>The address to which to connect. </td></tr>
    <tr><td class="paramname">buffer</td><td>A pointer to the buffer to be transferred after a connection is established. This parameter is optional. If the TCP_FASTOPEN option is enabled on handle before BeginAsyncConnect is called, then some of this data may be sent during connection establishment. </td></tr>
    <tr><td class="paramname">numberOfBytesToSend</td><td>The length, in bytes, of data pointed to by the buffer parameter. This parameter is ignored when the buffer parameter is nullptr. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a153331467eb9f3315c27eaa098cd8a5d" name="a153331467eb9f3315c27eaa098cd8a5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a153331467eb9f3315c27eaa098cd8a5d">&#9670;&#160;</a></span>ConnectRequest() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::ConnectRequest::ConnectRequest </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>socket</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>address</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>numberOfBytesToSend</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">socket</td><td>Identifies an unconnected, previously bound socket. </td></tr>
    <tr><td class="paramname">address</td><td>The address to which to connect. </td></tr>
    <tr><td class="paramname">buffer</td><td>A pointer to the buffer to be transferred after a connection is established. This parameter is optional. If the TCP_FASTOPEN option is enabled on handle before BeginAsyncConnect is called, then some of this data may be sent during connection establishment. </td></tr>
    <tr><td class="paramname">numberOfBytesToSend</td><td>The length, in bytes, of data pointed to by the buffer parameter. This parameter is ignored when the buffer parameter is nullptr. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad622832ce74a9f8489d1fb709d07ceb8" name="ad622832ce74a9f8489d1fb709d07ceb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad622832ce74a9f8489d1fb709d07ceb8">&#9670;&#160;</a></span>ConnectRequest() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::ConnectRequest::ConnectRequest </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>socket</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>manualResetEvent</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>ownsEvent</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>address</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>numberOfBytesToSend</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml" title="For use with SocketHandler::BeginAsyncConnect.">ConnectRequest</a> object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">socket</td><td>Identifies an unconnected, previously bound socket. </td></tr>
    <tr><td class="paramname">manualResetEvent</td><td>A handle to an event that will be set to a signaled state by the system when the operation has completed. </td></tr>
    <tr><td class="paramname">ownsEvent</td><td>if set to true, the destructor will close the handle passed in manualResetEvent. </td></tr>
    <tr><td class="paramname">address</td><td>The address to which to connect. </td></tr>
    <tr><td class="paramname">buffer</td><td>A pointer to the buffer to be transferred after a connection is established. This parameter is optional. If the TCP_FASTOPEN option is enabled on handle before BeginAsyncConnect is called, then some of this data may be sent during connection establishment. </td></tr>
    <tr><td class="paramname">numberOfBytesToSend</td><td>The length, in bytes, of data pointed to by the buffer parameter. This parameter is ignored when the buffer parameter is nullptr. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa4fa83de8e98b02b62cbcb7d28fffc7b" name="aa4fa83de8e98b02b62cbcb7d28fffc7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4fa83de8e98b02b62cbcb7d28fffc7b">&#9670;&#160;</a></span>Address()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> &amp; Harlinn::Common::Core::IO::Sockets::ConnectRequest::Address </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the address to which to connect. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to the address to which to connect.</dd></dl>

</div>
</div>
<a id="ae0067bc41158fadbc4f47937baf555bc" name="ae0067bc41158fadbc4f47937baf555bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0067bc41158fadbc4f47937baf555bc">&#9670;&#160;</a></span>Buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> * Harlinn::Common::Core::IO::Sockets::ConnectRequest::Buffer </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a pointer to the buffer to be transferred after a connection is established. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the buffer to be transferred after a connection is established. </dd></dl>

</div>
</div>
<a id="a519200cd54c5ef0e5adfef8e5a1b3a30" name="a519200cd54c5ef0e5adfef8e5a1b3a30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a519200cd54c5ef0e5adfef8e5a1b3a30">&#9670;&#160;</a></span>NumberOfBytesToSend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::Sockets::ConnectRequest::NumberOfBytesToSend </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the length, in bytes, of data pointed to by the buffer parameter. </p>
<dl class="section return"><dt>Returns</dt><dd>The length, in bytes, of data pointed to by the buffer parameter. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="acca5f3967701e0346079832562a09493" name="acca5f3967701e0346079832562a09493"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acca5f3967701e0346079832562a09493">&#9670;&#160;</a></span>address_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Sockets::Address</a> Harlinn::Common::Core::IO::Sockets::ConnectRequest::address_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac22cf91a96a7a4c23750f53a17efeea" name="aac22cf91a96a7a4c23750f53a17efeea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac22cf91a96a7a4c23750f53a17efeea">&#9670;&#160;</a></span>buffer_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a>* Harlinn::Common::Core::IO::Sockets::ConnectRequest::buffer_ = nullptr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aef5f24598ba1833b6a0064614e306952" name="aef5f24598ba1833b6a0064614e306952"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef5f24598ba1833b6a0064614e306952">&#9670;&#160;</a></span>numberOfBytesToSend_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Common::Core::IO::Sockets::ConnectRequest::numberOfBytesToSend_ = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ba3cd6a38c04e9dfab624c407375ff0" name="a4ba3cd6a38c04e9dfab624c407375ff0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ba3cd6a38c04e9dfab624c407375ff0">&#9670;&#160;</a></span>RequestType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32">SocketRequestType</a> Harlinn::Common::Core::IO::Sockets::ConnectRequest::RequestType = <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a011cc9bfee1b387d54ab7d64897c8e32a49ab28040dfa07f53544970c6d147e1e">SocketRequestType::Connect</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_socket_8h.xhtml">HCCSocket.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml">IO</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml">Sockets</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_connect_request.xhtml">ConnectRequest</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
