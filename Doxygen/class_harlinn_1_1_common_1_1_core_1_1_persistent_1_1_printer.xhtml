<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Persistent::Printer&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Persistent::Printer&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Uses a format string, a type descriptor generated by Persistent::Describe and serialized data written by <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_persistent.xhtml#aee6f7ac7cc063a5f9e3ba10b639af68c">Persistent::Write</a> to generate a formatted text representation of the serialized data.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCPersistentPrinter.h&gt;</code></p>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::Persistent::Printer&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer__coll__graph.svg" width="1734" height="302"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afadfd4c22295c1e049324644f11764f3" id="r_afadfd4c22295c1e049324644f11764f3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> = CharT</td></tr>
<tr class="separator:afadfd4c22295c1e049324644f11764f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1998d4e994308bc9ac7099ea6c97b513" id="r_a1998d4e994308bc9ac7099ea6c97b513"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> = DestinationStreamT</td></tr>
<tr class="separator:a1998d4e994308bc9ac7099ea6c97b513"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83f513a685ebdfca5a385205bb441f74" id="r_a83f513a685ebdfca5a385205bb441f74"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> = ArgumentsStreamT</td></tr>
<tr class="separator:a83f513a685ebdfca5a385205bb441f74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd76f735bf1a99fd8bbc6edc398c5dea" id="r_afd76f735bf1a99fd8bbc6edc398c5dea"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afd76f735bf1a99fd8bbc6edc398c5dea">FormatStringView</a> = typename <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_formatting_1_1_format_string_parser.xhtml#a8dd6c21a31069e9cd7a982fe20b16659">FormatStringParser::StringViewType</a></td></tr>
<tr class="separator:afd76f735bf1a99fd8bbc6edc398c5dea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4fec598ac80d1d91195eaeaed74bd4b1" id="r_a4fec598ac80d1d91195eaeaed74bd4b1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4fec598ac80d1d91195eaeaed74bd4b1">Printer</a> (const <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> *formatString, size_t formatStringLength, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *argumentDescriptor, <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;argumentsStream, <a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;destination)</td></tr>
<tr class="separator:a4fec598ac80d1d91195eaeaed74bd4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affc1ae3eb67eb1f7805618b20757f977" id="r_affc1ae3eb67eb1f7805618b20757f977"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#affc1ae3eb67eb1f7805618b20757f977">Printer</a> (<a class="el" href="#afd76f735bf1a99fd8bbc6edc398c5dea">FormatStringView</a> formatString, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *argumentDescriptor, <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;argumentsStream, <a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;destination)</td></tr>
<tr class="separator:affc1ae3eb67eb1f7805618b20757f977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5858c70d6acb45a28fc4573540b5fcb8" id="r_a5858c70d6acb45a28fc4573540b5fcb8"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a5858c70d6acb45a28fc4573540b5fcb8"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a5858c70d6acb45a28fc4573540b5fcb8">Printer</a> (const StringT &amp;formatString, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *argumentDescriptor, <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;argumentsStream, <a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;destination)</td></tr>
<tr class="separator:a5858c70d6acb45a28fc4573540b5fcb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f640fc3a4fd170209368da457647927" id="r_a9f640fc3a4fd170209368da457647927"><td class="memTemplParams" colspan="2">template&lt;typename ... Types&gt; </td></tr>
<tr class="memitem:a9f640fc3a4fd170209368da457647927"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a9f640fc3a4fd170209368da457647927">Printer</a> (const <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> *formatString, size_t formatStringLength, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; Types... &gt; &amp;argumentDescriptor, <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;argumentsStream, <a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;destination)</td></tr>
<tr class="separator:a9f640fc3a4fd170209368da457647927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a478a6df5cf0e649326b0af9663a4a5e7" id="r_a478a6df5cf0e649326b0af9663a4a5e7"><td class="memTemplParams" colspan="2">template&lt;typename ... Types&gt; </td></tr>
<tr class="memitem:a478a6df5cf0e649326b0af9663a4a5e7"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a478a6df5cf0e649326b0af9663a4a5e7">Printer</a> (<a class="el" href="#afd76f735bf1a99fd8bbc6edc398c5dea">FormatStringView</a> formatString, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; Types... &gt; &amp;argumentDescriptor, <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;argumentsStream, <a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;destination)</td></tr>
<tr class="separator:a478a6df5cf0e649326b0af9663a4a5e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a020ae5924fbaa778e0b362691cd7e55b" id="r_a020ae5924fbaa778e0b362691cd7e55b"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT, typename ... Types&gt; </td></tr>
<tr class="memitem:a020ae5924fbaa778e0b362691cd7e55b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a020ae5924fbaa778e0b362691cd7e55b">Printer</a> (const StringT &amp;formatString, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; Types... &gt; &amp;argumentDescriptor, <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;argumentsStream, <a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;destination)</td></tr>
<tr class="separator:a020ae5924fbaa778e0b362691cd7e55b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c7d7bfda83a24890a94714cc269a8f5" id="r_a3c7d7bfda83a24890a94714cc269a8f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c7d7bfda83a24890a94714cc269a8f5">Print</a> ()</td></tr>
<tr class="separator:a3c7d7bfda83a24890a94714cc269a8f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad567b4af336b713b70cbcbd748b6c3c6" id="r_ad567b4af336b713b70cbcbd748b6c3c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad567b4af336b713b70cbcbd748b6c3c6">Print</a> (const std::locale &amp;locale)</td></tr>
<tr class="separator:ad567b4af336b713b70cbcbd748b6c3c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-types" name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:af4a98424e91681cc166dc514dfa10da1" id="r_af4a98424e91681cc166dc514dfa10da1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af4a98424e91681cc166dc514dfa10da1">FormatStringSectionType</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_formatting.xhtml#a5dba93c4e396b3410d14a6fe780fe273">Formatting::FormatStringSectionType</a></td></tr>
<tr class="separator:af4a98424e91681cc166dc514dfa10da1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a778d215f89a87a8ba42ce957cdc8b6a2" id="r_a778d215f89a87a8ba42ce957cdc8b6a2"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_formatting_1_1_format_string_section.xhtml">Formatting::FormatStringSection</a>&lt;<a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a>&gt;</td></tr>
<tr class="separator:a778d215f89a87a8ba42ce957cdc8b6a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2128733052970100d537869c93a41545" id="r_a2128733052970100d537869c93a41545"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2128733052970100d537869c93a41545">FormatStringParser</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_formatting_1_1_format_string_parser.xhtml">Formatting::FormatStringParser</a>&lt;<a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a>&gt;</td></tr>
<tr class="separator:a2128733052970100d537869c93a41545"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef7ec720cc1e52bb03492e6f4e5f1e07" id="r_aef7ec720cc1e52bb03492e6f4e5f1e07"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef7ec720cc1e52bb03492e6f4e5f1e07">StringType</a> = std::basic_string&lt;<a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a>&gt;</td></tr>
<tr class="separator:aef7ec720cc1e52bb03492e6f4e5f1e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ad4b3e030fcea4f0dae26d4b9a6bb2e4f" id="r_ad4b3e030fcea4f0dae26d4b9a6bb2e4f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad4b3e030fcea4f0dae26d4b9a6bb2e4f">PrintSection</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:ad4b3e030fcea4f0dae26d4b9a6bb2e4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac58e95e4ca5bab89a2a14a29f8183016" id="r_ac58e95e4ca5bab89a2a14a29f8183016"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac58e95e4ca5bab89a2a14a29f8183016">WriteMissingArgument</a> ()</td></tr>
<tr class="separator:ac58e95e4ca5bab89a2a14a29f8183016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf902e3f995be3a0e3c01457e2e47310" id="r_aaf902e3f995be3a0e3c01457e2e47310"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf902e3f995be3a0e3c01457e2e47310">Write</a> (const <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> *data, size_t dataSize)</td></tr>
<tr class="separator:aaf902e3f995be3a0e3c01457e2e47310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02308a0fe26d5f7909ccb009ed06c43" id="r_aa02308a0fe26d5f7909ccb009ed06c43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa02308a0fe26d5f7909ccb009ed06c43">Write</a> (const <a class="el" href="#aef7ec720cc1e52bb03492e6f4e5f1e07">StringType</a> &amp;buffer)</td></tr>
<tr class="separator:aa02308a0fe26d5f7909ccb009ed06c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52a6798b6570d15d988c8409a23fe6c4" id="r_a52a6798b6570d15d988c8409a23fe6c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a52a6798b6570d15d988c8409a23fe6c4">PrintTextSection</a> (const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a52a6798b6570d15d988c8409a23fe6c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a860d1e2d7c5f78cb3db348c1134ca326" id="r_a860d1e2d7c5f78cb3db348c1134ca326"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a860d1e2d7c5f78cb3db348c1134ca326">PrintSpecificationSection</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a860d1e2d7c5f78cb3db348c1134ca326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78ba218ebd31b9df8e361f6aebfd8bd8" id="r_a78ba218ebd31b9df8e361f6aebfd8bd8"><td class="memTemplParams" colspan="2">template&lt;typename ... Args&gt; </td></tr>
<tr class="memitem:a78ba218ebd31b9df8e361f6aebfd8bd8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a78ba218ebd31b9df8e361f6aebfd8bd8">PrintBasicType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, Args &amp;&amp;... args)</td></tr>
<tr class="separator:a78ba218ebd31b9df8e361f6aebfd8bd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16931e3170c617eeb81b801190a81e75" id="r_a16931e3170c617eeb81b801190a81e75"><td class="memTemplParams" colspan="2">template&lt;typename ArgT &gt; </td></tr>
<tr class="memitem:a16931e3170c617eeb81b801190a81e75"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a16931e3170c617eeb81b801190a81e75">PrintValue</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const std::basic_string_view&lt; <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> &gt; fmt)</td></tr>
<tr class="separator:a16931e3170c617eeb81b801190a81e75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff11ba7f8e1020db9e7c01f5f415f3de" id="r_aff11ba7f8e1020db9e7c01f5f415f3de"><td class="memTemplParams" colspan="2">template&lt;typename ArgT &gt; </td></tr>
<tr class="memitem:aff11ba7f8e1020db9e7c01f5f415f3de"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aff11ba7f8e1020db9e7c01f5f415f3de">PrintValue</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aff11ba7f8e1020db9e7c01f5f415f3de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a212d6dbbe0c45d369b4913811d7e0e57" id="r_a212d6dbbe0c45d369b4913811d7e0e57"><td class="memTemplParams" colspan="2">template&lt;typename ArgT &gt; </td></tr>
<tr class="memitem:a212d6dbbe0c45d369b4913811d7e0e57"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a212d6dbbe0c45d369b4913811d7e0e57">PrintValue</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a212d6dbbe0c45d369b4913811d7e0e57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9b8c50e946f98b7014560fb20519dd" id="r_aaa9b8c50e946f98b7014560fb20519dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa9b8c50e946f98b7014560fb20519dd">PrintBoolean</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aaa9b8c50e946f98b7014560fb20519dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396082ac0fb422ec9e5d840054755bb9" id="r_a396082ac0fb422ec9e5d840054755bb9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a396082ac0fb422ec9e5d840054755bb9">PrintBoolean</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a396082ac0fb422ec9e5d840054755bb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab00aa723abb6887a4a34b9f845e6132" id="r_aab00aa723abb6887a4a34b9f845e6132"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aab00aa723abb6887a4a34b9f845e6132">PrintChar</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aab00aa723abb6887a4a34b9f845e6132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89116520941a664df1d969c22c5d1ea9" id="r_a89116520941a664df1d969c22c5d1ea9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a89116520941a664df1d969c22c5d1ea9">PrintChar</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a89116520941a664df1d969c22c5d1ea9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2201f202cbeaebd73bd9518d97c1ff49" id="r_a2201f202cbeaebd73bd9518d97c1ff49"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2201f202cbeaebd73bd9518d97c1ff49">PrintSByte</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a2201f202cbeaebd73bd9518d97c1ff49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25427a24c764698252e8b59bbd9cb647" id="r_a25427a24c764698252e8b59bbd9cb647"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a25427a24c764698252e8b59bbd9cb647">PrintSByte</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a25427a24c764698252e8b59bbd9cb647"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bf6a04f46c9810a968015097606a6c5" id="r_a0bf6a04f46c9810a968015097606a6c5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0bf6a04f46c9810a968015097606a6c5">PrintByte</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a0bf6a04f46c9810a968015097606a6c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3c78ca4b71a18ddcac2a6dd659b9d6a" id="r_af3c78ca4b71a18ddcac2a6dd659b9d6a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af3c78ca4b71a18ddcac2a6dd659b9d6a">PrintByte</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:af3c78ca4b71a18ddcac2a6dd659b9d6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96d7996674622a24f68ca20e6dfe2ad8" id="r_a96d7996674622a24f68ca20e6dfe2ad8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a96d7996674622a24f68ca20e6dfe2ad8">PrintWChar</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a96d7996674622a24f68ca20e6dfe2ad8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1414b9804a1be90fd69b9d8ee3b5d854" id="r_a1414b9804a1be90fd69b9d8ee3b5d854"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1414b9804a1be90fd69b9d8ee3b5d854">PrintWChar</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a1414b9804a1be90fd69b9d8ee3b5d854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dddd3f2a0d82a70e365f449fa48a62b" id="r_a5dddd3f2a0d82a70e365f449fa48a62b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5dddd3f2a0d82a70e365f449fa48a62b">PrintInt16</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a5dddd3f2a0d82a70e365f449fa48a62b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47de21a76168f040cd2ca57075a3c263" id="r_a47de21a76168f040cd2ca57075a3c263"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47de21a76168f040cd2ca57075a3c263">PrintInt16</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a47de21a76168f040cd2ca57075a3c263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca37083baa2be3e71b67328300dd1e1a" id="r_aca37083baa2be3e71b67328300dd1e1a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca37083baa2be3e71b67328300dd1e1a">PrintUInt16</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aca37083baa2be3e71b67328300dd1e1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf15cc9bfd137fb8b3eb0b569ba01c5e" id="r_adf15cc9bfd137fb8b3eb0b569ba01c5e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adf15cc9bfd137fb8b3eb0b569ba01c5e">PrintUInt16</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:adf15cc9bfd137fb8b3eb0b569ba01c5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f7150209b78621ef3335a601be6e1f6" id="r_a6f7150209b78621ef3335a601be6e1f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6f7150209b78621ef3335a601be6e1f6">PrintInt32</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a6f7150209b78621ef3335a601be6e1f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a817c70fe9817d1b0d21f73595d321bd5" id="r_a817c70fe9817d1b0d21f73595d321bd5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a817c70fe9817d1b0d21f73595d321bd5">PrintInt32</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a817c70fe9817d1b0d21f73595d321bd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77e51ab9ae06061eb689503f40f8ee33" id="r_a77e51ab9ae06061eb689503f40f8ee33"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a77e51ab9ae06061eb689503f40f8ee33">PrintUInt32</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a77e51ab9ae06061eb689503f40f8ee33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a781a1b8c77b704dacc4026492d8a38" id="r_a6a781a1b8c77b704dacc4026492d8a38"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a781a1b8c77b704dacc4026492d8a38">PrintUInt32</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a6a781a1b8c77b704dacc4026492d8a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb25edad88f95b1b5e45688973442805" id="r_aeb25edad88f95b1b5e45688973442805"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeb25edad88f95b1b5e45688973442805">PrintInt64</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aeb25edad88f95b1b5e45688973442805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40b86b19b7a50ee7a115430b4897a4ce" id="r_a40b86b19b7a50ee7a115430b4897a4ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a40b86b19b7a50ee7a115430b4897a4ce">PrintInt64</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a40b86b19b7a50ee7a115430b4897a4ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad23f5998b2073a1d6c2066edf8fc4803" id="r_ad23f5998b2073a1d6c2066edf8fc4803"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad23f5998b2073a1d6c2066edf8fc4803">PrintUInt64</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:ad23f5998b2073a1d6c2066edf8fc4803"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb7fdaececbf2aaf9023b6c5662d8b28" id="r_abb7fdaececbf2aaf9023b6c5662d8b28"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb7fdaececbf2aaf9023b6c5662d8b28">PrintUInt64</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:abb7fdaececbf2aaf9023b6c5662d8b28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d9c7459936c9fa389905c5b18e69158" id="r_a3d9c7459936c9fa389905c5b18e69158"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d9c7459936c9fa389905c5b18e69158">PrintSingle</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a3d9c7459936c9fa389905c5b18e69158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08099f7604e825c013cf79e659f65462" id="r_a08099f7604e825c013cf79e659f65462"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a08099f7604e825c013cf79e659f65462">PrintSingle</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a08099f7604e825c013cf79e659f65462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29838f9e759c4bf7d17cf61e118947cb" id="r_a29838f9e759c4bf7d17cf61e118947cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a29838f9e759c4bf7d17cf61e118947cb">PrintDouble</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a29838f9e759c4bf7d17cf61e118947cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a088ab745c4791e3e1c255f4dc91f0080" id="r_a088ab745c4791e3e1c255f4dc91f0080"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a088ab745c4791e3e1c255f4dc91f0080">PrintDouble</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a088ab745c4791e3e1c255f4dc91f0080"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93074a6114ae9dfa76961b4054134e51" id="r_a93074a6114ae9dfa76961b4054134e51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a93074a6114ae9dfa76961b4054134e51">PrintTimeSpan</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a93074a6114ae9dfa76961b4054134e51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bd862b32c38d23dfb60c0cc18512e41" id="r_a6bd862b32c38d23dfb60c0cc18512e41"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6bd862b32c38d23dfb60c0cc18512e41">PrintTimeSpan</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a6bd862b32c38d23dfb60c0cc18512e41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a352bf559e86c6ca04e6d00aa820e4b05" id="r_a352bf559e86c6ca04e6d00aa820e4b05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a352bf559e86c6ca04e6d00aa820e4b05">PrintDateTime</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a352bf559e86c6ca04e6d00aa820e4b05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4898058a162c3d504c37ed491ae89c28" id="r_a4898058a162c3d504c37ed491ae89c28"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4898058a162c3d504c37ed491ae89c28">PrintDateTime</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:a4898058a162c3d504c37ed491ae89c28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4197414f43b992da90835772a6cfd65c" id="r_a4197414f43b992da90835772a6cfd65c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4197414f43b992da90835772a6cfd65c">PrintCurrency</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a4197414f43b992da90835772a6cfd65c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6eb1941015b6b63b6edadb894832dc9" id="r_ab6eb1941015b6b63b6edadb894832dc9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6eb1941015b6b63b6edadb894832dc9">PrintCurrency</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:ab6eb1941015b6b63b6edadb894832dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d05404d8a0bc496f473784d4335938c" id="r_a0d05404d8a0bc496f473784d4335938c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d05404d8a0bc496f473784d4335938c">PrintGuid</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a0d05404d8a0bc496f473784d4335938c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac3871e2b22bbecf7106742a1da41b40" id="r_aac3871e2b22bbecf7106742a1da41b40"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac3871e2b22bbecf7106742a1da41b40">PrintGuid</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale)</td></tr>
<tr class="separator:aac3871e2b22bbecf7106742a1da41b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee4a6aa2709d473181544a23b6b0e6a6" id="r_aee4a6aa2709d473181544a23b6b0e6a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee4a6aa2709d473181544a23b6b0e6a6">PrintFixedSizeBasicArrayType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aee4a6aa2709d473181544a23b6b0e6a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12ea8ccac7299407150716160bedac4" id="r_aa12ea8ccac7299407150716160bedac4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa12ea8ccac7299407150716160bedac4">PrintBasicArrayType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aa12ea8ccac7299407150716160bedac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a747ad36e54450643c2c9819526360609" id="r_a747ad36e54450643c2c9819526360609"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a747ad36e54450643c2c9819526360609">PrintBasicArrayType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_types.xhtml#ad7050d48722d01c073c0b3fcdd66613d">Types::BasicTypeId</a> basicTypeId, size_t arraySize, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a747ad36e54450643c2c9819526360609"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c2d7b304f2010389d105ae599266c6b" id="r_a9c2d7b304f2010389d105ae599266c6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c2d7b304f2010389d105ae599266c6b">PrintFixedSizeArrayType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a9c2d7b304f2010389d105ae599266c6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a511406016f091d38aee0aa697c1c48" id="r_a1a511406016f091d38aee0aa697c1c48"><td class="memTemplParams" colspan="2">template&lt;typename CharT2 &gt; </td></tr>
<tr class="memitem:a1a511406016f091d38aee0aa697c1c48"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a1a511406016f091d38aee0aa697c1c48">PrintString</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, size_t size, const std::locale &amp;locale, const std::basic_string_view&lt; <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> &gt; fmt)</td></tr>
<tr class="separator:a1a511406016f091d38aee0aa697c1c48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2083345c7ab647a4df5c74fe49acf254" id="r_a2083345c7ab647a4df5c74fe49acf254"><td class="memTemplParams" colspan="2">template&lt;typename CharT2 &gt; </td></tr>
<tr class="memitem:a2083345c7ab647a4df5c74fe49acf254"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a2083345c7ab647a4df5c74fe49acf254">PrintString</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, size_t size, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a2083345c7ab647a4df5c74fe49acf254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6fbf85027e4e1966e74a59c9721f591" id="r_ad6fbf85027e4e1966e74a59c9721f591"><td class="memTemplParams" colspan="2">template&lt;typename ValueT &gt; </td></tr>
<tr class="memitem:ad6fbf85027e4e1966e74a59c9721f591"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ad6fbf85027e4e1966e74a59c9721f591">PrintBasicValues</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, size_t size, const std::locale &amp;locale, const std::basic_string_view&lt; <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> &gt; fmt)</td></tr>
<tr class="separator:ad6fbf85027e4e1966e74a59c9721f591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee571c628f738256a9e102c1b5ecf64" id="r_aeee571c628f738256a9e102c1b5ecf64"><td class="memTemplParams" colspan="2">template&lt;typename ValueT &gt; </td></tr>
<tr class="memitem:aeee571c628f738256a9e102c1b5ecf64"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aeee571c628f738256a9e102c1b5ecf64">PrintBasicValues</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, size_t size, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:aeee571c628f738256a9e102c1b5ecf64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a586c6a8aca628f9b061a3c3c81b6e096" id="r_a586c6a8aca628f9b061a3c3c81b6e096"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a586c6a8aca628f9b061a3c3c81b6e096">PrintArrayType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a586c6a8aca628f9b061a3c3c81b6e096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af23a0a6384397da2c606901f911aa9fa" id="r_af23a0a6384397da2c606901f911aa9fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af23a0a6384397da2c606901f911aa9fa">PrintTupleType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:af23a0a6384397da2c606901f911aa9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74a9f0aeb82247ab2d8bf60418137477" id="r_a74a9f0aeb82247ab2d8bf60418137477"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a74a9f0aeb82247ab2d8bf60418137477">PrintKnownUtilityType</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;cursor, const std::locale &amp;locale, const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;section)</td></tr>
<tr class="separator:a74a9f0aeb82247ab2d8bf60418137477"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a0b78ea2ff5987cac07ae925284fe434d" id="r_a0b78ea2ff5987cac07ae925284fe434d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b78ea2ff5987cac07ae925284fe434d">stream_</a></td></tr>
<tr class="separator:a0b78ea2ff5987cac07ae925284fe434d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb3f03896e39af9db8483cb7c131bcd1" id="r_abb3f03896e39af9db8483cb7c131bcd1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb3f03896e39af9db8483cb7c131bcd1">typeDescriptor_</a></td></tr>
<tr class="separator:abb3f03896e39af9db8483cb7c131bcd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b73dc0a9491583b327d91d33002b9ba" id="r_a7b73dc0a9491583b327d91d33002b9ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a2128733052970100d537869c93a41545">FormatStringParser</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b73dc0a9491583b327d91d33002b9ba">formatStringParser_</a></td></tr>
<tr class="separator:a7b73dc0a9491583b327d91d33002b9ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9afc91a89aa56e51df77c728d9a836b" id="r_ae9afc91a89aa56e51df77c728d9a836b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae9afc91a89aa56e51df77c728d9a836b">argumentCount_</a> = 0</td></tr>
<tr class="separator:ae9afc91a89aa56e51df77c728d9a836b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cb4ae5bb48445cf522a9ed6cf42a2d9" id="r_a4cb4ae5bb48445cf522a9ed6cf42a2d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4cb4ae5bb48445cf522a9ed6cf42a2d9">argumentsStream_</a></td></tr>
<tr class="separator:a4cb4ae5bb48445cf522a9ed6cf42a2d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae469f79c4e1b97d7bf8bc4ebfef83620" id="r_ae469f79c4e1b97d7bf8bc4ebfef83620"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">IO::BinaryReader</a>&lt; <a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae469f79c4e1b97d7bf8bc4ebfef83620">argumentReader_</a></td></tr>
<tr class="separator:ae469f79c4e1b97d7bf8bc4ebfef83620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9772803fbdd3fd9f633c44f16a71a0ae" id="r_a9772803fbdd3fd9f633c44f16a71a0ae"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9772803fbdd3fd9f633c44f16a71a0ae">argumentIndex_</a> = 0</td></tr>
<tr class="separator:a9772803fbdd3fd9f633c44f16a71a0ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae470c711f95168db9ad10ddcaa5343" id="r_a9ae470c711f95168db9ad10ddcaa5343"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ae470c711f95168db9ad10ddcaa5343">sectionIndex_</a> = 0</td></tr>
<tr class="separator:a9ae470c711f95168db9ad10ddcaa5343"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename CharT, IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt;<br />
class Harlinn::Common::Core::Persistent::Printer&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;</div><p>Uses a format string, a type descriptor generated by Persistent::Describe and serialized data written by <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_persistent.xhtml#aee6f7ac7cc063a5f9e3ba10b639af68c">Persistent::Write</a> to generate a formatted text representation of the serialized data. </p>
<p>The destination character type</p>
<p>The arguments stream type</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">ArgumentsStreamT</td><td>The destination stream type</td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a83f513a685ebdfca5a385205bb441f74" name="a83f513a685ebdfca5a385205bb441f74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83f513a685ebdfca5a385205bb441f74">&#9670;&#160;</a></span>ArgumentsStreamType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::ArgumentsStreamType = ArgumentsStreamT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afadfd4c22295c1e049324644f11764f3" name="afadfd4c22295c1e049324644f11764f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afadfd4c22295c1e049324644f11764f3">&#9670;&#160;</a></span>CharType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::CharType = CharT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1998d4e994308bc9ac7099ea6c97b513" name="a1998d4e994308bc9ac7099ea6c97b513"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1998d4e994308bc9ac7099ea6c97b513">&#9670;&#160;</a></span>DestinationStreamType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::DestinationStreamType = DestinationStreamT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2128733052970100d537869c93a41545" name="a2128733052970100d537869c93a41545"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2128733052970100d537869c93a41545">&#9670;&#160;</a></span>FormatStringParser</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::FormatStringParser = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_formatting_1_1_format_string_parser.xhtml">Formatting::FormatStringParser</a>&lt;<a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af4a98424e91681cc166dc514dfa10da1" name="af4a98424e91681cc166dc514dfa10da1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4a98424e91681cc166dc514dfa10da1">&#9670;&#160;</a></span>FormatStringSectionType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::FormatStringSectionType = <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_formatting.xhtml#a5dba93c4e396b3410d14a6fe780fe273">Formatting::FormatStringSectionType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afd76f735bf1a99fd8bbc6edc398c5dea" name="afd76f735bf1a99fd8bbc6edc398c5dea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd76f735bf1a99fd8bbc6edc398c5dea">&#9670;&#160;</a></span>FormatStringView</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::FormatStringView = typename <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_formatting_1_1_format_string_parser.xhtml#a8dd6c21a31069e9cd7a982fe20b16659">FormatStringParser::StringViewType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a778d215f89a87a8ba42ce957cdc8b6a2" name="a778d215f89a87a8ba42ce957cdc8b6a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a778d215f89a87a8ba42ce957cdc8b6a2">&#9670;&#160;</a></span>Section</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Section = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_formatting_1_1_format_string_section.xhtml">Formatting::FormatStringSection</a>&lt;<a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aef7ec720cc1e52bb03492e6f4e5f1e07" name="aef7ec720cc1e52bb03492e6f4e5f1e07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef7ec720cc1e52bb03492e6f4e5f1e07">&#9670;&#160;</a></span>StringType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::StringType = std::basic_string&lt;<a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4fec598ac80d1d91195eaeaed74bd4b1" name="a4fec598ac80d1d91195eaeaed74bd4b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fec598ac80d1d91195eaeaed74bd4b1">&#9670;&#160;</a></span>Printer() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Printer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> *</td>          <td class="paramname"><span class="paramname"><em>formatString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>formatStringLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>argumentDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentsStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="affc1ae3eb67eb1f7805618b20757f977" name="affc1ae3eb67eb1f7805618b20757f977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affc1ae3eb67eb1f7805618b20757f977">&#9670;&#160;</a></span>Printer() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Printer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#afd76f735bf1a99fd8bbc6edc398c5dea">FormatStringView</a></td>          <td class="paramname"><span class="paramname"><em>formatString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>argumentDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentsStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5858c70d6acb45a28fc4573540b5fcb8" name="a5858c70d6acb45a28fc4573540b5fcb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5858c70d6acb45a28fc4573540b5fcb8">&#9670;&#160;</a></span>Printer() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Printer </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>formatString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a> *</td>          <td class="paramname"><span class="paramname"><em>argumentDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentsStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f640fc3a4fd170209368da457647927" name="a9f640fc3a4fd170209368da457647927"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f640fc3a4fd170209368da457647927">&#9670;&#160;</a></span>Printer() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Printer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> *</td>          <td class="paramname"><span class="paramname"><em>formatString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>formatStringLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; Types... &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentsStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a478a6df5cf0e649326b0af9663a4a5e7" name="a478a6df5cf0e649326b0af9663a4a5e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a478a6df5cf0e649326b0af9663a4a5e7">&#9670;&#160;</a></span>Printer() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Printer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#afd76f735bf1a99fd8bbc6edc398c5dea">FormatStringView</a></td>          <td class="paramname"><span class="paramname"><em>formatString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; Types... &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentsStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a020ae5924fbaa778e0b362691cd7e55b" name="a020ae5924fbaa778e0b362691cd7e55b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a020ae5924fbaa778e0b362691cd7e55b">&#9670;&#160;</a></span>Printer() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;SimpleStringLike StringT, typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Printer </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>formatString</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; Types... &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentDescriptor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>argumentsStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3c7d7bfda83a24890a94714cc269a8f5" name="a3c7d7bfda83a24890a94714cc269a8f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c7d7bfda83a24890a94714cc269a8f5">&#9670;&#160;</a></span>Print() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Print </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad567b4af336b713b70cbcbd748b6c3c6" name="ad567b4af336b713b70cbcbd748b6c3c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad567b4af336b713b70cbcbd748b6c3c6">&#9670;&#160;</a></span>Print() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Print </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a586c6a8aca628f9b061a3c3c81b6e096" name="a586c6a8aca628f9b061a3c3c81b6e096"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a586c6a8aca628f9b061a3c3c81b6e096">&#9670;&#160;</a></span>PrintArrayType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintArrayType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa12ea8ccac7299407150716160bedac4" name="aa12ea8ccac7299407150716160bedac4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa12ea8ccac7299407150716160bedac4">&#9670;&#160;</a></span>PrintBasicArrayType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBasicArrayType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a747ad36e54450643c2c9819526360609" name="a747ad36e54450643c2c9819526360609"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a747ad36e54450643c2c9819526360609">&#9670;&#160;</a></span>PrintBasicArrayType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBasicArrayType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_types.xhtml#ad7050d48722d01c073c0b3fcdd66613d">Types::BasicTypeId</a></td>          <td class="paramname"><span class="paramname"><em>basicTypeId</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>arraySize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a78ba218ebd31b9df8e361f6aebfd8bd8" name="a78ba218ebd31b9df8e361f6aebfd8bd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78ba218ebd31b9df8e361f6aebfd8bd8">&#9670;&#160;</a></span>PrintBasicType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBasicType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...</td>          <td class="paramname"><span class="paramname"><em>args</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeee571c628f738256a9e102c1b5ecf64" name="aeee571c628f738256a9e102c1b5ecf64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeee571c628f738256a9e102c1b5ecf64">&#9670;&#160;</a></span>PrintBasicValues() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ValueT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBasicValues </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad6fbf85027e4e1966e74a59c9721f591" name="ad6fbf85027e4e1966e74a59c9721f591"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6fbf85027e4e1966e74a59c9721f591">&#9670;&#160;</a></span>PrintBasicValues() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ValueT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBasicValues </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::basic_string_view&lt; <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>fmt</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a396082ac0fb422ec9e5d840054755bb9" name="a396082ac0fb422ec9e5d840054755bb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a396082ac0fb422ec9e5d840054755bb9">&#9670;&#160;</a></span>PrintBoolean() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBoolean </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa9b8c50e946f98b7014560fb20519dd" name="aaa9b8c50e946f98b7014560fb20519dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa9b8c50e946f98b7014560fb20519dd">&#9670;&#160;</a></span>PrintBoolean() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintBoolean </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af3c78ca4b71a18ddcac2a6dd659b9d6a" name="af3c78ca4b71a18ddcac2a6dd659b9d6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3c78ca4b71a18ddcac2a6dd659b9d6a">&#9670;&#160;</a></span>PrintByte() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0bf6a04f46c9810a968015097606a6c5" name="a0bf6a04f46c9810a968015097606a6c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bf6a04f46c9810a968015097606a6c5">&#9670;&#160;</a></span>PrintByte() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a89116520941a664df1d969c22c5d1ea9" name="a89116520941a664df1d969c22c5d1ea9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89116520941a664df1d969c22c5d1ea9">&#9670;&#160;</a></span>PrintChar() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aab00aa723abb6887a4a34b9f845e6132" name="aab00aa723abb6887a4a34b9f845e6132"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab00aa723abb6887a4a34b9f845e6132">&#9670;&#160;</a></span>PrintChar() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab6eb1941015b6b63b6edadb894832dc9" name="ab6eb1941015b6b63b6edadb894832dc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6eb1941015b6b63b6edadb894832dc9">&#9670;&#160;</a></span>PrintCurrency() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintCurrency </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4197414f43b992da90835772a6cfd65c" name="a4197414f43b992da90835772a6cfd65c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4197414f43b992da90835772a6cfd65c">&#9670;&#160;</a></span>PrintCurrency() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintCurrency </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4898058a162c3d504c37ed491ae89c28" name="a4898058a162c3d504c37ed491ae89c28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4898058a162c3d504c37ed491ae89c28">&#9670;&#160;</a></span>PrintDateTime() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintDateTime </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a352bf559e86c6ca04e6d00aa820e4b05" name="a352bf559e86c6ca04e6d00aa820e4b05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a352bf559e86c6ca04e6d00aa820e4b05">&#9670;&#160;</a></span>PrintDateTime() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintDateTime </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a088ab745c4791e3e1c255f4dc91f0080" name="a088ab745c4791e3e1c255f4dc91f0080"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a088ab745c4791e3e1c255f4dc91f0080">&#9670;&#160;</a></span>PrintDouble() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintDouble </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a29838f9e759c4bf7d17cf61e118947cb" name="a29838f9e759c4bf7d17cf61e118947cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29838f9e759c4bf7d17cf61e118947cb">&#9670;&#160;</a></span>PrintDouble() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintDouble </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c2d7b304f2010389d105ae599266c6b" name="a9c2d7b304f2010389d105ae599266c6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c2d7b304f2010389d105ae599266c6b">&#9670;&#160;</a></span>PrintFixedSizeArrayType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintFixedSizeArrayType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aee4a6aa2709d473181544a23b6b0e6a6" name="aee4a6aa2709d473181544a23b6b0e6a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee4a6aa2709d473181544a23b6b0e6a6">&#9670;&#160;</a></span>PrintFixedSizeBasicArrayType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintFixedSizeBasicArrayType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac3871e2b22bbecf7106742a1da41b40" name="aac3871e2b22bbecf7106742a1da41b40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac3871e2b22bbecf7106742a1da41b40">&#9670;&#160;</a></span>PrintGuid() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintGuid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d05404d8a0bc496f473784d4335938c" name="a0d05404d8a0bc496f473784d4335938c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d05404d8a0bc496f473784d4335938c">&#9670;&#160;</a></span>PrintGuid() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintGuid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a47de21a76168f040cd2ca57075a3c263" name="a47de21a76168f040cd2ca57075a3c263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47de21a76168f040cd2ca57075a3c263">&#9670;&#160;</a></span>PrintInt16() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintInt16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5dddd3f2a0d82a70e365f449fa48a62b" name="a5dddd3f2a0d82a70e365f449fa48a62b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dddd3f2a0d82a70e365f449fa48a62b">&#9670;&#160;</a></span>PrintInt16() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintInt16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a817c70fe9817d1b0d21f73595d321bd5" name="a817c70fe9817d1b0d21f73595d321bd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a817c70fe9817d1b0d21f73595d321bd5">&#9670;&#160;</a></span>PrintInt32() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintInt32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6f7150209b78621ef3335a601be6e1f6" name="a6f7150209b78621ef3335a601be6e1f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f7150209b78621ef3335a601be6e1f6">&#9670;&#160;</a></span>PrintInt32() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintInt32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a40b86b19b7a50ee7a115430b4897a4ce" name="a40b86b19b7a50ee7a115430b4897a4ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40b86b19b7a50ee7a115430b4897a4ce">&#9670;&#160;</a></span>PrintInt64() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintInt64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeb25edad88f95b1b5e45688973442805" name="aeb25edad88f95b1b5e45688973442805"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb25edad88f95b1b5e45688973442805">&#9670;&#160;</a></span>PrintInt64() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintInt64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74a9f0aeb82247ab2d8bf60418137477" name="a74a9f0aeb82247ab2d8bf60418137477"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74a9f0aeb82247ab2d8bf60418137477">&#9670;&#160;</a></span>PrintKnownUtilityType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintKnownUtilityType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a25427a24c764698252e8b59bbd9cb647" name="a25427a24c764698252e8b59bbd9cb647"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25427a24c764698252e8b59bbd9cb647">&#9670;&#160;</a></span>PrintSByte() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintSByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2201f202cbeaebd73bd9518d97c1ff49" name="a2201f202cbeaebd73bd9518d97c1ff49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2201f202cbeaebd73bd9518d97c1ff49">&#9670;&#160;</a></span>PrintSByte() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintSByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad4b3e030fcea4f0dae26d4b9a6bb2e4f" name="ad4b3e030fcea4f0dae26d4b9a6bb2e4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4b3e030fcea4f0dae26d4b9a6bb2e4f">&#9670;&#160;</a></span>PrintSection()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintSection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a08099f7604e825c013cf79e659f65462" name="a08099f7604e825c013cf79e659f65462"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08099f7604e825c013cf79e659f65462">&#9670;&#160;</a></span>PrintSingle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintSingle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d9c7459936c9fa389905c5b18e69158" name="a3d9c7459936c9fa389905c5b18e69158"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d9c7459936c9fa389905c5b18e69158">&#9670;&#160;</a></span>PrintSingle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintSingle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a860d1e2d7c5f78cb3db348c1134ca326" name="a860d1e2d7c5f78cb3db348c1134ca326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a860d1e2d7c5f78cb3db348c1134ca326">&#9670;&#160;</a></span>PrintSpecificationSection()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintSpecificationSection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2083345c7ab647a4df5c74fe49acf254" name="a2083345c7ab647a4df5c74fe49acf254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2083345c7ab647a4df5c74fe49acf254">&#9670;&#160;</a></span>PrintString() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename CharT2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1a511406016f091d38aee0aa697c1c48" name="a1a511406016f091d38aee0aa697c1c48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a511406016f091d38aee0aa697c1c48">&#9670;&#160;</a></span>PrintString() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename CharT2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::basic_string_view&lt; <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>fmt</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a52a6798b6570d15d988c8409a23fe6c4" name="a52a6798b6570d15d988c8409a23fe6c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52a6798b6570d15d988c8409a23fe6c4">&#9670;&#160;</a></span>PrintTextSection()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintTextSection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6bd862b32c38d23dfb60c0cc18512e41" name="a6bd862b32c38d23dfb60c0cc18512e41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bd862b32c38d23dfb60c0cc18512e41">&#9670;&#160;</a></span>PrintTimeSpan() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintTimeSpan </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a93074a6114ae9dfa76961b4054134e51" name="a93074a6114ae9dfa76961b4054134e51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93074a6114ae9dfa76961b4054134e51">&#9670;&#160;</a></span>PrintTimeSpan() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintTimeSpan </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af23a0a6384397da2c606901f911aa9fa" name="af23a0a6384397da2c606901f911aa9fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af23a0a6384397da2c606901f911aa9fa">&#9670;&#160;</a></span>PrintTupleType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintTupleType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adf15cc9bfd137fb8b3eb0b569ba01c5e" name="adf15cc9bfd137fb8b3eb0b569ba01c5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf15cc9bfd137fb8b3eb0b569ba01c5e">&#9670;&#160;</a></span>PrintUInt16() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintUInt16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca37083baa2be3e71b67328300dd1e1a" name="aca37083baa2be3e71b67328300dd1e1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca37083baa2be3e71b67328300dd1e1a">&#9670;&#160;</a></span>PrintUInt16() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintUInt16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6a781a1b8c77b704dacc4026492d8a38" name="a6a781a1b8c77b704dacc4026492d8a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a781a1b8c77b704dacc4026492d8a38">&#9670;&#160;</a></span>PrintUInt32() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintUInt32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a77e51ab9ae06061eb689503f40f8ee33" name="a77e51ab9ae06061eb689503f40f8ee33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77e51ab9ae06061eb689503f40f8ee33">&#9670;&#160;</a></span>PrintUInt32() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintUInt32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abb7fdaececbf2aaf9023b6c5662d8b28" name="abb7fdaececbf2aaf9023b6c5662d8b28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb7fdaececbf2aaf9023b6c5662d8b28">&#9670;&#160;</a></span>PrintUInt64() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintUInt64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad23f5998b2073a1d6c2066edf8fc4803" name="ad23f5998b2073a1d6c2066edf8fc4803"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad23f5998b2073a1d6c2066edf8fc4803">&#9670;&#160;</a></span>PrintUInt64() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintUInt64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a212d6dbbe0c45d369b4913811d7e0e57" name="a212d6dbbe0c45d369b4913811d7e0e57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a212d6dbbe0c45d369b4913811d7e0e57">&#9670;&#160;</a></span>PrintValue() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ArgT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aff11ba7f8e1020db9e7c01f5f415f3de" name="aff11ba7f8e1020db9e7c01f5f415f3de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff11ba7f8e1020db9e7c01f5f415f3de">&#9670;&#160;</a></span>PrintValue() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ArgT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a16931e3170c617eeb81b801190a81e75" name="a16931e3170c617eeb81b801190a81e75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16931e3170c617eeb81b801190a81e75">&#9670;&#160;</a></span>PrintValue() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<div class="memtemplate">
template&lt;typename ArgT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::basic_string_view&lt; <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>fmt</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1414b9804a1be90fd69b9d8ee3b5d854" name="a1414b9804a1be90fd69b9d8ee3b5d854"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1414b9804a1be90fd69b9d8ee3b5d854">&#9670;&#160;</a></span>PrintWChar() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintWChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a96d7996674622a24f68ca20e6dfe2ad8" name="a96d7996674622a24f68ca20e6dfe2ad8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96d7996674622a24f68ca20e6dfe2ad8">&#9670;&#160;</a></span>PrintWChar() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::PrintWChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cursor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="#a778d215f89a87a8ba42ce957cdc8b6a2">Section</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>section</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf902e3f995be3a0e3c01457e2e47310" name="aaf902e3f995be3a0e3c01457e2e47310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf902e3f995be3a0e3c01457e2e47310">&#9670;&#160;</a></span>Write() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Write </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#afadfd4c22295c1e049324644f11764f3">CharType</a> *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>dataSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa02308a0fe26d5f7909ccb009ed06c43" name="aa02308a0fe26d5f7909ccb009ed06c43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa02308a0fe26d5f7909ccb009ed06c43">&#9670;&#160;</a></span>Write() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::Write </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#aef7ec720cc1e52bb03492e6f4e5f1e07">StringType</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac58e95e4ca5bab89a2a14a29f8183016" name="ac58e95e4ca5bab89a2a14a29f8183016"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac58e95e4ca5bab89a2a14a29f8183016">&#9670;&#160;</a></span>WriteMissingArgument()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::WriteMissingArgument </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae9afc91a89aa56e51df77c728d9a836b" name="ae9afc91a89aa56e51df77c728d9a836b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9afc91a89aa56e51df77c728d9a836b">&#9670;&#160;</a></span>argumentCount_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::argumentCount_ = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9772803fbdd3fd9f633c44f16a71a0ae" name="a9772803fbdd3fd9f633c44f16a71a0ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9772803fbdd3fd9f633c44f16a71a0ae">&#9670;&#160;</a></span>argumentIndex_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::argumentIndex_ = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae469f79c4e1b97d7bf8bc4ebfef83620" name="ae469f79c4e1b97d7bf8bc4ebfef83620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae469f79c4e1b97d7bf8bc4ebfef83620">&#9670;&#160;</a></span>argumentReader_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_binary_reader.xhtml">IO::BinaryReader</a>&lt;<a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a>&gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::argumentReader_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4cb4ae5bb48445cf522a9ed6cf42a2d9" name="a4cb4ae5bb48445cf522a9ed6cf42a2d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cb4ae5bb48445cf522a9ed6cf42a2d9">&#9670;&#160;</a></span>argumentsStream_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a83f513a685ebdfca5a385205bb441f74">ArgumentsStreamType</a>&amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::argumentsStream_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b73dc0a9491583b327d91d33002b9ba" name="a7b73dc0a9491583b327d91d33002b9ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b73dc0a9491583b327d91d33002b9ba">&#9670;&#160;</a></span>formatStringParser_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a2128733052970100d537869c93a41545">FormatStringParser</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::formatStringParser_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ae470c711f95168db9ad10ddcaa5343" name="a9ae470c711f95168db9ad10ddcaa5343"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ae470c711f95168db9ad10ddcaa5343">&#9670;&#160;</a></span>sectionIndex_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::sectionIndex_ = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b78ea2ff5987cac07ae925284fe434d" name="a0b78ea2ff5987cac07ae925284fe434d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b78ea2ff5987cac07ae925284fe434d">&#9670;&#160;</a></span>stream_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a1998d4e994308bc9ac7099ea6c97b513">DestinationStreamType</a>&amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::stream_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abb3f03896e39af9db8483cb7c131bcd1" name="abb3f03896e39af9db8483cb7c131bcd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb3f03896e39af9db8483cb7c131bcd1">&#9670;&#160;</a></span>typeDescriptor_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CharT , IO::StreamReader ArgumentsStreamT, IO::StreamWriter DestinationStreamT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_type_descriptor_cursor.xhtml">TypeDescriptorCursor</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Harlinn::Common::Core::Persistent::Printer</a>&lt; CharT, ArgumentsStreamT, DestinationStreamT &gt;::typeDescriptor_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_persistent_printer_8h.xhtml">HCCPersistentPrinter.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_persistent.xhtml">Persistent</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_persistent_1_1_printer.xhtml">Printer</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
