<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::Graphics::D3D11::D3D11Device Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::Graphics::D3D11::D3D11Device Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HWGraphicsD3D11.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::Graphics::D3D11::D3D11Device:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device__inherit__graph.svg" width="194" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::Graphics::D3D11::D3D11Device:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device__coll__graph.svg" width="194" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a860b3d953c4a0264d59d34033a5d627c" id="r_a860b3d953c4a0264d59d34033a5d627c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a860b3d953c4a0264d59d34033a5d627c">CreateBuffer</a> (const D3D11_BUFFER_DESC *bufferDesc, const D3D11_SUBRESOURCE_DATA *initialData, ID3D11Buffer **buffer) const</td></tr>
<tr class="separator:a860b3d953c4a0264d59d34033a5d627c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b84fdbc536ca06700a44095aa12dc31" id="r_a0b84fdbc536ca06700a44095aa12dc31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b84fdbc536ca06700a44095aa12dc31">CreateTexture1D</a> (const D3D11_TEXTURE1D_DESC *texture1dDesc, const D3D11_SUBRESOURCE_DATA *initialData, ID3D11Texture1D **texture1D) const</td></tr>
<tr class="separator:a0b84fdbc536ca06700a44095aa12dc31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82c910cec65028a5129d2e696dc5ba7f" id="r_a82c910cec65028a5129d2e696dc5ba7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a82c910cec65028a5129d2e696dc5ba7f">CreateTexture2D</a> (const D3D11_TEXTURE2D_DESC *texture2dDesc, const D3D11_SUBRESOURCE_DATA *initialData, ID3D11Texture2D **texture2D) const</td></tr>
<tr class="separator:a82c910cec65028a5129d2e696dc5ba7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eac305c7fa7734344bfe7d0456c3f6c" id="r_a0eac305c7fa7734344bfe7d0456c3f6c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0eac305c7fa7734344bfe7d0456c3f6c">CreateTexture3D</a> (const D3D11_TEXTURE3D_DESC *texture3dDesc, const D3D11_SUBRESOURCE_DATA *initialData, ID3D11Texture3D **texture3D) const</td></tr>
<tr class="separator:a0eac305c7fa7734344bfe7d0456c3f6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac5761d1b9133abb00ab06314942d5eb" id="r_aac5761d1b9133abb00ab06314942d5eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac5761d1b9133abb00ab06314942d5eb">CreateShaderResourceView</a> (ID3D11Resource *resource, const D3D11_SHADER_RESOURCE_VIEW_DESC *shaderResourceViewDesc, ID3D11ShaderResourceView **shaderResourceView) const</td></tr>
<tr class="separator:aac5761d1b9133abb00ab06314942d5eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a709464f77a6365719d6ddc05b05d4692" id="r_a709464f77a6365719d6ddc05b05d4692"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a709464f77a6365719d6ddc05b05d4692">CreateUnorderedAccessView</a> (ID3D11Resource *resource, const D3D11_UNORDERED_ACCESS_VIEW_DESC *unorderedAccessViewDesc, ID3D11UnorderedAccessView **unorderedAccessView) const</td></tr>
<tr class="separator:a709464f77a6365719d6ddc05b05d4692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdfe5c546d4f013281ef0821bf8ba58a" id="r_acdfe5c546d4f013281ef0821bf8ba58a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acdfe5c546d4f013281ef0821bf8ba58a">CreateRenderTargetView</a> (ID3D11Resource *resource, const D3D11_RENDER_TARGET_VIEW_DESC *renderTargetViewDesc, ID3D11RenderTargetView **renderTargetView) const</td></tr>
<tr class="separator:acdfe5c546d4f013281ef0821bf8ba58a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b9f2d905b3f4180673a507bc76a62b9" id="r_a2b9f2d905b3f4180673a507bc76a62b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2b9f2d905b3f4180673a507bc76a62b9">CreateDepthStencilView</a> (ID3D11Resource *resource, const D3D11_DEPTH_STENCIL_VIEW_DESC *depthStencilViewDesc, ID3D11DepthStencilView **depthStencilView) const</td></tr>
<tr class="separator:a2b9f2d905b3f4180673a507bc76a62b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf1bbd332a1c243d700437cc2cfb0ee4" id="r_aaf1bbd332a1c243d700437cc2cfb0ee4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf1bbd332a1c243d700437cc2cfb0ee4">CreateInputLayout</a> (const D3D11_INPUT_ELEMENT_DESC *inputElementDescs, UINT numElements, const void *shaderBytecodeWithInputSignature, SIZE_T bytecodeLength, ID3D11InputLayout **inputLayout) const</td></tr>
<tr class="separator:aaf1bbd332a1c243d700437cc2cfb0ee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb4d634b192edb2204926821e3c23e0a" id="r_afb4d634b192edb2204926821e3c23e0a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afb4d634b192edb2204926821e3c23e0a">CreateVertexShader</a> (const void *shaderBytecode, SIZE_T bytecodeLength, ID3D11ClassLinkage *classLinkage, ID3D11VertexShader **vertexShader) const</td></tr>
<tr class="separator:afb4d634b192edb2204926821e3c23e0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92c230d80cd9d3f7f9cda0ee03df6830" id="r_a92c230d80cd9d3f7f9cda0ee03df6830"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a92c230d80cd9d3f7f9cda0ee03df6830">CreateGeometryShader</a> (const void *shaderBytecode, SIZE_T bytecodeLength, ID3D11ClassLinkage *classLinkage, ID3D11GeometryShader **geometryShader) const</td></tr>
<tr class="separator:a92c230d80cd9d3f7f9cda0ee03df6830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65875995b76e74687ec35d0c6d802115" id="r_a65875995b76e74687ec35d0c6d802115"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a65875995b76e74687ec35d0c6d802115">CreateGeometryShaderWithStreamOutput</a> (const void *shaderBytecode, SIZE_T bytecodeLength, const D3D11_SO_DECLARATION_ENTRY *streamOutputDeclarationEntry, UINT numEntries, const UINT *bufferStrides, UINT numStrides, UINT rasterizedStream, ID3D11ClassLinkage *classLinkage, ID3D11GeometryShader **geometryShader) const</td></tr>
<tr class="separator:a65875995b76e74687ec35d0c6d802115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7601a47ba7c0e2650ff0fce139c4cb1" id="r_ac7601a47ba7c0e2650ff0fce139c4cb1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7601a47ba7c0e2650ff0fce139c4cb1">CreatePixelShader</a> (const void *shaderBytecode, SIZE_T bytecodeLength, ID3D11ClassLinkage *classLinkage, ID3D11PixelShader **pixelShader) const</td></tr>
<tr class="separator:ac7601a47ba7c0e2650ff0fce139c4cb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abffde27b5edfcf05aebe909852a1dbf1" id="r_abffde27b5edfcf05aebe909852a1dbf1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abffde27b5edfcf05aebe909852a1dbf1">CreateHullShader</a> (const void *shaderBytecode, SIZE_T bytecodeLength, ID3D11ClassLinkage *classLinkage, ID3D11HullShader **hullShader) const</td></tr>
<tr class="separator:abffde27b5edfcf05aebe909852a1dbf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ba6eb08d393c5eb6cbe8e2cbe44fb9c" id="r_a6ba6eb08d393c5eb6cbe8e2cbe44fb9c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ba6eb08d393c5eb6cbe8e2cbe44fb9c">CreateDomainShader</a> (const void *shaderBytecode, SIZE_T bytecodeLength, ID3D11ClassLinkage *classLinkage, ID3D11DomainShader **domainShader) const</td></tr>
<tr class="separator:a6ba6eb08d393c5eb6cbe8e2cbe44fb9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1740119b1995ec819615afcb87cc2f18" id="r_a1740119b1995ec819615afcb87cc2f18"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1740119b1995ec819615afcb87cc2f18">CreateComputeShader</a> (const void *shaderBytecode, SIZE_T bytecodeLength, ID3D11ClassLinkage *classLinkage, ID3D11ComputeShader **computeShader) const</td></tr>
<tr class="separator:a1740119b1995ec819615afcb87cc2f18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2cb95af51d34a52963361833d61081" id="r_aee2cb95af51d34a52963361833d61081"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee2cb95af51d34a52963361833d61081">CreateClassLinkage</a> (ID3D11ClassLinkage **classLinkage) const</td></tr>
<tr class="separator:aee2cb95af51d34a52963361833d61081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a415ef06bc25654007722aeb15f18fae8" id="r_a415ef06bc25654007722aeb15f18fae8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a415ef06bc25654007722aeb15f18fae8">CreateBlendState</a> (const D3D11_BLEND_DESC *blendStateDesc, ID3D11BlendState **blendState) const</td></tr>
<tr class="separator:a415ef06bc25654007722aeb15f18fae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0dcdba45c6b393bb2255c6f9987df23" id="r_ae0dcdba45c6b393bb2255c6f9987df23"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae0dcdba45c6b393bb2255c6f9987df23">CreateDepthStencilState</a> (const D3D11_DEPTH_STENCIL_DESC *depthStencilDesc, ID3D11DepthStencilState **depthStencilState) const</td></tr>
<tr class="separator:ae0dcdba45c6b393bb2255c6f9987df23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a042aa6be76972a308a8b30b90f855bbc" id="r_a042aa6be76972a308a8b30b90f855bbc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a042aa6be76972a308a8b30b90f855bbc">CreateRasterizerState</a> (const D3D11_RASTERIZER_DESC *rasterizerDesc, ID3D11RasterizerState **rasterizerState) const</td></tr>
<tr class="separator:a042aa6be76972a308a8b30b90f855bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab123d5d20e8df0898e4454357c0245d8" id="r_ab123d5d20e8df0898e4454357c0245d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab123d5d20e8df0898e4454357c0245d8">CreateSamplerState</a> (const D3D11_SAMPLER_DESC *samplerDesc, ID3D11SamplerState **samplerState) const</td></tr>
<tr class="separator:ab123d5d20e8df0898e4454357c0245d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35f0451c5a8474a76edabb019435b3b5" id="r_a35f0451c5a8474a76edabb019435b3b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35f0451c5a8474a76edabb019435b3b5">CreateQuery</a> (const D3D11_QUERY_DESC *queryDesc, ID3D11Query **query) const</td></tr>
<tr class="separator:a35f0451c5a8474a76edabb019435b3b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9" id="r_ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9">CreatePredicate</a> (const D3D11_QUERY_DESC *predicateDesc, ID3D11Predicate **predicate) const</td></tr>
<tr class="separator:ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8539bef6ddb8f2e7d0e8d1397e251f6d" id="r_a8539bef6ddb8f2e7d0e8d1397e251f6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8539bef6ddb8f2e7d0e8d1397e251f6d">CreateCounter</a> (const D3D11_COUNTER_DESC *counterDesc, ID3D11Counter **counter) const</td></tr>
<tr class="separator:a8539bef6ddb8f2e7d0e8d1397e251f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a877f702da232edf00d3920b39e308eaf" id="r_a877f702da232edf00d3920b39e308eaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a877f702da232edf00d3920b39e308eaf">CreateDeferredContext</a> (UINT contextFlags, ID3D11DeviceContext **deferredContext) const</td></tr>
<tr class="separator:a877f702da232edf00d3920b39e308eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91938954f6fb2e7315d2c79d764ef6d6" id="r_a91938954f6fb2e7315d2c79d764ef6d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91938954f6fb2e7315d2c79d764ef6d6">OpenSharedResource</a> (HANDLE resourceHandle, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;returnedInterface, void **resource) const</td></tr>
<tr class="separator:a91938954f6fb2e7315d2c79d764ef6d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3591157b3f685c29199d9636a0277ace" id="r_a3591157b3f685c29199d9636a0277ace"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3591157b3f685c29199d9636a0277ace">CheckFormatSupport</a> (DXGI_FORMAT format, UINT *formatSupport) const</td></tr>
<tr class="separator:a3591157b3f685c29199d9636a0277ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa044d3616c7c405dfc884728fa94d506" id="r_aa044d3616c7c405dfc884728fa94d506"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa044d3616c7c405dfc884728fa94d506">CheckMultisampleQualityLevels</a> (DXGI_FORMAT format, UINT sampleCount, UINT *numQualityLevels) const</td></tr>
<tr class="separator:aa044d3616c7c405dfc884728fa94d506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab947f4c2eceacfa421ecc3036cd9fb0b" id="r_ab947f4c2eceacfa421ecc3036cd9fb0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab947f4c2eceacfa421ecc3036cd9fb0b">CheckCounterInfo</a> (D3D11_COUNTER_INFO *counterInfo) const</td></tr>
<tr class="separator:ab947f4c2eceacfa421ecc3036cd9fb0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99d9b2daa1f2563cf91494647aee061e" id="r_a99d9b2daa1f2563cf91494647aee061e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a99d9b2daa1f2563cf91494647aee061e">CheckCounter</a> (const D3D11_COUNTER_DESC *counterDesc, D3D11_COUNTER_TYPE *counterType, UINT *activeCounters, LPSTR name, UINT *nameLength, LPSTR units, UINT *unitsLength, LPSTR description, UINT *descriptionLength) const</td></tr>
<tr class="separator:a99d9b2daa1f2563cf91494647aee061e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5ef8bcbbad25ed14c5334f2c41823a7" id="r_af5ef8bcbbad25ed14c5334f2c41823a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af5ef8bcbbad25ed14c5334f2c41823a7">CheckFeatureSupport</a> (D3D11_FEATURE feature, void *featureSupportData, UINT featureSupportDataSize) const</td></tr>
<tr class="separator:af5ef8bcbbad25ed14c5334f2c41823a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaa0b441ecb70fef271e1618025c3772" id="r_adaa0b441ecb70fef271e1618025c3772"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adaa0b441ecb70fef271e1618025c3772">GetPrivateData</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;guid, UINT *dataSize, void *data) const</td></tr>
<tr class="separator:adaa0b441ecb70fef271e1618025c3772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf52baaffa4d5a27703894c84e8e7f28" id="r_acf52baaffa4d5a27703894c84e8e7f28"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf52baaffa4d5a27703894c84e8e7f28">SetPrivateData</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;guid, UINT dataSize, const void *data) const</td></tr>
<tr class="separator:acf52baaffa4d5a27703894c84e8e7f28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f0307baf4d8977b0f0ff25999b1fbc" id="r_a42f0307baf4d8977b0f0ff25999b1fbc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42f0307baf4d8977b0f0ff25999b1fbc">SetPrivateDataInterface</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;guid, const IUnknown *data) const</td></tr>
<tr class="separator:a42f0307baf4d8977b0f0ff25999b1fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a875bb63503599551335d2a71eb14e993" id="r_a875bb63503599551335d2a71eb14e993"><td class="memItemLeft" align="right" valign="top">D3D_FEATURE_LEVEL&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a875bb63503599551335d2a71eb14e993">GetFeatureLevel</a> () const</td></tr>
<tr class="separator:a875bb63503599551335d2a71eb14e993"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a834a8f6c60c9480db13c9961c80be66c" id="r_a834a8f6c60c9480db13c9961c80be66c"><td class="memItemLeft" align="right" valign="top">UINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a834a8f6c60c9480db13c9961c80be66c">GetCreationFlags</a> () const</td></tr>
<tr class="separator:a834a8f6c60c9480db13c9961c80be66c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a968d7441ab1bffbb0c606b29ef465501" id="r_a968d7441ab1bffbb0c606b29ef465501"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a968d7441ab1bffbb0c606b29ef465501">GetDeviceRemovedReason</a> () const</td></tr>
<tr class="separator:a968d7441ab1bffbb0c606b29ef465501"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3db54ae9dbf2fb36c6a76b7f7cc5099e" id="r_a3db54ae9dbf2fb36c6a76b7f7cc5099e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3db54ae9dbf2fb36c6a76b7f7cc5099e">GetImmediateContext</a> (ID3D11DeviceContext **immediateContext) const</td></tr>
<tr class="separator:a3db54ae9dbf2fb36c6a76b7f7cc5099e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7fd92fe3b29f5118b825c0c7bb92217" id="r_ac7fd92fe3b29f5118b825c0c7bb92217"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7fd92fe3b29f5118b825c0c7bb92217">SetExceptionMode</a> (UINT raiseFlags) const</td></tr>
<tr class="separator:ac7fd92fe3b29f5118b825c0c7bb92217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbdca196a37e98ca255430cf2089c977" id="r_adbdca196a37e98ca255430cf2089c977"><td class="memItemLeft" align="right" valign="top">UINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adbdca196a37e98ca255430cf2089c977">GetExceptionMode</a> () const</td></tr>
<tr class="separator:adbdca196a37e98ca255430cf2089c977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a99d9b2daa1f2563cf91494647aee061e" name="a99d9b2daa1f2563cf91494647aee061e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99d9b2daa1f2563cf91494647aee061e">&#9670;&#160;</a></span>CheckCounter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CheckCounter </td>
          <td>(</td>
          <td class="paramtype">const D3D11_COUNTER_DESC *</td>          <td class="paramname"><span class="paramname"><em>counterDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D3D11_COUNTER_TYPE *</td>          <td class="paramname"><span class="paramname"><em>counterType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>activeCounters</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSTR</td>          <td class="paramname"><span class="paramname"><em>name</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>nameLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSTR</td>          <td class="paramname"><span class="paramname"><em>units</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>unitsLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPSTR</td>          <td class="paramname"><span class="paramname"><em>description</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>descriptionLength</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab947f4c2eceacfa421ecc3036cd9fb0b" name="ab947f4c2eceacfa421ecc3036cd9fb0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab947f4c2eceacfa421ecc3036cd9fb0b">&#9670;&#160;</a></span>CheckCounterInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CheckCounterInfo </td>
          <td>(</td>
          <td class="paramtype">D3D11_COUNTER_INFO *</td>          <td class="paramname"><span class="paramname"><em>counterInfo</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af5ef8bcbbad25ed14c5334f2c41823a7" name="af5ef8bcbbad25ed14c5334f2c41823a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5ef8bcbbad25ed14c5334f2c41823a7">&#9670;&#160;</a></span>CheckFeatureSupport()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CheckFeatureSupport </td>
          <td>(</td>
          <td class="paramtype">D3D11_FEATURE</td>          <td class="paramname"><span class="paramname"><em>feature</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>featureSupportData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>featureSupportDataSize</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3591157b3f685c29199d9636a0277ace" name="a3591157b3f685c29199d9636a0277ace"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3591157b3f685c29199d9636a0277ace">&#9670;&#160;</a></span>CheckFormatSupport()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CheckFormatSupport </td>
          <td>(</td>
          <td class="paramtype">DXGI_FORMAT</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>formatSupport</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa044d3616c7c405dfc884728fa94d506" name="aa044d3616c7c405dfc884728fa94d506"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa044d3616c7c405dfc884728fa94d506">&#9670;&#160;</a></span>CheckMultisampleQualityLevels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CheckMultisampleQualityLevels </td>
          <td>(</td>
          <td class="paramtype">DXGI_FORMAT</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>sampleCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>numQualityLevels</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a415ef06bc25654007722aeb15f18fae8" name="a415ef06bc25654007722aeb15f18fae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a415ef06bc25654007722aeb15f18fae8">&#9670;&#160;</a></span>CreateBlendState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateBlendState </td>
          <td>(</td>
          <td class="paramtype">const D3D11_BLEND_DESC *</td>          <td class="paramname"><span class="paramname"><em>blendStateDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11BlendState **</td>          <td class="paramname"><span class="paramname"><em>blendState</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a860b3d953c4a0264d59d34033a5d627c" name="a860b3d953c4a0264d59d34033a5d627c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a860b3d953c4a0264d59d34033a5d627c">&#9670;&#160;</a></span>CreateBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateBuffer </td>
          <td>(</td>
          <td class="paramtype">const D3D11_BUFFER_DESC *</td>          <td class="paramname"><span class="paramname"><em>bufferDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_SUBRESOURCE_DATA *</td>          <td class="paramname"><span class="paramname"><em>initialData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Buffer **</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aee2cb95af51d34a52963361833d61081" name="aee2cb95af51d34a52963361833d61081"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee2cb95af51d34a52963361833d61081">&#9670;&#160;</a></span>CreateClassLinkage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateClassLinkage </td>
          <td>(</td>
          <td class="paramtype">ID3D11ClassLinkage **</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1740119b1995ec819615afcb87cc2f18" name="a1740119b1995ec819615afcb87cc2f18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1740119b1995ec819615afcb87cc2f18">&#9670;&#160;</a></span>CreateComputeShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateComputeShader </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ComputeShader **</td>          <td class="paramname"><span class="paramname"><em>computeShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8539bef6ddb8f2e7d0e8d1397e251f6d" name="a8539bef6ddb8f2e7d0e8d1397e251f6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8539bef6ddb8f2e7d0e8d1397e251f6d">&#9670;&#160;</a></span>CreateCounter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateCounter </td>
          <td>(</td>
          <td class="paramtype">const D3D11_COUNTER_DESC *</td>          <td class="paramname"><span class="paramname"><em>counterDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Counter **</td>          <td class="paramname"><span class="paramname"><em>counter</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a877f702da232edf00d3920b39e308eaf" name="a877f702da232edf00d3920b39e308eaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a877f702da232edf00d3920b39e308eaf">&#9670;&#160;</a></span>CreateDeferredContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateDeferredContext </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>contextFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DeviceContext **</td>          <td class="paramname"><span class="paramname"><em>deferredContext</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae0dcdba45c6b393bb2255c6f9987df23" name="ae0dcdba45c6b393bb2255c6f9987df23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0dcdba45c6b393bb2255c6f9987df23">&#9670;&#160;</a></span>CreateDepthStencilState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateDepthStencilState </td>
          <td>(</td>
          <td class="paramtype">const D3D11_DEPTH_STENCIL_DESC *</td>          <td class="paramname"><span class="paramname"><em>depthStencilDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DepthStencilState **</td>          <td class="paramname"><span class="paramname"><em>depthStencilState</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2b9f2d905b3f4180673a507bc76a62b9" name="a2b9f2d905b3f4180673a507bc76a62b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b9f2d905b3f4180673a507bc76a62b9">&#9670;&#160;</a></span>CreateDepthStencilView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateDepthStencilView </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_DEPTH_STENCIL_VIEW_DESC *</td>          <td class="paramname"><span class="paramname"><em>depthStencilViewDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DepthStencilView **</td>          <td class="paramname"><span class="paramname"><em>depthStencilView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6ba6eb08d393c5eb6cbe8e2cbe44fb9c" name="a6ba6eb08d393c5eb6cbe8e2cbe44fb9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ba6eb08d393c5eb6cbe8e2cbe44fb9c">&#9670;&#160;</a></span>CreateDomainShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateDomainShader </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11DomainShader **</td>          <td class="paramname"><span class="paramname"><em>domainShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a92c230d80cd9d3f7f9cda0ee03df6830" name="a92c230d80cd9d3f7f9cda0ee03df6830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92c230d80cd9d3f7f9cda0ee03df6830">&#9670;&#160;</a></span>CreateGeometryShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateGeometryShader </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11GeometryShader **</td>          <td class="paramname"><span class="paramname"><em>geometryShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a65875995b76e74687ec35d0c6d802115" name="a65875995b76e74687ec35d0c6d802115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65875995b76e74687ec35d0c6d802115">&#9670;&#160;</a></span>CreateGeometryShaderWithStreamOutput()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateGeometryShaderWithStreamOutput </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_SO_DECLARATION_ENTRY *</td>          <td class="paramname"><span class="paramname"><em>streamOutputDeclarationEntry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numEntries</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT *</td>          <td class="paramname"><span class="paramname"><em>bufferStrides</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numStrides</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>rasterizedStream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11GeometryShader **</td>          <td class="paramname"><span class="paramname"><em>geometryShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abffde27b5edfcf05aebe909852a1dbf1" name="abffde27b5edfcf05aebe909852a1dbf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abffde27b5edfcf05aebe909852a1dbf1">&#9670;&#160;</a></span>CreateHullShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateHullShader </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11HullShader **</td>          <td class="paramname"><span class="paramname"><em>hullShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf1bbd332a1c243d700437cc2cfb0ee4" name="aaf1bbd332a1c243d700437cc2cfb0ee4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf1bbd332a1c243d700437cc2cfb0ee4">&#9670;&#160;</a></span>CreateInputLayout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateInputLayout </td>
          <td>(</td>
          <td class="paramtype">const D3D11_INPUT_ELEMENT_DESC *</td>          <td class="paramname"><span class="paramname"><em>inputElementDescs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>numElements</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecodeWithInputSignature</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11InputLayout **</td>          <td class="paramname"><span class="paramname"><em>inputLayout</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7601a47ba7c0e2650ff0fce139c4cb1" name="ac7601a47ba7c0e2650ff0fce139c4cb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7601a47ba7c0e2650ff0fce139c4cb1">&#9670;&#160;</a></span>CreatePixelShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreatePixelShader </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11PixelShader **</td>          <td class="paramname"><span class="paramname"><em>pixelShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9" name="ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2d3acb8a6b8516a5f7a8dd4e7e9f9f9">&#9670;&#160;</a></span>CreatePredicate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreatePredicate </td>
          <td>(</td>
          <td class="paramtype">const D3D11_QUERY_DESC *</td>          <td class="paramname"><span class="paramname"><em>predicateDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Predicate **</td>          <td class="paramname"><span class="paramname"><em>predicate</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a35f0451c5a8474a76edabb019435b3b5" name="a35f0451c5a8474a76edabb019435b3b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35f0451c5a8474a76edabb019435b3b5">&#9670;&#160;</a></span>CreateQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateQuery </td>
          <td>(</td>
          <td class="paramtype">const D3D11_QUERY_DESC *</td>          <td class="paramname"><span class="paramname"><em>queryDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Query **</td>          <td class="paramname"><span class="paramname"><em>query</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a042aa6be76972a308a8b30b90f855bbc" name="a042aa6be76972a308a8b30b90f855bbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a042aa6be76972a308a8b30b90f855bbc">&#9670;&#160;</a></span>CreateRasterizerState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateRasterizerState </td>
          <td>(</td>
          <td class="paramtype">const D3D11_RASTERIZER_DESC *</td>          <td class="paramname"><span class="paramname"><em>rasterizerDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11RasterizerState **</td>          <td class="paramname"><span class="paramname"><em>rasterizerState</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acdfe5c546d4f013281ef0821bf8ba58a" name="acdfe5c546d4f013281ef0821bf8ba58a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdfe5c546d4f013281ef0821bf8ba58a">&#9670;&#160;</a></span>CreateRenderTargetView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateRenderTargetView </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_RENDER_TARGET_VIEW_DESC *</td>          <td class="paramname"><span class="paramname"><em>renderTargetViewDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11RenderTargetView **</td>          <td class="paramname"><span class="paramname"><em>renderTargetView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab123d5d20e8df0898e4454357c0245d8" name="ab123d5d20e8df0898e4454357c0245d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab123d5d20e8df0898e4454357c0245d8">&#9670;&#160;</a></span>CreateSamplerState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateSamplerState </td>
          <td>(</td>
          <td class="paramtype">const D3D11_SAMPLER_DESC *</td>          <td class="paramname"><span class="paramname"><em>samplerDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11SamplerState **</td>          <td class="paramname"><span class="paramname"><em>samplerState</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac5761d1b9133abb00ab06314942d5eb" name="aac5761d1b9133abb00ab06314942d5eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac5761d1b9133abb00ab06314942d5eb">&#9670;&#160;</a></span>CreateShaderResourceView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateShaderResourceView </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_SHADER_RESOURCE_VIEW_DESC *</td>          <td class="paramname"><span class="paramname"><em>shaderResourceViewDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ShaderResourceView **</td>          <td class="paramname"><span class="paramname"><em>shaderResourceView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b84fdbc536ca06700a44095aa12dc31" name="a0b84fdbc536ca06700a44095aa12dc31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b84fdbc536ca06700a44095aa12dc31">&#9670;&#160;</a></span>CreateTexture1D()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateTexture1D </td>
          <td>(</td>
          <td class="paramtype">const D3D11_TEXTURE1D_DESC *</td>          <td class="paramname"><span class="paramname"><em>texture1dDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_SUBRESOURCE_DATA *</td>          <td class="paramname"><span class="paramname"><em>initialData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Texture1D **</td>          <td class="paramname"><span class="paramname"><em>texture1D</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a82c910cec65028a5129d2e696dc5ba7f" name="a82c910cec65028a5129d2e696dc5ba7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82c910cec65028a5129d2e696dc5ba7f">&#9670;&#160;</a></span>CreateTexture2D()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateTexture2D </td>
          <td>(</td>
          <td class="paramtype">const D3D11_TEXTURE2D_DESC *</td>          <td class="paramname"><span class="paramname"><em>texture2dDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_SUBRESOURCE_DATA *</td>          <td class="paramname"><span class="paramname"><em>initialData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Texture2D **</td>          <td class="paramname"><span class="paramname"><em>texture2D</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0eac305c7fa7734344bfe7d0456c3f6c" name="a0eac305c7fa7734344bfe7d0456c3f6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0eac305c7fa7734344bfe7d0456c3f6c">&#9670;&#160;</a></span>CreateTexture3D()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateTexture3D </td>
          <td>(</td>
          <td class="paramtype">const D3D11_TEXTURE3D_DESC *</td>          <td class="paramname"><span class="paramname"><em>texture3dDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_SUBRESOURCE_DATA *</td>          <td class="paramname"><span class="paramname"><em>initialData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11Texture3D **</td>          <td class="paramname"><span class="paramname"><em>texture3D</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a709464f77a6365719d6ddc05b05d4692" name="a709464f77a6365719d6ddc05b05d4692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a709464f77a6365719d6ddc05b05d4692">&#9670;&#160;</a></span>CreateUnorderedAccessView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateUnorderedAccessView </td>
          <td>(</td>
          <td class="paramtype">ID3D11Resource *</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const D3D11_UNORDERED_ACCESS_VIEW_DESC *</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessViewDesc</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11UnorderedAccessView **</td>          <td class="paramname"><span class="paramname"><em>unorderedAccessView</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afb4d634b192edb2204926821e3c23e0a" name="afb4d634b192edb2204926821e3c23e0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb4d634b192edb2204926821e3c23e0a">&#9670;&#160;</a></span>CreateVertexShader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::CreateVertexShader </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>shaderBytecode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SIZE_T</td>          <td class="paramname"><span class="paramname"><em>bytecodeLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11ClassLinkage *</td>          <td class="paramname"><span class="paramname"><em>classLinkage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID3D11VertexShader **</td>          <td class="paramname"><span class="paramname"><em>vertexShader</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a834a8f6c60c9480db13c9961c80be66c" name="a834a8f6c60c9480db13c9961c80be66c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a834a8f6c60c9480db13c9961c80be66c">&#9670;&#160;</a></span>GetCreationFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT Harlinn::Windows::Graphics::D3D11::D3D11Device::GetCreationFlags </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a968d7441ab1bffbb0c606b29ef465501" name="a968d7441ab1bffbb0c606b29ef465501"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a968d7441ab1bffbb0c606b29ef465501">&#9670;&#160;</a></span>GetDeviceRemovedReason()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::GetDeviceRemovedReason </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adbdca196a37e98ca255430cf2089c977" name="adbdca196a37e98ca255430cf2089c977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbdca196a37e98ca255430cf2089c977">&#9670;&#160;</a></span>GetExceptionMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT Harlinn::Windows::Graphics::D3D11::D3D11Device::GetExceptionMode </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a875bb63503599551335d2a71eb14e993" name="a875bb63503599551335d2a71eb14e993"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a875bb63503599551335d2a71eb14e993">&#9670;&#160;</a></span>GetFeatureLevel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">D3D_FEATURE_LEVEL Harlinn::Windows::Graphics::D3D11::D3D11Device::GetFeatureLevel </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3db54ae9dbf2fb36c6a76b7f7cc5099e" name="a3db54ae9dbf2fb36c6a76b7f7cc5099e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3db54ae9dbf2fb36c6a76b7f7cc5099e">&#9670;&#160;</a></span>GetImmediateContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::GetImmediateContext </td>
          <td>(</td>
          <td class="paramtype">ID3D11DeviceContext **</td>          <td class="paramname"><span class="paramname"><em>immediateContext</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adaa0b441ecb70fef271e1618025c3772" name="adaa0b441ecb70fef271e1618025c3772"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adaa0b441ecb70fef271e1618025c3772">&#9670;&#160;</a></span>GetPrivateData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::GetPrivateData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>guid</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT *</td>          <td class="paramname"><span class="paramname"><em>dataSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a91938954f6fb2e7315d2c79d764ef6d6" name="a91938954f6fb2e7315d2c79d764ef6d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91938954f6fb2e7315d2c79d764ef6d6">&#9670;&#160;</a></span>OpenSharedResource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::OpenSharedResource </td>
          <td>(</td>
          <td class="paramtype">HANDLE</td>          <td class="paramname"><span class="paramname"><em>resourceHandle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>returnedInterface</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **</td>          <td class="paramname"><span class="paramname"><em>resource</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7fd92fe3b29f5118b825c0c7bb92217" name="ac7fd92fe3b29f5118b825c0c7bb92217"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7fd92fe3b29f5118b825c0c7bb92217">&#9670;&#160;</a></span>SetExceptionMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::SetExceptionMode </td>
          <td>(</td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>raiseFlags</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acf52baaffa4d5a27703894c84e8e7f28" name="acf52baaffa4d5a27703894c84e8e7f28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf52baaffa4d5a27703894c84e8e7f28">&#9670;&#160;</a></span>SetPrivateData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::SetPrivateData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>guid</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT</td>          <td class="paramname"><span class="paramname"><em>dataSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a42f0307baf4d8977b0f0ff25999b1fbc" name="a42f0307baf4d8977b0f0ff25999b1fbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42f0307baf4d8977b0f0ff25999b1fbc">&#9670;&#160;</a></span>SetPrivateDataInterface()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::D3D11::D3D11Device::SetPrivateDataInterface </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>guid</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IUnknown *</td>          <td class="paramname"><span class="paramname"><em>data</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_graphics_d3_d11_8h.xhtml">HWGraphicsD3D11.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics.xhtml">Graphics</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11.xhtml">D3D11</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d11_1_1_d3_d11_device.xhtml">D3D11Device</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
