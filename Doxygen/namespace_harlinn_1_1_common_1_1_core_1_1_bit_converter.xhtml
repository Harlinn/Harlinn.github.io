<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::BitConverter Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('namespace_harlinn_1_1_common_1_1_core_1_1_bit_converter.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::BitConverter Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a21eb839a23ac76382d2af8b0584e9103" id="r_a21eb839a23ac76382d2af8b0584e9103"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21eb839a23ac76382d2af8b0584e9103">GetBytes</a> (bool value)</td></tr>
<tr class="separator:a21eb839a23ac76382d2af8b0584e9103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd338ff0c0ffa979316b338b79059d7e" id="r_abd338ff0c0ffa979316b338b79059d7e"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abd338ff0c0ffa979316b338b79059d7e">GetBytes</a> (char value)</td></tr>
<tr class="separator:abd338ff0c0ffa979316b338b79059d7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5335af71ec52ac71e945dda4b9b4a347" id="r_a5335af71ec52ac71e945dda4b9b4a347"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5335af71ec52ac71e945dda4b9b4a347">GetBytes</a> (wchar_t value)</td></tr>
<tr class="separator:a5335af71ec52ac71e945dda4b9b4a347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f723248b3d03015a76549f83defd900" id="r_a8f723248b3d03015a76549f83defd900"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8f723248b3d03015a76549f83defd900">GetBytes</a> (short value)</td></tr>
<tr class="separator:a8f723248b3d03015a76549f83defd900"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada8600e53eddd3f2278033fdfd883f7a" id="r_ada8600e53eddd3f2278033fdfd883f7a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ada8600e53eddd3f2278033fdfd883f7a">GetBytes</a> (int value)</td></tr>
<tr class="separator:ada8600e53eddd3f2278033fdfd883f7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a964082b046f8150d10f7f15428b638ea" id="r_a964082b046f8150d10f7f15428b638ea"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a964082b046f8150d10f7f15428b638ea">GetBytes</a> (long long value)</td></tr>
<tr class="separator:a964082b046f8150d10f7f15428b638ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0630053953b92a5677f4fd4c53f8a7a7" id="r_a0630053953b92a5677f4fd4c53f8a7a7"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0630053953b92a5677f4fd4c53f8a7a7">GetBytes</a> (unsigned short value)</td></tr>
<tr class="separator:a0630053953b92a5677f4fd4c53f8a7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d43d65127907767e97706b598f54c97" id="r_a4d43d65127907767e97706b598f54c97"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d43d65127907767e97706b598f54c97">GetBytes</a> (unsigned int value)</td></tr>
<tr class="separator:a4d43d65127907767e97706b598f54c97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5ff97494da262c338f3676ae076a26d" id="r_aa5ff97494da262c338f3676ae076a26d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa5ff97494da262c338f3676ae076a26d">GetBytes</a> (unsigned long long value)</td></tr>
<tr class="separator:aa5ff97494da262c338f3676ae076a26d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7466ad8e915678ad2318897c2d983b0" id="r_ae7466ad8e915678ad2318897c2d983b0"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae7466ad8e915678ad2318897c2d983b0">GetBytes</a> (float value)</td></tr>
<tr class="separator:ae7466ad8e915678ad2318897c2d983b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af55e485c0cf0f455503de4a49e6677f8" id="r_af55e485c0cf0f455503de4a49e6677f8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; byte &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af55e485c0cf0f455503de4a49e6677f8">GetBytes</a> (double value)</td></tr>
<tr class="separator:af55e485c0cf0f455503de4a49e6677f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22265bb171236e4c4783ce01335ed8cc" id="r_a22265bb171236e4c4783ce01335ed8cc"><td class="memItemLeft" align="right" valign="top">wchar_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22265bb171236e4c4783ce01335ed8cc">ToWideChar</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:a22265bb171236e4c4783ce01335ed8cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a912a1ee6e0d974fa0b1923397a0d8f9a" id="r_a912a1ee6e0d974fa0b1923397a0d8f9a"><td class="memItemLeft" align="right" valign="top">short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a912a1ee6e0d974fa0b1923397a0d8f9a">ToInt16</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:a912a1ee6e0d974fa0b1923397a0d8f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7a64fde27f4b657df76d3710835dbe3" id="r_ab7a64fde27f4b657df76d3710835dbe3"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab7a64fde27f4b657df76d3710835dbe3">ToUInt16</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:ab7a64fde27f4b657df76d3710835dbe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1482599579bb5cf2d9d13c6abf64ded2" id="r_a1482599579bb5cf2d9d13c6abf64ded2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1482599579bb5cf2d9d13c6abf64ded2">ToInt32</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:a1482599579bb5cf2d9d13c6abf64ded2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed9c382eebebe9b32cba5a63714fe70b" id="r_aed9c382eebebe9b32cba5a63714fe70b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed9c382eebebe9b32cba5a63714fe70b">ToUInt32</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:aed9c382eebebe9b32cba5a63714fe70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe032b849694d6706b7133ebe82e77cb" id="r_abe032b849694d6706b7133ebe82e77cb"><td class="memItemLeft" align="right" valign="top">long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe032b849694d6706b7133ebe82e77cb">ToInt64</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:abe032b849694d6706b7133ebe82e77cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0aedabd190b55bf4c5b293844074539" id="r_ab0aedabd190b55bf4c5b293844074539"><td class="memItemLeft" align="right" valign="top">unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab0aedabd190b55bf4c5b293844074539">ToUInt64</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:ab0aedabd190b55bf4c5b293844074539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac25bf412e48365e3bdc260c202a20fd2" id="r_ac25bf412e48365e3bdc260c202a20fd2"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac25bf412e48365e3bdc260c202a20fd2">ToSingle</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:ac25bf412e48365e3bdc260c202a20fd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2beaf154171a0e2b8f7862e63b08c8e7" id="r_a2beaf154171a0e2b8f7862e63b08c8e7"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2beaf154171a0e2b8f7862e63b08c8e7">ToDouble</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:a2beaf154171a0e2b8f7862e63b08c8e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f6bf23122943af462c55141397a676" id="r_a77f6bf23122943af462c55141397a676"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_basic_string.xhtml#a266570620aec8b5b6d2c10ace6531e6b">WideString::value_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a77f6bf23122943af462c55141397a676">GetHexValue</a> (int i)</td></tr>
<tr class="separator:a77f6bf23122943af462c55141397a676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6d3c08e5e5575235f037e02e50f6892" id="r_ad6d3c08e5e5575235f037e02e50f6892"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad6d3c08e5e5575235f037e02e50f6892">ToString</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex, size_t length)</td></tr>
<tr class="separator:ad6d3c08e5e5575235f037e02e50f6892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91731e578300dd4e321844d79b8226aa" id="r_a91731e578300dd4e321844d79b8226aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91731e578300dd4e321844d79b8226aa">ToString</a> (const std::vector&lt; byte &gt; &amp;value)</td></tr>
<tr class="separator:a91731e578300dd4e321844d79b8226aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5cf78671425e5a575be034bfb6b19a6" id="r_ac5cf78671425e5a575be034bfb6b19a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac5cf78671425e5a575be034bfb6b19a6">ToString</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:ac5cf78671425e5a575be034bfb6b19a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62ca816cf79fd93164eb0086328e139a" id="r_a62ca816cf79fd93164eb0086328e139a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a62ca816cf79fd93164eb0086328e139a">ToBoolean</a> (const std::vector&lt; byte &gt; &amp;value, size_t startIndex)</td></tr>
<tr class="separator:a62ca816cf79fd93164eb0086328e139a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:abc8f6bdc1f46afb58133bbf082507646" id="r_abc8f6bdc1f46afb58133bbf082507646"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abc8f6bdc1f46afb58133bbf082507646">IsLittleEndian</a> = true</td></tr>
<tr class="separator:abc8f6bdc1f46afb58133bbf082507646"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e77f83e84b83c188ab518c2aed9a66" id="r_a97e77f83e84b83c188ab518c2aed9a66"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97e77f83e84b83c188ab518c2aed9a66">IsBigEndian</a> = false</td></tr>
<tr class="separator:a97e77f83e84b83c188ab518c2aed9a66"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a21eb839a23ac76382d2af8b0584e9103" name="a21eb839a23ac76382d2af8b0584e9103"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21eb839a23ac76382d2af8b0584e9103">&#9670;&#160;</a></span>GetBytes() <span class="overload">[1/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd338ff0c0ffa979316b338b79059d7e" name="abd338ff0c0ffa979316b338b79059d7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd338ff0c0ffa979316b338b79059d7e">&#9670;&#160;</a></span>GetBytes() <span class="overload">[2/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">char</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af55e485c0cf0f455503de4a49e6677f8" name="af55e485c0cf0f455503de4a49e6677f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af55e485c0cf0f455503de4a49e6677f8">&#9670;&#160;</a></span>GetBytes() <span class="overload">[3/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7466ad8e915678ad2318897c2d983b0" name="ae7466ad8e915678ad2318897c2d983b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7466ad8e915678ad2318897c2d983b0">&#9670;&#160;</a></span>GetBytes() <span class="overload">[4/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ada8600e53eddd3f2278033fdfd883f7a" name="ada8600e53eddd3f2278033fdfd883f7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada8600e53eddd3f2278033fdfd883f7a">&#9670;&#160;</a></span>GetBytes() <span class="overload">[5/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a964082b046f8150d10f7f15428b638ea" name="a964082b046f8150d10f7f15428b638ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a964082b046f8150d10f7f15428b638ea">&#9670;&#160;</a></span>GetBytes() <span class="overload">[6/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8f723248b3d03015a76549f83defd900" name="a8f723248b3d03015a76549f83defd900"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f723248b3d03015a76549f83defd900">&#9670;&#160;</a></span>GetBytes() <span class="overload">[7/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">short</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d43d65127907767e97706b598f54c97" name="a4d43d65127907767e97706b598f54c97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d43d65127907767e97706b598f54c97">&#9670;&#160;</a></span>GetBytes() <span class="overload">[8/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">unsigned int</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa5ff97494da262c338f3676ae076a26d" name="aa5ff97494da262c338f3676ae076a26d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5ff97494da262c338f3676ae076a26d">&#9670;&#160;</a></span>GetBytes() <span class="overload">[9/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">unsigned long long</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0630053953b92a5677f4fd4c53f8a7a7" name="a0630053953b92a5677f4fd4c53f8a7a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0630053953b92a5677f4fd4c53f8a7a7">&#9670;&#160;</a></span>GetBytes() <span class="overload">[10/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">unsigned short</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5335af71ec52ac71e945dda4b9b4a347" name="a5335af71ec52ac71e945dda4b9b4a347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5335af71ec52ac71e945dda4b9b4a347">&#9670;&#160;</a></span>GetBytes() <span class="overload">[11/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; byte &gt; Harlinn::Common::Core::BitConverter::GetBytes </td>
          <td>(</td>
          <td class="paramtype">wchar_t</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a77f6bf23122943af462c55141397a676" name="a77f6bf23122943af462c55141397a676"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f6bf23122943af462c55141397a676">&#9670;&#160;</a></span>GetHexValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_basic_string.xhtml#a266570620aec8b5b6d2c10ace6531e6b">WideString::value_type</a> Harlinn::Common::Core::BitConverter::GetHexValue </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>i</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a62ca816cf79fd93164eb0086328e139a" name="a62ca816cf79fd93164eb0086328e139a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62ca816cf79fd93164eb0086328e139a">&#9670;&#160;</a></span>ToBoolean()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::BitConverter::ToBoolean </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2beaf154171a0e2b8f7862e63b08c8e7" name="a2beaf154171a0e2b8f7862e63b08c8e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2beaf154171a0e2b8f7862e63b08c8e7">&#9670;&#160;</a></span>ToDouble()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Common::Core::BitConverter::ToDouble </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a912a1ee6e0d974fa0b1923397a0d8f9a" name="a912a1ee6e0d974fa0b1923397a0d8f9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a912a1ee6e0d974fa0b1923397a0d8f9a">&#9670;&#160;</a></span>ToInt16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">short Harlinn::Common::Core::BitConverter::ToInt16 </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1482599579bb5cf2d9d13c6abf64ded2" name="a1482599579bb5cf2d9d13c6abf64ded2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1482599579bb5cf2d9d13c6abf64ded2">&#9670;&#160;</a></span>ToInt32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::BitConverter::ToInt32 </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abe032b849694d6706b7133ebe82e77cb" name="abe032b849694d6706b7133ebe82e77cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe032b849694d6706b7133ebe82e77cb">&#9670;&#160;</a></span>ToInt64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::BitConverter::ToInt64 </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac25bf412e48365e3bdc260c202a20fd2" name="ac25bf412e48365e3bdc260c202a20fd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac25bf412e48365e3bdc260c202a20fd2">&#9670;&#160;</a></span>ToSingle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float Harlinn::Common::Core::BitConverter::ToSingle </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a91731e578300dd4e321844d79b8226aa" name="a91731e578300dd4e321844d79b8226aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91731e578300dd4e321844d79b8226aa">&#9670;&#160;</a></span>ToString() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::BitConverter::ToString </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5cf78671425e5a575be034bfb6b19a6" name="ac5cf78671425e5a575be034bfb6b19a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5cf78671425e5a575be034bfb6b19a6">&#9670;&#160;</a></span>ToString() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::BitConverter::ToString </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad6d3c08e5e5575235f037e02e50f6892" name="ad6d3c08e5e5575235f037e02e50f6892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6d3c08e5e5575235f037e02e50f6892">&#9670;&#160;</a></span>ToString() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::BitConverter::ToString </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>length</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7a64fde27f4b657df76d3710835dbe3" name="ab7a64fde27f4b657df76d3710835dbe3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7a64fde27f4b657df76d3710835dbe3">&#9670;&#160;</a></span>ToUInt16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short Harlinn::Common::Core::BitConverter::ToUInt16 </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aed9c382eebebe9b32cba5a63714fe70b" name="aed9c382eebebe9b32cba5a63714fe70b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed9c382eebebe9b32cba5a63714fe70b">&#9670;&#160;</a></span>ToUInt32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int Harlinn::Common::Core::BitConverter::ToUInt32 </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab0aedabd190b55bf4c5b293844074539" name="ab0aedabd190b55bf4c5b293844074539"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0aedabd190b55bf4c5b293844074539">&#9670;&#160;</a></span>ToUInt64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long long Harlinn::Common::Core::BitConverter::ToUInt64 </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a22265bb171236e4c4783ce01335ed8cc" name="a22265bb171236e4c4783ce01335ed8cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22265bb171236e4c4783ce01335ed8cc">&#9670;&#160;</a></span>ToWideChar()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wchar_t Harlinn::Common::Core::BitConverter::ToWideChar </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>startIndex</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a97e77f83e84b83c188ab518c2aed9a66" name="a97e77f83e84b83c188ab518c2aed9a66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e77f83e84b83c188ab518c2aed9a66">&#9670;&#160;</a></span>IsBigEndian</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::BitConverter::IsBigEndian = false</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abc8f6bdc1f46afb58133bbf082507646" name="abc8f6bdc1f46afb58133bbf082507646"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc8f6bdc1f46afb58133bbf082507646">&#9670;&#160;</a></span>IsLittleEndian</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::BitConverter::IsLittleEndian = true</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_bit_converter.xhtml">BitConverter</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
