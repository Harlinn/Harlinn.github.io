<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_m_f_transform.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Harlinn::Windows::MFTransform Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#aed3e5681b517808e559c561ef96403c0">AddInputStreams</a>(DWORD cStreams, __RPC__in DWORD *adwStreamIDs) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a>(const CLSID &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a>(const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a>(const WideString &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a>(const ModuleHandle &amp;dll, const CLSID &amp;clsid)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a>(const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a>(const WideString &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a2a731c931bee8bb5a97fb547b3f2682b">DeleteInputStream</a>(DWORD dwStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a>()</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#adb2bbaa5edc35de1f2c118a656f7eda7">GetAttributes</a>(__RPC__deref_out_opt IMFAttributes **pAttributes) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a3da2b8d11a8b97e0c849efecd5d39b7f">GetAttributes</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a3bd1f8aa7eb61a562475ae0415f16653">GetInputAvailableType</a>(DWORD inputStreamID, DWORD typeIndex, __RPC__deref_out_opt IMFMediaType **ppType) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#aee27c4de2f3337598b46ef022f5cd0a0">GetInputAvailableType</a>(DWORD inputStreamID, DWORD typeIndex) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a49a0b59289b06e8bb6ba97c3984fa007">GetInputAvailableTypes</a>(DWORD inputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#ae2dd51eeba263ab08a88535fbd75106c">GetInputCurrentType</a>(DWORD dwInputStreamID, __RPC__deref_out_opt IMFMediaType **ppType) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a94355dc48f5d9429b2cc8b7b624e09d9">GetInputCurrentType</a>(DWORD dwInputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#ae3ed638dd0091efe40e10fbb8c7a3706">GetInputStatus</a>(DWORD dwInputStreamID, __RPC__out DWORD *pdwFlags) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#abaea8edb5808d7d197214535f4b459c5">GetInputStatus</a>(DWORD dwInputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a780736c8f861769277f1b97b473efeda">GetInputStreamAttributes</a>(DWORD dwInputStreamID, __RPC__deref_out_opt IMFAttributes **pAttributes) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a83373ba259bba0fc966dffa378b3433d">GetInputStreamAttributes</a>(DWORD dwInputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#ae8a2b5133ba0a9406dcc4d8617553fd7">GetInputStreamInfo</a>(DWORD dwInputStreamID, __RPC__out MFT_INPUT_STREAM_INFO *pStreamInfo) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a6a81e6b21c7b1eed0f016f4b91e1c1fd">GetInputStreamInfo</a>(DWORD dwInputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a61b1123370ad0a4966c5f85ed4d9f29e">GetOutputAvailableType</a>(DWORD dwOutputStreamID, DWORD dwTypeIndex, __RPC__deref_out_opt IMFMediaType **ppType) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a873ec9d42e62d514fe7ac3e381bc5b83">GetOutputAvailableType</a>(DWORD dwOutputStreamID, DWORD dwTypeIndex) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a58f51623d4a121559708b306146d390f">GetOutputAvailableTypes</a>(DWORD inputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a3c946dda81ce7a464abf20e71d91a9bb">GetOutputCurrentType</a>(DWORD dwOutputStreamID, __RPC__deref_out_opt IMFMediaType **ppType) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a1e8c6d77b0889cf15c14b45899f0dbc8">GetOutputCurrentType</a>(DWORD dwOutputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#ac218e30de43fe3975523b9fc764ca973">GetOutputStatus</a>(__RPC__out DWORD *pdwFlags) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#ab69882d2741ec3eabe0dac4833a3119b">GetOutputStatus</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#ac7155a2c51d69544aeb959fc8e3b1c9b">GetOutputStreamAttributes</a>(DWORD dwOutputStreamID, __RPC__deref_out_opt IMFAttributes **pAttributes) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a2953b1c4eb2df5ec26cf0007d8234a89">GetOutputStreamAttributes</a>(DWORD dwOutputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a64deece66156ad1a10154a319c0d9ce0">GetOutputStreamInfo</a>(DWORD dwOutputStreamID, __RPC__out MFT_OUTPUT_STREAM_INFO *pStreamInfo) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a9c26d0850f07f4ed6f5f5c7c76665b2a">GetOutputStreamInfo</a>(DWORD dwOutputStreamID) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a9954311bcf4584cfdd1841efd3724e41">GetStreamCount</a>(__RPC__out DWORD *pcInputStreams, __RPC__out DWORD *pcOutputStreams) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a0777515a1e8886ee4c0dbe7842d189d0">GetStreamCount</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#aa4df3f3685a6484a21cf38caa07d9d6e">GetStreamIDs</a>(DWORD dwInputIDArraySize, __RPC__out_ecount_full(dwInputIDArraySize) DWORD *pdwInputIDs, DWORD dwOutputIDArraySize, __RPC__out_ecount_full(dwOutputIDArraySize) DWORD *pdwOutputIDs) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a4a58d51c34abb0919cec54f012335da5">GetStreamLimits</a>(__RPC__out DWORD *pdwInputMinimum, __RPC__out DWORD *pdwInputMaximum, __RPC__out DWORD *pdwOutputMinimum, __RPC__out DWORD *pdwOutputMaximum) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a3efc77cce8c36fb11cf28def193d8170">GetStreamLimits</a>() const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a>(const Unknown &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a>(const IUnknown *other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a>(const Unknown &amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a>(Unknown &amp;&amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a>(nullptr_t)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a>(const Unknown &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a>(const IUnknown *other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a3d7366da11d5dbb9b72a9f8b0ea66d46">ProcessEvent</a>(DWORD dwInputStreamID, __RPC__in_opt IMFMediaEvent *pEvent) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#afef3dc4d3614d6c56455cfec61a9c918">ProcessInput</a>(DWORD dwInputStreamID, IMFSample *pSample, DWORD dwFlags) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#aec9febf708642f93d554e9d26021405d">ProcessMessage</a>(MFT_MESSAGE_TYPE eMessage, ULONG_PTR ulParam=0) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a62e5cf43896aaaecbf8b7896540cbcbb">ProcessOutput</a>(DWORD dwFlags, DWORD cOutputBufferCount, MFT_OUTPUT_DATA_BUFFER *pOutputSamples, DWORD *pdwStatus) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a6ef2ba86b23af8f225e38a13544755eb">ProcessOutput</a>(DWORD flags, DWORD outputBufferCount, MF::TransformOutputDataBuffer *outputSamples, DWORD *status) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a0ca596a76ae8b8cbce5c8f9352b18fb8">ProcessOutput</a>(DWORD flags, MF::TransformOutputDataBuffer &amp;outputSamples, DWORD *status) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a>(REFIID riid, void **itf) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a>(T **itf) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a>(IUnknown *other=nullptr, bool addRef=false) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a10b1f35c8eac40b44e3b388d775edff9">SetInputType</a>(DWORD dwInputStreamID, __RPC__in_opt IMFMediaType *pType, DWORD dwFlags=0) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a4fddc0f3fd5188dd0a4eb96be8e91a77">SetOutputBounds</a>(LONGLONG hnsLowerBound, LONGLONG hnsUpperBound) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml#a9376f8ff2c89ce4a2df8fd40e311ef18">SetOutputType</a>(DWORD dwOutputStreamID, __RPC__in_opt IMFMediaType *pType, DWORD dwFlags=0) const</td><td class="entry"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">Harlinn::Windows::MFTransform</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a>(Unknown &amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a>(IUnknown *unknown, bool addref=false) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a>(REFIID iid, const Unknown &amp;unknown, bool throwIfNoInterface=true)</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a>(const Unknown &amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a>(Unknown &amp;&amp;other) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
