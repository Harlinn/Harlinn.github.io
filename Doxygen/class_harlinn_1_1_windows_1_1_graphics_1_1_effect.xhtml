<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::Graphics::Effect Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_graphics_1_1_effect.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_graphics_1_1_effect-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::Graphics::Effect Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Represents a basic image-processing construct in Direct2D.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HWGraphics.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::Graphics::Effect:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_effect__inherit__graph.svg" width="194" height="227"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::Graphics::Effect:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_effect__coll__graph.svg" width="194" height="227"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a30cb3168fb8de30eb2d10e02f797419f" id="r_a30cb3168fb8de30eb2d10e02f797419f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a30cb3168fb8de30eb2d10e02f797419f">Base</a> = <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml">Properties</a></td></tr>
<tr class="separator:a30cb3168fb8de30eb2d10e02f797419f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_windows_1_1_graphics_1_1_properties')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml">Harlinn::Windows::Graphics::Properties</a></td></tr>
<tr class="memitem:a2855746977ac61c35c9d6543f5c25153 inherit pub_types_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a2855746977ac61c35c9d6543f5c25153"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a2855746977ac61c35c9d6543f5c25153">Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a></td></tr>
<tr class="separator:a2855746977ac61c35c9d6543f5c25153 inherit pub_types_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a98822686d5b4674d91afc431e4636ca9" id="r_a98822686d5b4674d91afc431e4636ca9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a98822686d5b4674d91afc431e4636ca9">SetInput</a> (UINT32 index, ID2D1Image *inputImage, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> invalidate=TRUE) const</td></tr>
<tr class="memdesc:a98822686d5b4674d91afc431e4636ca9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the input to the given effect. The input can be a concrete bitmap or the output of another effect.  <br /></td></tr>
<tr class="separator:a98822686d5b4674d91afc431e4636ca9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a625814cce0faf6191427a69060afb0df" id="r_a625814cce0faf6191427a69060afb0df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a625814cce0faf6191427a69060afb0df">SetInput</a> (UINT32 index, const <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_image.xhtml">Image</a> &amp;inputImage, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> invalidate=TRUE) const</td></tr>
<tr class="separator:a625814cce0faf6191427a69060afb0df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff515bbba979f3cbd0fb37a1e539ad3d" id="r_aff515bbba979f3cbd0fb37a1e539ad3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aff515bbba979f3cbd0fb37a1e539ad3d">SetInputCount</a> (UINT32 inputCount) const</td></tr>
<tr class="memdesc:aff515bbba979f3cbd0fb37a1e539ad3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the effect supports a variable number of inputs, this sets the number of inputs that are currently active on the effect.  <br /></td></tr>
<tr class="separator:aff515bbba979f3cbd0fb37a1e539ad3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bcffcd4d147c44e6e784f9ceec4bdfc" id="r_a7bcffcd4d147c44e6e784f9ceec4bdfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7bcffcd4d147c44e6e784f9ceec4bdfc">GetInput</a> (UINT32 index, ID2D1Image **inputImage) const</td></tr>
<tr class="memdesc:a7bcffcd4d147c44e6e784f9ceec4bdfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the input image to the effect. The input could be another effect or a bitmap.  <br /></td></tr>
<tr class="separator:a7bcffcd4d147c44e6e784f9ceec4bdfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae60cbbd8ee07ce7cff2b152bae7281c6" id="r_ae60cbbd8ee07ce7cff2b152bae7281c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_image.xhtml">Image</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae60cbbd8ee07ce7cff2b152bae7281c6">GetInput</a> (UINT32 index) const</td></tr>
<tr class="separator:ae60cbbd8ee07ce7cff2b152bae7281c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b79084ffbfaf82c2a9f7e5abda021d0" id="r_a6b79084ffbfaf82c2a9f7e5abda021d0"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b79084ffbfaf82c2a9f7e5abda021d0">GetInputCount</a> () const</td></tr>
<tr class="memdesc:a6b79084ffbfaf82c2a9f7e5abda021d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the number of input that are bound into this effect.  <br /></td></tr>
<tr class="separator:a6b79084ffbfaf82c2a9f7e5abda021d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a329454d0a00910c581f4fdc6ef84656d" id="r_a329454d0a00910c581f4fdc6ef84656d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a329454d0a00910c581f4fdc6ef84656d">GetOutput</a> (ID2D1Image **outputImage) const</td></tr>
<tr class="memdesc:a329454d0a00910c581f4fdc6ef84656d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the output image of the given effect. This can be set as the input to another effect or can be drawn with DrawImage.  <br /></td></tr>
<tr class="separator:a329454d0a00910c581f4fdc6ef84656d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b0f9bddc0ab738325f21e1a1b32df52" id="r_a4b0f9bddc0ab738325f21e1a1b32df52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_image.xhtml">Image</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4b0f9bddc0ab738325f21e1a1b32df52">GetOutput</a> () const</td></tr>
<tr class="separator:a4b0f9bddc0ab738325f21e1a1b32df52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82b92da0da265e5adeaad97ffca3ab5a" id="r_a82b92da0da265e5adeaad97ffca3ab5a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a82b92da0da265e5adeaad97ffca3ab5a">SetInputEffect</a> (UINT32 index, ID2D1Effect *inputEffect, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> invalidate=TRUE) const</td></tr>
<tr class="separator:a82b92da0da265e5adeaad97ffca3ab5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4a4d2f9b555154cee3f4f9a04832dd" id="r_aec4a4d2f9b555154cee3f4f9a04832dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec4a4d2f9b555154cee3f4f9a04832dd">SetInputEffect</a> (UINT32 index, const <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_effect.xhtml">Effect</a> &amp;inputEffect, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> invalidate=TRUE) const</td></tr>
<tr class="separator:aec4a4d2f9b555154cee3f4f9a04832dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml">Harlinn::Windows::Graphics::Properties</a></td></tr>
<tr class="memitem:a6c6f8d6d5874528ae7a136c355cdbdf4 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a6c6f8d6d5874528ae7a136c355cdbdf4"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a6c6f8d6d5874528ae7a136c355cdbdf4">GetPropertyCount</a> () const</td></tr>
<tr class="memdesc:a6c6f8d6d5874528ae7a136c355cdbdf4 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of top-level properties.  <br /></td></tr>
<tr class="separator:a6c6f8d6d5874528ae7a136c355cdbdf4 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add87483f133280a754baaa303bfd818f inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_add87483f133280a754baaa303bfd818f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#add87483f133280a754baaa303bfd818f">GetPropertyName</a> (UINT32 index, PWSTR nameBuffer, UINT32 nameBufferSize) const</td></tr>
<tr class="memdesc:add87483f133280a754baaa303bfd818f inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the property name that corresponds to the given index.  <br /></td></tr>
<tr class="separator:add87483f133280a754baaa303bfd818f inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75825a2c96a5e9e3a59fcca854d24c6e inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a75825a2c96a5e9e3a59fcca854d24c6e"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a75825a2c96a5e9e3a59fcca854d24c6e">GetPropertyNameLength</a> (UINT32 index) const</td></tr>
<tr class="memdesc:a75825a2c96a5e9e3a59fcca854d24c6e inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of characters for the given property name.  <br /></td></tr>
<tr class="separator:a75825a2c96a5e9e3a59fcca854d24c6e inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09d76ddf81656c1634690f89eb6823d0 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a09d76ddf81656c1634690f89eb6823d0"><td class="memItemLeft" align="right" valign="top">D2D1_PROPERTY_TYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a09d76ddf81656c1634690f89eb6823d0">GetType</a> (UINT32 index) const</td></tr>
<tr class="memdesc:a09d76ddf81656c1634690f89eb6823d0 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the D2D1_PROPERTY_TYPE of the selected property.  <br /></td></tr>
<tr class="separator:a09d76ddf81656c1634690f89eb6823d0 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dc084d1039d703dbcf9d50a89c73b63 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a2dc084d1039d703dbcf9d50a89c73b63"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a2dc084d1039d703dbcf9d50a89c73b63">GetPropertyIndex</a> (PCWSTR propertyName) const</td></tr>
<tr class="memdesc:a2dc084d1039d703dbcf9d50a89c73b63 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the index corresponding to the given property name.  <br /></td></tr>
<tr class="separator:a2dc084d1039d703dbcf9d50a89c73b63 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06b067cd6b9ca490c01a0f04836b4154 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a06b067cd6b9ca490c01a0f04836b4154"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a06b067cd6b9ca490c01a0f04836b4154">SetValueByName</a> (PCWSTR propertyName, D2D1_PROPERTY_TYPE propertyType, const BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="memdesc:a06b067cd6b9ca490c01a0f04836b4154 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the named property to the given value.  <br /></td></tr>
<tr class="separator:a06b067cd6b9ca490c01a0f04836b4154 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a297c5ba60df46ee985e2106625688c97 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a297c5ba60df46ee985e2106625688c97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a297c5ba60df46ee985e2106625688c97">SetValue</a> (UINT32 propertyIndex, D2D1_PROPERTY_TYPE propertyType, const BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="memdesc:a297c5ba60df46ee985e2106625688c97 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the corresponding property by index.  <br /></td></tr>
<tr class="separator:a297c5ba60df46ee985e2106625688c97 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3e382bdb46f213311b36436c7cce1fe inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_ab3e382bdb46f213311b36436c7cce1fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#ab3e382bdb46f213311b36436c7cce1fe">GetValueByName</a> (PCWSTR propertyName, D2D1_PROPERTY_TYPE propertyType, BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="memdesc:ab3e382bdb46f213311b36436c7cce1fe inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the given property or sub-property by name. '.' is the delimiter for sub-properties.  <br /></td></tr>
<tr class="separator:ab3e382bdb46f213311b36436c7cce1fe inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87b38e824fc699692d26459249097750 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a87b38e824fc699692d26459249097750"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a87b38e824fc699692d26459249097750">GetValue</a> (UINT32 index, D2D1_PROPERTY_TYPE propertyType, BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="memdesc:a87b38e824fc699692d26459249097750 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the value of the specified property by index.  <br /></td></tr>
<tr class="separator:a87b38e824fc699692d26459249097750 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeab09389d52c52ee1b566f4407d1007 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_afeab09389d52c52ee1b566f4407d1007"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#afeab09389d52c52ee1b566f4407d1007">GetValueSize</a> (UINT32 index) const</td></tr>
<tr class="memdesc:afeab09389d52c52ee1b566f4407d1007 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the property value in bytes, using the property index.  <br /></td></tr>
<tr class="separator:afeab09389d52c52ee1b566f4407d1007 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae53aaa5c9ccdc07e5e091bffe55ab784 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_ae53aaa5c9ccdc07e5e091bffe55ab784"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#ae53aaa5c9ccdc07e5e091bffe55ab784">GetSubProperties</a> (UINT32 index, ID2D1Properties **subProperties) const</td></tr>
<tr class="memdesc:ae53aaa5c9ccdc07e5e091bffe55ab784 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the sub-properties of the given property by index.  <br /></td></tr>
<tr class="separator:ae53aaa5c9ccdc07e5e091bffe55ab784 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c851353618c17b8ede7787ce7545e3b inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a3c851353618c17b8ede7787ce7545e3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml">Properties</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a3c851353618c17b8ede7787ce7545e3b">GetSubProperties</a> (UINT32 index) const</td></tr>
<tr class="separator:a3c851353618c17b8ede7787ce7545e3b inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaebf7bbb33f58e44f8040d0dc8e13569 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_aaebf7bbb33f58e44f8040d0dc8e13569"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#aaebf7bbb33f58e44f8040d0dc8e13569">SetValueByName</a> (PCWSTR name, const BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="separator:aaebf7bbb33f58e44f8040d0dc8e13569 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3860ecae2e02db52ec03e082d16bd89b inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a3860ecae2e02db52ec03e082d16bd89b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a3860ecae2e02db52ec03e082d16bd89b">SetValue</a> (UINT32 index, const BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="separator:a3860ecae2e02db52ec03e082d16bd89b inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af841775964485f0971a0cc6bafe6fa5c inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_af841775964485f0971a0cc6bafe6fa5c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#af841775964485f0971a0cc6bafe6fa5c">GetValueByName</a> (PCWSTR name, BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="separator:af841775964485f0971a0cc6bafe6fa5c inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65ad50b550f40c7e7aa38dceb0129572 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a65ad50b550f40c7e7aa38dceb0129572"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a65ad50b550f40c7e7aa38dceb0129572">GetValue</a> (UINT32 index, BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="separator:a65ad50b550f40c7e7aa38dceb0129572 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e5e82a403126ddc0ee8ef1d166561cd inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a9e5e82a403126ddc0ee8ef1d166561cd"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </td></tr>
<tr class="memitem:a9e5e82a403126ddc0ee8ef1d166561cd inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a9e5e82a403126ddc0ee8ef1d166561cd">GetValueByName</a> (PCWSTR propertyName, <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> *value) const</td></tr>
<tr class="separator:a9e5e82a403126ddc0ee8ef1d166561cd inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51137055a848fc4fabc9a2b64c5b81d2 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a51137055a848fc4fabc9a2b64c5b81d2"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </td></tr>
<tr class="memitem:a51137055a848fc4fabc9a2b64c5b81d2 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a51137055a848fc4fabc9a2b64c5b81d2">GetValueByName</a> (PCWSTR propertyName) const</td></tr>
<tr class="separator:a51137055a848fc4fabc9a2b64c5b81d2 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa5beccfbbc3c52c48ee8a00889080b6 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_afa5beccfbbc3c52c48ee8a00889080b6"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </td></tr>
<tr class="memitem:afa5beccfbbc3c52c48ee8a00889080b6 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#afa5beccfbbc3c52c48ee8a00889080b6">SetValueByName</a> (PCWSTR propertyName, const <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &amp;value) const</td></tr>
<tr class="separator:afa5beccfbbc3c52c48ee8a00889080b6 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f76415345bb416e4dd28c555260bf11 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a6f76415345bb416e4dd28c555260bf11"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a6f76415345bb416e4dd28c555260bf11 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a6f76415345bb416e4dd28c555260bf11">GetValue</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index, BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="separator:a6f76415345bb416e4dd28c555260bf11 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14529fe65735e9ef53f21deb360f9642 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a14529fe65735e9ef53f21deb360f9642"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> , typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a14529fe65735e9ef53f21deb360f9642 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a14529fe65735e9ef53f21deb360f9642">GetValue</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index, <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> *value) const</td></tr>
<tr class="separator:a14529fe65735e9ef53f21deb360f9642 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18cb92cff781d6e378839b8985bd4148 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a18cb92cff781d6e378839b8985bd4148"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> , typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a18cb92cff781d6e378839b8985bd4148 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a18cb92cff781d6e378839b8985bd4148">GetValue</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index) const</td></tr>
<tr class="separator:a18cb92cff781d6e378839b8985bd4148 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e0227be6eb1031ee8f2dde200e00be3 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a9e0227be6eb1031ee8f2dde200e00be3"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a9e0227be6eb1031ee8f2dde200e00be3 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a9e0227be6eb1031ee8f2dde200e00be3">SetValue</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index, const BYTE *data, UINT32 dataSize) const</td></tr>
<tr class="separator:a9e0227be6eb1031ee8f2dde200e00be3 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66b27c07fa833bc8bb91ba83db09c186 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a66b27c07fa833bc8bb91ba83db09c186"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> , typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a66b27c07fa833bc8bb91ba83db09c186 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a66b27c07fa833bc8bb91ba83db09c186">SetValue</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index, const <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &amp;value) const</td></tr>
<tr class="separator:a66b27c07fa833bc8bb91ba83db09c186 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62b788de7d91a5fd13b72fc201b5eac1 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a62b788de7d91a5fd13b72fc201b5eac1"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a62b788de7d91a5fd13b72fc201b5eac1 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a62b788de7d91a5fd13b72fc201b5eac1">GetPropertyName</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index, PWSTR name, UINT32 nameCount) const</td></tr>
<tr class="separator:a62b788de7d91a5fd13b72fc201b5eac1 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5f0e8fb42ffed479b240878f09d50e inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a1f5f0e8fb42ffed479b240878f09d50e"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a1f5f0e8fb42ffed479b240878f09d50e inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a1f5f0e8fb42ffed479b240878f09d50e">GetPropertyNameLength</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index) const</td></tr>
<tr class="separator:a1f5f0e8fb42ffed479b240878f09d50e inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2238d996c9a0f57c51797c773bdf231d inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a2238d996c9a0f57c51797c773bdf231d"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a2238d996c9a0f57c51797c773bdf231d inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">D2D1_PROPERTY_TYPE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a2238d996c9a0f57c51797c773bdf231d">GetType</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index) const</td></tr>
<tr class="separator:a2238d996c9a0f57c51797c773bdf231d inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd8019ae91a443455eec8fee5db7758 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_a0dd8019ae91a443455eec8fee5db7758"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:a0dd8019ae91a443455eec8fee5db7758 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a0dd8019ae91a443455eec8fee5db7758">GetValueSize</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index) const</td></tr>
<tr class="separator:a0dd8019ae91a443455eec8fee5db7758 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeeb828a2935f4c36374e43a2d20c000 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties" id="r_aaeeb828a2935f4c36374e43a2d20c000"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> &gt; </td></tr>
<tr class="memitem:aaeeb828a2935f4c36374e43a2d20c000 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#aaeeb828a2935f4c36374e43a2d20c000">GetSubProperties</a> (<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcda4c614360da93c0a041b22e537de151eb">U</a> index, ID2D1Properties **subProperties) const</td></tr>
<tr class="separator:aaeeb828a2935f4c36374e43a2d20c000 inherit pub_methods_class_harlinn_1_1_windows_1_1_graphics_1_1_properties"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Represents a basic image-processing construct in Direct2D. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a30cb3168fb8de30eb2d10e02f797419f" name="a30cb3168fb8de30eb2d10e02f797419f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30cb3168fb8de30eb2d10e02f797419f">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a30cb3168fb8de30eb2d10e02f797419f">Harlinn::Windows::Graphics::Effect::Base</a> = <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml">Properties</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae60cbbd8ee07ce7cff2b152bae7281c6" name="ae60cbbd8ee07ce7cff2b152bae7281c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae60cbbd8ee07ce7cff2b152bae7281c6">&#9670;&#160;</a></span>GetInput() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_image.xhtml">Image</a> Harlinn::Windows::Graphics::Effect::GetInput </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7bcffcd4d147c44e6e784f9ceec4bdfc" name="a7bcffcd4d147c44e6e784f9ceec4bdfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bcffcd4d147c44e6e784f9ceec4bdfc">&#9670;&#160;</a></span>GetInput() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::GetInput </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID2D1Image **</td>          <td class="paramname"><span class="paramname"><em>inputImage</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the input image to the effect. The input could be another effect or a bitmap. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the image to retrieve. </td></tr>
    <tr><td class="paramname">inputImage</td><td>When this method returns, contains the address of a pointer to the image that is identified by Index. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6b79084ffbfaf82c2a9f7e5abda021d0" name="a6b79084ffbfaf82c2a9f7e5abda021d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b79084ffbfaf82c2a9f7e5abda021d0">&#9670;&#160;</a></span>GetInputCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT32 Harlinn::Windows::Graphics::Effect::GetInputCount </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the number of input that are bound into this effect. </p>
<dl class="section return"><dt>Returns</dt><dd>This function returns the number of inputs to the effect. </dd></dl>

</div>
</div>
<a id="a4b0f9bddc0ab738325f21e1a1b32df52" name="a4b0f9bddc0ab738325f21e1a1b32df52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b0f9bddc0ab738325f21e1a1b32df52">&#9670;&#160;</a></span>GetOutput() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_image.xhtml">Image</a> Harlinn::Windows::Graphics::Effect::GetOutput </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a329454d0a00910c581f4fdc6ef84656d" name="a329454d0a00910c581f4fdc6ef84656d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a329454d0a00910c581f4fdc6ef84656d">&#9670;&#160;</a></span>GetOutput() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::GetOutput </td>
          <td>(</td>
          <td class="paramtype">ID2D1Image **</td>          <td class="paramname"><span class="paramname"><em>outputImage</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the output image of the given effect. This can be set as the input to another effect or can be drawn with DrawImage. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">outputImage</td><td>When this method returns, contains the address of a pointer to the output image for the effect. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a625814cce0faf6191427a69060afb0df" name="a625814cce0faf6191427a69060afb0df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a625814cce0faf6191427a69060afb0df">&#9670;&#160;</a></span>SetInput() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::SetInput </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_image.xhtml">Image</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inputImage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>invalidate</em></span><span class="paramdefsep"> = </span><span class="paramdefval">TRUE</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a98822686d5b4674d91afc431e4636ca9" name="a98822686d5b4674d91afc431e4636ca9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98822686d5b4674d91afc431e4636ca9">&#9670;&#160;</a></span>SetInput() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::SetInput </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID2D1Image *</td>          <td class="paramname"><span class="paramname"><em>inputImage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>invalidate</em></span><span class="paramdefsep"> = </span><span class="paramdefval">TRUE</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the input to the given effect. The input can be a concrete bitmap or the output of another effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the image to set. </td></tr>
    <tr><td class="paramname">inputImage</td><td>The input image to set. </td></tr>
    <tr><td class="paramname">invalidate</td><td>Whether to invalidate the graph at the location of the effect input </td></tr>
  </table>
  </dd>
</dl>
<p>If the input index is out of range, the input image is ignored. </p>

</div>
</div>
<a id="aff515bbba979f3cbd0fb37a1e539ad3d" name="aff515bbba979f3cbd0fb37a1e539ad3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff515bbba979f3cbd0fb37a1e539ad3d">&#9670;&#160;</a></span>SetInputCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::SetInputCount </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>inputCount</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If the effect supports a variable number of inputs, this sets the number of inputs that are currently active on the effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inputCount</td><td>The number of inputs to the effect. </td></tr>
  </table>
  </dd>
</dl>
<p>Most effects do not support a variable number of inputs. Use <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_properties.xhtml#a87b38e824fc699692d26459249097750" title="Gets the value of the specified property by index.">Properties::GetValue</a> with the D2D1_PROPERTY_MIN_INPUTS and D2D1_PROPERTY_MAX_INPUTS values to determine the number of inputs supported by an effect. </p>
<p>If the input count is less than the minimum or more than the maximum supported inputs, the call will fail and throw a <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_exception.xhtml">Harlinn::Common::Core::Exception</a>. </p>
<p>If the input count is unchanged, the call will succeed. </p>
<p>Any inputs currently selected on the effect will be unaltered by this call unless the number of inputs is made smaller. If the number of inputs is made smaller, inputs beyond the selected range will be released. </p>
<p>If the method fails, the existing input and input count will remain unchanged. </p>

</div>
</div>
<a id="aec4a4d2f9b555154cee3f4f9a04832dd" name="aec4a4d2f9b555154cee3f4f9a04832dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec4a4d2f9b555154cee3f4f9a04832dd">&#9670;&#160;</a></span>SetInputEffect() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::SetInputEffect </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_effect.xhtml">Effect</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inputEffect</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>invalidate</em></span><span class="paramdefsep"> = </span><span class="paramdefval">TRUE</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a82b92da0da265e5adeaad97ffca3ab5a" name="a82b92da0da265e5adeaad97ffca3ab5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82b92da0da265e5adeaad97ffca3ab5a">&#9670;&#160;</a></span>SetInputEffect() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::Graphics::Effect::SetInputEffect </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ID2D1Effect *</td>          <td class="paramname"><span class="paramname"><em>inputEffect</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>invalidate</em></span><span class="paramdefsep"> = </span><span class="paramdefval">TRUE</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the given input effect by index. </p>
<p>This method gets the output of the given effect and then passes the output image to the SetInput method. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the input to set. </td></tr>
    <tr><td class="paramname">inputEffect</td><td>The input effect to set. </td></tr>
    <tr><td class="paramname">invalidate</td><td>Whether to invalidate the graph at the location of the effect input </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_graphics_8h.xhtml">HWGraphics.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics.xhtml">Graphics</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_effect.xhtml">Effect</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
