<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Http::Server::RequestQueueHandler&lt; DerivedT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Http::Server::RequestQueueHandler&lt; DerivedT &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCHTTP.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Http::Server::RequestQueueHandler&lt; DerivedT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler__inherit__graph.svg" width="1112" height="144"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::Http::Server::RequestQueueHandler&lt; DerivedT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler__coll__graph.svg" width="326" height="168"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4d7c87b5b5a27b71d23def24cc842df3" id="r_a4d7c87b5b5a27b71d23def24cc842df3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d7c87b5b5a27b71d23def24cc842df3">Base</a> = IO::ContextHandler</td></tr>
<tr class="separator:a4d7c87b5b5a27b71d23def24cc842df3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7852c72e924c720206f99d1cf4be3c56" id="r_a7852c72e924c720206f99d1cf4be3c56"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7852c72e924c720206f99d1cf4be3c56">DerivedType</a> = DerivedT</td></tr>
<tr class="separator:a7852c72e924c720206f99d1cf4be3c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a77cca64b17214036a30fa1e94d657635" id="r_a77cca64b17214036a30fa1e94d657635"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; const <a class="el" href="#a7852c72e924c720206f99d1cf4be3c56">DerivedType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a77cca64b17214036a30fa1e94d657635">Self</a> () const</td></tr>
<tr class="separator:a77cca64b17214036a30fa1e94d657635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04fb419d2e87357a1075c4697c93e4bb" id="r_a04fb419d2e87357a1075c4697c93e4bb"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="#a7852c72e924c720206f99d1cf4be3c56">DerivedType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a04fb419d2e87357a1075c4697c93e4bb">Self</a> ()</td></tr>
<tr class="separator:a04fb419d2e87357a1075c4697c93e4bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72655c98b8b6a5f9141508007b1530bd" id="r_a72655c98b8b6a5f9141508007b1530bd"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_request_queue.xhtml">Http::RequestQueue</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a72655c98b8b6a5f9141508007b1530bd">RequestQueue</a> () const</td></tr>
<tr class="separator:a72655c98b8b6a5f9141508007b1530bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afecbf65b72d2c8bade57e7131fe30b93" id="r_afecbf65b72d2c8bade57e7131fe30b93"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afecbf65b72d2c8bade57e7131fe30b93">BeginAsyncReceive</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_request.xhtml">ReceiveRequest</a> *request) const</td></tr>
<tr class="separator:afecbf65b72d2c8bade57e7131fe30b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a124f2b6da8e92c6836e61cd60c5ad458" id="r_a124f2b6da8e92c6836e61cd60c5ad458"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a124f2b6da8e92c6836e61cd60c5ad458">BeginAsyncReceiveBody</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_body_request.xhtml">ReceiveBodyRequest</a> *request) const</td></tr>
<tr class="separator:a124f2b6da8e92c6836e61cd60c5ad458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae298e738a3e2788120ae9d5a1d0870c3" id="r_ae298e738a3e2788120ae9d5a1d0870c3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae298e738a3e2788120ae9d5a1d0870c3">BeginAsyncSend</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_request.xhtml">SendRequest</a> *request) const</td></tr>
<tr class="separator:ae298e738a3e2788120ae9d5a1d0870c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8611d3b0acd22ab1cef82e1eef755260" id="r_a8611d3b0acd22ab1cef82e1eef755260"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8611d3b0acd22ab1cef82e1eef755260">BeginAsyncSendBody</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_body_request.xhtml">SendBodyRequest</a> *request) const</td></tr>
<tr class="separator:a8611d3b0acd22ab1cef82e1eef755260"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a661008580ee46cc1c23a747765e05307" id="r_a661008580ee46cc1c23a747765e05307"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a661008580ee46cc1c23a747765e05307">BeginAsyncReceiveClientCertificate</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_client_certificate_request.xhtml">ReceiveClientCertificateRequest</a> *request)</td></tr>
<tr class="separator:a661008580ee46cc1c23a747765e05307"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22b7779509885c67a4a041fe9d6718bc" id="r_a22b7779509885c67a4a041fe9d6718bc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22b7779509885c67a4a041fe9d6718bc">BeginAsyncWaitForDisconnect</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_request.xhtml">WaitForDisconnectRequest</a> *request)</td></tr>
<tr class="separator:a22b7779509885c67a4a041fe9d6718bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ace977d15da2ce297a661def828a3d" id="r_ab8ace977d15da2ce297a661def828a3d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab8ace977d15da2ce297a661def828a3d">BeginAsyncWaitForDisconnectEx</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_ex_request.xhtml">WaitForDisconnectExRequest</a> *request)</td></tr>
<tr class="separator:ab8ace977d15da2ce297a661def828a3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addfcc2348656c14016f6f9f4091a4b46" id="r_addfcc2348656c14016f6f9f4091a4b46"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#addfcc2348656c14016f6f9f4091a4b46">BeginAsyncCancel</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_cancel_request.xhtml">CancelRequest</a> *request)</td></tr>
<tr class="separator:addfcc2348656c14016f6f9f4091a4b46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8036eb01b4a58093f7463d2e0de83ee" id="r_ad8036eb01b4a58093f7463d2e0de83ee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8036eb01b4a58093f7463d2e0de83ee">BeginAsyncWaitForDemandStart</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_demand_start_request.xhtml">WaitForDemandStartRequest</a> *request)</td></tr>
<tr class="separator:ad8036eb01b4a58093f7463d2e0de83ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2f94f4c31aa6ca3a93b3c086b58440c" id="r_ac2f94f4c31aa6ca3a93b3c086b58440c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2f94f4c31aa6ca3a93b3c086b58440c">Process</a> (Message &amp;message) override</td></tr>
<tr class="separator:ac2f94f4c31aa6ca3a93b3c086b58440c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a857acb44e361995d39dc5a8742e458e0" id="r_a857acb44e361995d39dc5a8742e458e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a857acb44e361995d39dc5a8742e458e0">RequestQueueHandler</a> (const std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml">IO::Context</a> &gt; &amp;context, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_request_queue.xhtml">Http::RequestQueue</a> &amp;requestQueue)</td></tr>
<tr class="separator:a857acb44e361995d39dc5a8742e458e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547109948bc5f5fa0d8cb576fe5d03c9" id="r_a547109948bc5f5fa0d8cb576fe5d03c9"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a547109948bc5f5fa0d8cb576fe5d03c9">HandleReceiveCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_request.xhtml">ReceiveRequest</a> *request) const noexcept</td></tr>
<tr class="separator:a547109948bc5f5fa0d8cb576fe5d03c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afab2ac09fc31baa5a5e3fd550af4ff76" id="r_afab2ac09fc31baa5a5e3fd550af4ff76"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afab2ac09fc31baa5a5e3fd550af4ff76">HandleReceiveBodyCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_body_request.xhtml">ReceiveBodyRequest</a> *request) const noexcept</td></tr>
<tr class="separator:afab2ac09fc31baa5a5e3fd550af4ff76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6103d8f81cb54120d34113030b83e81" id="r_ad6103d8f81cb54120d34113030b83e81"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad6103d8f81cb54120d34113030b83e81">HandleSendCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_request.xhtml">SendRequest</a> *request) const noexcept</td></tr>
<tr class="separator:ad6103d8f81cb54120d34113030b83e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a456ba7d564d628f7403adb737108cc26" id="r_a456ba7d564d628f7403adb737108cc26"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a456ba7d564d628f7403adb737108cc26">HandleSendBodyCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_body_request.xhtml">SendBodyRequest</a> *request) const noexcept</td></tr>
<tr class="separator:a456ba7d564d628f7403adb737108cc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da43e56de48667934ac3063096013d7" id="r_a6da43e56de48667934ac3063096013d7"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6da43e56de48667934ac3063096013d7">HandleReceiveClientCertificateCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_client_certificate_request.xhtml">ReceiveClientCertificateRequest</a> *request) const noexcept</td></tr>
<tr class="separator:a6da43e56de48667934ac3063096013d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac794e58172b19304dd90b9cb9fd54966" id="r_ac794e58172b19304dd90b9cb9fd54966"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac794e58172b19304dd90b9cb9fd54966">HandleWaitForDisconnectCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_request.xhtml">WaitForDisconnectRequest</a> *request) const noexcept</td></tr>
<tr class="separator:ac794e58172b19304dd90b9cb9fd54966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7899983848b6e727e7ab282a13d2c4d0" id="r_a7899983848b6e727e7ab282a13d2c4d0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7899983848b6e727e7ab282a13d2c4d0">HandleWaitForDisconnectExCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_ex_request.xhtml">WaitForDisconnectExRequest</a> *request) const noexcept</td></tr>
<tr class="separator:a7899983848b6e727e7ab282a13d2c4d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a247e24172560ab8896af1af03edb90e9" id="r_a247e24172560ab8896af1af03edb90e9"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a247e24172560ab8896af1af03edb90e9">HandleCancelCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_cancel_request.xhtml">CancelRequest</a> *request) const noexcept</td></tr>
<tr class="separator:a247e24172560ab8896af1af03edb90e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b29853f82d242281d4e068bca8160ed" id="r_a1b29853f82d242281d4e068bca8160ed"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1b29853f82d242281d4e068bca8160ed">HandleWaitForDemandStartCompleted</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_demand_start_request.xhtml">WaitForDemandStartRequest</a> *request) const noexcept</td></tr>
<tr class="separator:a1b29853f82d242281d4e068bca8160ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ab047f0c57aac9a3b8fc4d8f8d5d588e6" id="r_ab047f0c57aac9a3b8fc4d8f8d5d588e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_request_queue.xhtml">Http::RequestQueue</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab047f0c57aac9a3b8fc4d8f8d5d588e6">requestQueue_</a></td></tr>
<tr class="separator:ab047f0c57aac9a3b8fc4d8f8d5d588e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a4d7c87b5b5a27b71d23def24cc842df3" name="a4d7c87b5b5a27b71d23def24cc842df3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d7c87b5b5a27b71d23def24cc842df3">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::Base = IO::ContextHandler</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7852c72e924c720206f99d1cf4be3c56" name="a7852c72e924c720206f99d1cf4be3c56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7852c72e924c720206f99d1cf4be3c56">&#9670;&#160;</a></span>DerivedType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::DerivedType = DerivedT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a857acb44e361995d39dc5a8742e458e0" name="a857acb44e361995d39dc5a8742e458e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a857acb44e361995d39dc5a8742e458e0">&#9670;&#160;</a></span>RequestQueueHandler()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::RequestQueueHandler </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_context.xhtml">IO::Context</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>context</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_request_queue.xhtml">Http::RequestQueue</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>requestQueue</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="addfcc2348656c14016f6f9f4091a4b46" name="addfcc2348656c14016f6f9f4091a4b46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addfcc2348656c14016f6f9f4091a4b46">&#9670;&#160;</a></span>BeginAsyncCancel()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncCancel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_cancel_request.xhtml">CancelRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afecbf65b72d2c8bade57e7131fe30b93" name="afecbf65b72d2c8bade57e7131fe30b93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afecbf65b72d2c8bade57e7131fe30b93">&#9670;&#160;</a></span>BeginAsyncReceive()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_request.xhtml">ReceiveRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a124f2b6da8e92c6836e61cd60c5ad458" name="a124f2b6da8e92c6836e61cd60c5ad458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a124f2b6da8e92c6836e61cd60c5ad458">&#9670;&#160;</a></span>BeginAsyncReceiveBody()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncReceiveBody </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_body_request.xhtml">ReceiveBodyRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a661008580ee46cc1c23a747765e05307" name="a661008580ee46cc1c23a747765e05307"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a661008580ee46cc1c23a747765e05307">&#9670;&#160;</a></span>BeginAsyncReceiveClientCertificate()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncReceiveClientCertificate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_client_certificate_request.xhtml">ReceiveClientCertificateRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae298e738a3e2788120ae9d5a1d0870c3" name="ae298e738a3e2788120ae9d5a1d0870c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae298e738a3e2788120ae9d5a1d0870c3">&#9670;&#160;</a></span>BeginAsyncSend()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncSend </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_request.xhtml">SendRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8611d3b0acd22ab1cef82e1eef755260" name="a8611d3b0acd22ab1cef82e1eef755260"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8611d3b0acd22ab1cef82e1eef755260">&#9670;&#160;</a></span>BeginAsyncSendBody()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncSendBody </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_body_request.xhtml">SendBodyRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad8036eb01b4a58093f7463d2e0de83ee" name="ad8036eb01b4a58093f7463d2e0de83ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8036eb01b4a58093f7463d2e0de83ee">&#9670;&#160;</a></span>BeginAsyncWaitForDemandStart()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncWaitForDemandStart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_demand_start_request.xhtml">WaitForDemandStartRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a22b7779509885c67a4a041fe9d6718bc" name="a22b7779509885c67a4a041fe9d6718bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22b7779509885c67a4a041fe9d6718bc">&#9670;&#160;</a></span>BeginAsyncWaitForDisconnect()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncWaitForDisconnect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_request.xhtml">WaitForDisconnectRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab8ace977d15da2ce297a661def828a3d" name="ab8ace977d15da2ce297a661def828a3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8ace977d15da2ce297a661def828a3d">&#9670;&#160;</a></span>BeginAsyncWaitForDisconnectEx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::BeginAsyncWaitForDisconnectEx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_ex_request.xhtml">WaitForDisconnectExRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a247e24172560ab8896af1af03edb90e9" name="a247e24172560ab8896af1af03edb90e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a247e24172560ab8896af1af03edb90e9">&#9670;&#160;</a></span>HandleCancelCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleCancelCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_cancel_request.xhtml">CancelRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afab2ac09fc31baa5a5e3fd550af4ff76" name="afab2ac09fc31baa5a5e3fd550af4ff76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afab2ac09fc31baa5a5e3fd550af4ff76">&#9670;&#160;</a></span>HandleReceiveBodyCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleReceiveBodyCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_body_request.xhtml">ReceiveBodyRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6da43e56de48667934ac3063096013d7" name="a6da43e56de48667934ac3063096013d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6da43e56de48667934ac3063096013d7">&#9670;&#160;</a></span>HandleReceiveClientCertificateCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleReceiveClientCertificateCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_client_certificate_request.xhtml">ReceiveClientCertificateRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a547109948bc5f5fa0d8cb576fe5d03c9" name="a547109948bc5f5fa0d8cb576fe5d03c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a547109948bc5f5fa0d8cb576fe5d03c9">&#9670;&#160;</a></span>HandleReceiveCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleReceiveCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_receive_request.xhtml">ReceiveRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a456ba7d564d628f7403adb737108cc26" name="a456ba7d564d628f7403adb737108cc26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a456ba7d564d628f7403adb737108cc26">&#9670;&#160;</a></span>HandleSendBodyCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleSendBodyCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_body_request.xhtml">SendBodyRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad6103d8f81cb54120d34113030b83e81" name="ad6103d8f81cb54120d34113030b83e81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6103d8f81cb54120d34113030b83e81">&#9670;&#160;</a></span>HandleSendCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleSendCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_send_request.xhtml">SendRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1b29853f82d242281d4e068bca8160ed" name="a1b29853f82d242281d4e068bca8160ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b29853f82d242281d4e068bca8160ed">&#9670;&#160;</a></span>HandleWaitForDemandStartCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleWaitForDemandStartCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_demand_start_request.xhtml">WaitForDemandStartRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac794e58172b19304dd90b9cb9fd54966" name="ac794e58172b19304dd90b9cb9fd54966"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac794e58172b19304dd90b9cb9fd54966">&#9670;&#160;</a></span>HandleWaitForDisconnectCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleWaitForDisconnectCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_request.xhtml">WaitForDisconnectRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7899983848b6e727e7ab282a13d2c4d0" name="a7899983848b6e727e7ab282a13d2c4d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7899983848b6e727e7ab282a13d2c4d0">&#9670;&#160;</a></span>HandleWaitForDisconnectExCompleted()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::HandleWaitForDisconnectExCompleted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_wait_for_disconnect_ex_request.xhtml">WaitForDisconnectExRequest</a> *</td>          <td class="paramname"><span class="paramname"><em>request</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2f94f4c31aa6ca3a93b3c086b58440c" name="ac2f94f4c31aa6ca3a93b3c086b58440c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2f94f4c31aa6ca3a93b3c086b58440c">&#9670;&#160;</a></span>Process()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::Process </td>
          <td>(</td>
          <td class="paramtype">Message &amp;</td>          <td class="paramname"><span class="paramname"><em>message</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a72655c98b8b6a5f9141508007b1530bd" name="a72655c98b8b6a5f9141508007b1530bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72655c98b8b6a5f9141508007b1530bd">&#9670;&#160;</a></span>RequestQueue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_request_queue.xhtml">Http::RequestQueue</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::RequestQueue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a04fb419d2e87357a1075c4697c93e4bb" name="a04fb419d2e87357a1075c4697c93e4bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04fb419d2e87357a1075c4697c93e4bb">&#9670;&#160;</a></span>Self() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="#a7852c72e924c720206f99d1cf4be3c56">DerivedType</a> &gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::Self </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a77cca64b17214036a30fa1e94d657635" name="a77cca64b17214036a30fa1e94d657635"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77cca64b17214036a30fa1e94d657635">&#9670;&#160;</a></span>Self() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; const <a class="el" href="#a7852c72e924c720206f99d1cf4be3c56">DerivedType</a> &gt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::Self </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab047f0c57aac9a3b8fc4d8f8d5d588e6" name="ab047f0c57aac9a3b8fc4d8f8d5d588e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab047f0c57aac9a3b8fc4d8f8d5d588e6">&#9670;&#160;</a></span>requestQueue_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_request_queue.xhtml">Http::RequestQueue</a>&amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">Harlinn::Common::Core::Http::Server::RequestQueueHandler</a>&lt; DerivedT &gt;::requestQueue_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_h_t_t_p_8h.xhtml">HCCHTTP.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_http.xhtml">Http</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_http_1_1_server.xhtml">Server</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_http_1_1_server_1_1_request_queue_handler.xhtml">RequestQueueHandler</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
