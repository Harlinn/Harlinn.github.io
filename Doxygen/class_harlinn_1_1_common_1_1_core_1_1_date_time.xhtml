<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::DateTime Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_date_time-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::DateTime Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCDateTime.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::DateTime:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_date_time__inherit__graph.svg" width="168" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::DateTime:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_date_time__coll__graph.svg" width="195" height="331"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a55778a0adf3a9e5178d04951d0c48712" id="r_a55778a0adf3a9e5178d04951d0c48712"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a55778a0adf3a9e5178d04951d0c48712">DateTime</a> () noexcept</td></tr>
<tr class="separator:a55778a0adf3a9e5178d04951d0c48712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5f2c7f136638f4cfc3f698b5ab69aa" id="r_abd5f2c7f136638f4cfc3f698b5ab69aa"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abd5f2c7f136638f4cfc3f698b5ab69aa">DateTime</a> (long long ticks) noexcept</td></tr>
<tr class="separator:abd5f2c7f136638f4cfc3f698b5ab69aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb2990eabcd006a02bba0e59df6c8b78" id="r_abb2990eabcd006a02bba0e59df6c8b78"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb2990eabcd006a02bba0e59df6c8b78">DateTime</a> (const std::chrono::system_clock::time_point &amp;timePoint) noexcept</td></tr>
<tr class="separator:abb2990eabcd006a02bba0e59df6c8b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb5b8a7be26746469460f091dad140d8" id="r_afb5b8a7be26746469460f091dad140d8"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afb5b8a7be26746469460f091dad140d8">DateTime</a> (const timeval &amp;tv) noexcept</td></tr>
<tr class="separator:afb5b8a7be26746469460f091dad140d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc6905004ee2a7acde84f3c72ea05a89" id="r_abc6905004ee2a7acde84f3c72ea05a89"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abc6905004ee2a7acde84f3c72ea05a89">DateTime</a> (double days)</td></tr>
<tr class="separator:abc6905004ee2a7acde84f3c72ea05a89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e7364f7c974a5680dd6906346fdd258" id="r_a2e7364f7c974a5680dd6906346fdd258"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2e7364f7c974a5680dd6906346fdd258">DateTime</a> (int year, int month, int day)</td></tr>
<tr class="separator:a2e7364f7c974a5680dd6906346fdd258"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a317017cdea55d79ff229335d7da3117f" id="r_a317017cdea55d79ff229335d7da3117f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a317017cdea55d79ff229335d7da3117f">DateTime</a> (int year, int month, int day, int hour, int minute, int second)</td></tr>
<tr class="separator:a317017cdea55d79ff229335d7da3117f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a075e969785ef82f7280cf2ee425cb336" id="r_a075e969785ef82f7280cf2ee425cb336"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a075e969785ef82f7280cf2ee425cb336">DateTime</a> (int year, int month, int day, int hour, int minute, int second, int millisecond)</td></tr>
<tr class="separator:a075e969785ef82f7280cf2ee425cb336"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f740ef87e16615174c6dc21f9bba11" id="r_a75f740ef87e16615174c6dc21f9bba11"><td class="memItemLeft" align="right" valign="top">constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a75f740ef87e16615174c6dc21f9bba11">hash</a> () const noexcept</td></tr>
<tr class="separator:a75f740ef87e16615174c6dc21f9bba11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a4b4bf5a82d6848572f1e7171a9532f" id="r_a3a4b4bf5a82d6848572f1e7171a9532f"><td class="memItemLeft" align="right" valign="top">constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a4b4bf5a82d6848572f1e7171a9532f">Ticks</a> () const noexcept</td></tr>
<tr class="separator:a3a4b4bf5a82d6848572f1e7171a9532f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb9b81ffba1cfd9e5a65c3984f99f06e" id="r_adb9b81ffba1cfd9e5a65c3984f99f06e"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adb9b81ffba1cfd9e5a65c3984f99f06e">operator bool</a> () const noexcept</td></tr>
<tr class="separator:adb9b81ffba1cfd9e5a65c3984f99f06e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3abcb3da226752e546be36ed36cf8c3" id="r_ab3abcb3da226752e546be36ed36cf8c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3abcb3da226752e546be36ed36cf8c3">Add</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;value) const</td></tr>
<tr class="separator:ab3abcb3da226752e546be36ed36cf8c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0696388312979eb15bdcf28c46797700" id="r_a0696388312979eb15bdcf28c46797700"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0696388312979eb15bdcf28c46797700">Add</a> (double value, int scale) const</td></tr>
<tr class="separator:a0696388312979eb15bdcf28c46797700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dd02cc4edc004c55046aafa67f3d2ce" id="r_a8dd02cc4edc004c55046aafa67f3d2ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8dd02cc4edc004c55046aafa67f3d2ce">AddDays</a> (double value) const</td></tr>
<tr class="separator:a8dd02cc4edc004c55046aafa67f3d2ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23d268fbafa487132f0299744b97436d" id="r_a23d268fbafa487132f0299744b97436d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23d268fbafa487132f0299744b97436d">AddHours</a> (double value) const</td></tr>
<tr class="separator:a23d268fbafa487132f0299744b97436d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b37495f81cfc02e9294511a0e6c7bb9" id="r_a6b37495f81cfc02e9294511a0e6c7bb9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b37495f81cfc02e9294511a0e6c7bb9">AddMilliseconds</a> (double value) const</td></tr>
<tr class="separator:a6b37495f81cfc02e9294511a0e6c7bb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4adb8d1ba7d6a2cebf5b3260df842c17" id="r_a4adb8d1ba7d6a2cebf5b3260df842c17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4adb8d1ba7d6a2cebf5b3260df842c17">AddMinutes</a> (double value) const</td></tr>
<tr class="separator:a4adb8d1ba7d6a2cebf5b3260df842c17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d3acbddb70c58a8d98f12babb5b8c71" id="r_a3d3acbddb70c58a8d98f12babb5b8c71"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d3acbddb70c58a8d98f12babb5b8c71">AddMonths</a> (int months) const</td></tr>
<tr class="separator:a3d3acbddb70c58a8d98f12babb5b8c71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92c59c7f6e75172979b4c6b5ea448628" id="r_a92c59c7f6e75172979b4c6b5ea448628"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a92c59c7f6e75172979b4c6b5ea448628">AddSeconds</a> (double value) const</td></tr>
<tr class="separator:a92c59c7f6e75172979b4c6b5ea448628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3833dd8acacd17d26524a0e40249347d" id="r_a3833dd8acacd17d26524a0e40249347d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3833dd8acacd17d26524a0e40249347d">AddTicks</a> (long long value) const</td></tr>
<tr class="separator:a3833dd8acacd17d26524a0e40249347d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab912cdd69096e7bf409004501dbb8853" id="r_ab912cdd69096e7bf409004501dbb8853"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab912cdd69096e7bf409004501dbb8853">AddYears</a> (int value) const</td></tr>
<tr class="separator:ab912cdd69096e7bf409004501dbb8853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e704f35b119a851648f1408e1d5ed8" id="r_a97e704f35b119a851648f1408e1d5ed8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97e704f35b119a851648f1408e1d5ed8">AssingTo</a> (SYSTEMTIME &amp;systemTime) const</td></tr>
<tr class="separator:a97e704f35b119a851648f1408e1d5ed8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a050f2a538c2b405f31810cb4ca8955ff" id="r_a050f2a538c2b405f31810cb4ca8955ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a050f2a538c2b405f31810cb4ca8955ff">DateToAnsiString</a> () const</td></tr>
<tr class="separator:a050f2a538c2b405f31810cb4ca8955ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbcf68d89fc54c8ef6b7683533dbcd84" id="r_afbcf68d89fc54c8ef6b7683533dbcd84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afbcf68d89fc54c8ef6b7683533dbcd84">DateToString</a> () const</td></tr>
<tr class="separator:afbcf68d89fc54c8ef6b7683533dbcd84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74054f6a232f56dfa0b8cc85e03a1813" id="r_a74054f6a232f56dfa0b8cc85e03a1813"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a74054f6a232f56dfa0b8cc85e03a1813">TimeToAnsiString</a> () const</td></tr>
<tr class="separator:a74054f6a232f56dfa0b8cc85e03a1813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ffd528c472dc9e69500a1169b7178b1" id="r_a9ffd528c472dc9e69500a1169b7178b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ffd528c472dc9e69500a1169b7178b1">TimeToString</a> () const</td></tr>
<tr class="separator:a9ffd528c472dc9e69500a1169b7178b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe49debab0e1467b9f9fbd1fe95c630d" id="r_afe49debab0e1467b9f9fbd1fe95c630d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe49debab0e1467b9f9fbd1fe95c630d">ToAnsiString</a> () const</td></tr>
<tr class="separator:afe49debab0e1467b9f9fbd1fe95c630d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3595a43da297d1c968df23c0c6420e7e" id="r_a3595a43da297d1c968df23c0c6420e7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3595a43da297d1c968df23c0c6420e7e">ToString</a> () const</td></tr>
<tr class="separator:a3595a43da297d1c968df23c0c6420e7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a32cac561ae94251c64bf70f8635153" id="r_a4a32cac561ae94251c64bf70f8635153"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4a32cac561ae94251c64bf70f8635153">ToString</a> (const std::wstring_view &amp;format) const</td></tr>
<tr class="separator:a4a32cac561ae94251c64bf70f8635153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc80c540b0c5271a3db9acc7496e0d02" id="r_abc80c540b0c5271a3db9acc7496e0d02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abc80c540b0c5271a3db9acc7496e0d02">Subtract</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;value) const</td></tr>
<tr class="separator:abc80c540b0c5271a3db9acc7496e0d02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39df0abfb71031b6f2a46f37014776e6" id="r_a39df0abfb71031b6f2a46f37014776e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a39df0abfb71031b6f2a46f37014776e6">Subtract</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;value) const</td></tr>
<tr class="separator:a39df0abfb71031b6f2a46f37014776e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e0e75ee908de6ef9e651598e315175c" id="r_a6e0e75ee908de6ef9e651598e315175c"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6e0e75ee908de6ef9e651598e315175c">CompareTo</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a6e0e75ee908de6ef9e651598e315175c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b2680160105a186c798427e3ddadcbf" id="r_a2b2680160105a186c798427e3ddadcbf"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2b2680160105a186c798427e3ddadcbf">operator=</a> (const std::chrono::system_clock::time_point &amp;timePoint) noexcept</td></tr>
<tr class="separator:a2b2680160105a186c798427e3ddadcbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28aa65bbb7e15325f21ce80fd82f6d87" id="r_a28aa65bbb7e15325f21ce80fd82f6d87"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a28aa65bbb7e15325f21ce80fd82f6d87">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a28aa65bbb7e15325f21ce80fd82f6d87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a444afcf9f556addd538b957b64392004" id="r_a444afcf9f556addd538b957b64392004"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a444afcf9f556addd538b957b64392004">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a444afcf9f556addd538b957b64392004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c34277a9565ea5a09978b39dbf50e90" id="r_a2c34277a9565ea5a09978b39dbf50e90"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c34277a9565ea5a09978b39dbf50e90">operator&lt;</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2c34277a9565ea5a09978b39dbf50e90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a676fd79fae02b31b3aa4af93db441ab5" id="r_a676fd79fae02b31b3aa4af93db441ab5"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a676fd79fae02b31b3aa4af93db441ab5">operator&lt;=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a676fd79fae02b31b3aa4af93db441ab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa82c6d574d2f155af661395f650e21b2" id="r_aa82c6d574d2f155af661395f650e21b2"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa82c6d574d2f155af661395f650e21b2">operator&gt;</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:aa82c6d574d2f155af661395f650e21b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03a74d63b3699598313cf2b6e70a6ee5" id="r_a03a74d63b3699598313cf2b6e70a6ee5"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a03a74d63b3699598313cf2b6e70a6ee5">operator&gt;=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a03a74d63b3699598313cf2b6e70a6ee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1497a8a4bb57ebce5867dec4b5f9bfc7" id="r_a1497a8a4bb57ebce5867dec4b5f9bfc7"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1497a8a4bb57ebce5867dec4b5f9bfc7">operator+=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;timeSpan) noexcept</td></tr>
<tr class="separator:a1497a8a4bb57ebce5867dec4b5f9bfc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f38a7fffbb524d75dc7478028e46519" id="r_a7f38a7fffbb524d75dc7478028e46519"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7f38a7fffbb524d75dc7478028e46519">operator+</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;timeSpan) const noexcept</td></tr>
<tr class="separator:a7f38a7fffbb524d75dc7478028e46519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a5dbc939fe0d3ee269d02c77706a84e" id="r_a5a5dbc939fe0d3ee269d02c77706a84e"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5a5dbc939fe0d3ee269d02c77706a84e">operator-=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;timeSpan) noexcept</td></tr>
<tr class="separator:a5a5dbc939fe0d3ee269d02c77706a84e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6203a16e658b88eb78900e13477e72" id="r_a6e6203a16e658b88eb78900e13477e72"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6e6203a16e658b88eb78900e13477e72">operator-</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;timeSpan) const noexcept</td></tr>
<tr class="separator:a6e6203a16e658b88eb78900e13477e72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00f054f1a14ecb1c851652a99afb881a" id="r_a00f054f1a14ecb1c851652a99afb881a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a00f054f1a14ecb1c851652a99afb881a">operator-</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;other) const</td></tr>
<tr class="separator:a00f054f1a14ecb1c851652a99afb881a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88d0ef3fc37b866f1583f39a93b3603c" id="r_a88d0ef3fc37b866f1583f39a93b3603c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a88d0ef3fc37b866f1583f39a93b3603c">IsDaylightSavingTime</a> () const</td></tr>
<tr class="separator:a88d0ef3fc37b866f1583f39a93b3603c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18cf1cbc00df67ce9a235ca47282104d" id="r_a18cf1cbc00df67ce9a235ca47282104d"><td class="memItemLeft" align="right" valign="top">constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18cf1cbc00df67ce9a235ca47282104d">ToBinary</a> () const noexcept</td></tr>
<tr class="separator:a18cf1cbc00df67ce9a235ca47282104d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28de950ab858a786a384e70c6312d860" id="r_a28de950ab858a786a384e70c6312d860"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a28de950ab858a786a384e70c6312d860">GetDatePart</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a2bad736145da8233a22d4e06ec9623e5">DatePart</a> datePart) const noexcept</td></tr>
<tr class="separator:a28de950ab858a786a384e70c6312d860"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3351a921817df2589d7095035442740e" id="r_a3351a921817df2589d7095035442740e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3351a921817df2589d7095035442740e">GetYearMonthDay</a> (int &amp;year, int &amp;month, int &amp;day) const</td></tr>
<tr class="separator:a3351a921817df2589d7095035442740e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dadc293243d798672772a2cc1e7a226" id="r_a7dadc293243d798672772a2cc1e7a226"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7dadc293243d798672772a2cc1e7a226">Date</a> () const noexcept</td></tr>
<tr class="separator:a7dadc293243d798672772a2cc1e7a226"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a146b9db29ca89d8a94c13d06f4d9ad8f" id="r_a146b9db29ca89d8a94c13d06f4d9ad8f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a146b9db29ca89d8a94c13d06f4d9ad8f">Year</a> () const noexcept</td></tr>
<tr class="separator:a146b9db29ca89d8a94c13d06f4d9ad8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92b20bd631a52141206e41ac67db329a" id="r_a92b20bd631a52141206e41ac67db329a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a92b20bd631a52141206e41ac67db329a">Month</a> () const noexcept</td></tr>
<tr class="separator:a92b20bd631a52141206e41ac67db329a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9d2304a5207d9bf0a428cb8b065e2c" id="r_aaa9d2304a5207d9bf0a428cb8b065e2c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa9d2304a5207d9bf0a428cb8b065e2c">Day</a> () const noexcept</td></tr>
<tr class="separator:aaa9d2304a5207d9bf0a428cb8b065e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363c67ecc5f519794e5bf6b2ba14502c" id="r_a363c67ecc5f519794e5bf6b2ba14502c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a663636b97aa32afb14b0c0d507343375">DayOfWeek</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a363c67ecc5f519794e5bf6b2ba14502c">DayOfWeek</a> () const noexcept</td></tr>
<tr class="separator:a363c67ecc5f519794e5bf6b2ba14502c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a728e622d3254ffe16571b83248717535" id="r_a728e622d3254ffe16571b83248717535"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a728e622d3254ffe16571b83248717535">DayOfYear</a> () const noexcept</td></tr>
<tr class="separator:a728e622d3254ffe16571b83248717535"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7341a659607cc3b2bb9886ecb9974e" id="r_a4c7341a659607cc3b2bb9886ecb9974e"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4c7341a659607cc3b2bb9886ecb9974e">Hour</a> () const noexcept</td></tr>
<tr class="separator:a4c7341a659607cc3b2bb9886ecb9974e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae92a650379e22ace488c52e92104d112" id="r_ae92a650379e22ace488c52e92104d112"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae92a650379e22ace488c52e92104d112">Minute</a> () const noexcept</td></tr>
<tr class="separator:ae92a650379e22ace488c52e92104d112"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a65def46a048ffe35613f918b7b046" id="r_a83a65def46a048ffe35613f918b7b046"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83a65def46a048ffe35613f918b7b046">Second</a> () const noexcept</td></tr>
<tr class="separator:a83a65def46a048ffe35613f918b7b046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad45f49326e46c92bb79b69cc09e3385" id="r_aad45f49326e46c92bb79b69cc09e3385"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aad45f49326e46c92bb79b69cc09e3385">Millisecond</a> () const noexcept</td></tr>
<tr class="separator:aad45f49326e46c92bb79b69cc09e3385"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92152becdf071e8d8735f4d6e891a413" id="r_a92152becdf071e8d8735f4d6e891a413"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a92152becdf071e8d8735f4d6e891a413">TimeOfDay</a> () const noexcept</td></tr>
<tr class="separator:a92152becdf071e8d8735f4d6e891a413"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4568a2f7bc39eec45ed04a9806c2c179" id="r_a4568a2f7bc39eec45ed04a9806c2c179"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4568a2f7bc39eec45ed04a9806c2c179">ToOADate</a> () const</td></tr>
<tr class="separator:a4568a2f7bc39eec45ed04a9806c2c179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98f8a2e3c184e576b0795ee5daef1b38" id="r_a98f8a2e3c184e576b0795ee5daef1b38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a98f8a2e3c184e576b0795ee5daef1b38">ToFileTime</a> () const</td></tr>
<tr class="separator:a98f8a2e3c184e576b0795ee5daef1b38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad230991421d4f4c7568d9ffb5c59d007" id="r_ad230991421d4f4c7568d9ffb5c59d007"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad230991421d4f4c7568d9ffb5c59d007">ToLocalTime</a> () const</td></tr>
<tr class="separator:ad230991421d4f4c7568d9ffb5c59d007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab113a8e7bda4e5206a4ce7766417699c" id="r_ab113a8e7bda4e5206a4ce7766417699c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab113a8e7bda4e5206a4ce7766417699c">ToUniversalTime</a> () const</td></tr>
<tr class="separator:ab113a8e7bda4e5206a4ce7766417699c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76c927cee4f769a8563d20acaef31a9d" id="r_a76c927cee4f769a8563d20acaef31a9d"><td class="memItemLeft" align="right" valign="top">time_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a76c927cee4f769a8563d20acaef31a9d">ToTimeT</a> () const noexcept</td></tr>
<tr class="separator:a76c927cee4f769a8563d20acaef31a9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fa74a6240ebb17ef38a217c0f87e031" id="r_a8fa74a6240ebb17ef38a217c0f87e031"><td class="memItemLeft" align="right" valign="top">timeval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8fa74a6240ebb17ef38a217c0f87e031">ToTimeval</a> () const noexcept</td></tr>
<tr class="separator:a8fa74a6240ebb17ef38a217c0f87e031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa840966794b0ba3b3a106bbd32daeffd" id="r_aa840966794b0ba3b3a106bbd32daeffd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa840966794b0ba3b3a106bbd32daeffd">ToNTP</a> () const</td></tr>
<tr class="separator:aa840966794b0ba3b3a106bbd32daeffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f40cdea9645e36ce045580697999ec7" id="r_a8f40cdea9645e36ce045580697999ec7"><td class="memItemLeft" align="right" valign="top">constexpr std::chrono::system_clock::time_point&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8f40cdea9645e36ce045580697999ec7">ToTimePoint</a> () const noexcept</td></tr>
<tr class="separator:a8f40cdea9645e36ce045580697999ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a575caa0985d114c09405b53150093952" id="r_a575caa0985d114c09405b53150093952"><td class="memItemLeft" align="right" valign="top">timespec&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a575caa0985d114c09405b53150093952">ToTimespec</a> () const noexcept</td></tr>
<tr class="separator:a575caa0985d114c09405b53150093952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecb00443849287f2ca1f02fa70e0adb7" id="r_aecb00443849287f2ca1f02fa70e0adb7"><td class="memItemLeft" align="right" valign="top">constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aecb00443849287f2ca1f02fa70e0adb7">ToUDate</a> () const noexcept</td></tr>
<tr class="separator:aecb00443849287f2ca1f02fa70e0adb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a085323246369f89d2a8eae0fb7fe7aa6" id="r_a085323246369f89d2a8eae0fb7fe7aa6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a085323246369f89d2a8eae0fb7fe7aa6">ToLocalTicks</a> (long long ticksInUtc)</td></tr>
<tr class="separator:a085323246369f89d2a8eae0fb7fe7aa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72ff94b45c6539e3c3fdc6cb0643f60a" id="r_a72ff94b45c6539e3c3fdc6cb0643f60a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a72ff94b45c6539e3c3fdc6cb0643f60a">ToUniversalTicks</a> (long long ticksInLocalTime)</td></tr>
<tr class="separator:a72ff94b45c6539e3c3fdc6cb0643f60a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f6a1bb62160ba1980712b010e660921" id="r_a4f6a1bb62160ba1980712b010e660921"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4f6a1bb62160ba1980712b010e660921">ToTicks</a> (int year, int month, int day, int hour, int minute, int second, int millisecond)</td></tr>
<tr class="separator:a4f6a1bb62160ba1980712b010e660921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7b329b4be015b40065073f69ca34a37" id="r_ae7b329b4be015b40065073f69ca34a37"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae7b329b4be015b40065073f69ca34a37">TryCreate</a> (int year, int month, int day, int hour, int minute, int second, int millisecond, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:ae7b329b4be015b40065073f69ca34a37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cf791c5abfb18367eb78dac13d34c30" id="r_a5cf791c5abfb18367eb78dac13d34c30"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5cf791c5abfb18367eb78dac13d34c30">ToTicks</a> (const timeval &amp;tv)</td></tr>
<tr class="separator:a5cf791c5abfb18367eb78dac13d34c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3d1b7f25103fb7160e41b47e7d0961" id="r_a4b3d1b7f25103fb7160e41b47e7d0961"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4b3d1b7f25103fb7160e41b47e7d0961">DateToTicks</a> (int year, int month, int day)</td></tr>
<tr class="separator:a4b3d1b7f25103fb7160e41b47e7d0961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c0a51c6d5f8a61c4bbfee5ac1befb6" id="r_af8c0a51c6d5f8a61c4bbfee5ac1befb6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af8c0a51c6d5f8a61c4bbfee5ac1befb6">JulianDateToTicks</a> (int year, int month, int day)</td></tr>
<tr class="separator:af8c0a51c6d5f8a61c4bbfee5ac1befb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30446fd4113875c7eb9c65aefc32f0f9" id="r_a30446fd4113875c7eb9c65aefc32f0f9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a30446fd4113875c7eb9c65aefc32f0f9">TimeToTicks</a> (int hour, int minute, int second)</td></tr>
<tr class="separator:a30446fd4113875c7eb9c65aefc32f0f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada4a1fb7abc67abf21aa804b355e977b" id="r_ada4a1fb7abc67abf21aa804b355e977b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ada4a1fb7abc67abf21aa804b355e977b">SystemTimeToTicks</a> (const SYSTEMTIME &amp;systemTime)</td></tr>
<tr class="separator:ada4a1fb7abc67abf21aa804b355e977b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ce2f2e9517d4dd914df9f0e4527762b" id="r_a1ce2f2e9517d4dd914df9f0e4527762b"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ce2f2e9517d4dd914df9f0e4527762b">MinValue</a> () noexcept</td></tr>
<tr class="separator:a1ce2f2e9517d4dd914df9f0e4527762b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add10abdce4172e508d8fdc4c911a059d" id="r_add10abdce4172e508d8fdc4c911a059d"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add10abdce4172e508d8fdc4c911a059d">MaxValue</a> () noexcept</td></tr>
<tr class="separator:add10abdce4172e508d8fdc4c911a059d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a463e980dddb456390fcf00603a25e537" id="r_a463e980dddb456390fcf00603a25e537"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a463e980dddb456390fcf00603a25e537">Compare</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;first, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;second) noexcept</td></tr>
<tr class="separator:a463e980dddb456390fcf00603a25e537"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aada37608343e756e7f8d2fe7b8c70a25" id="r_aada37608343e756e7f8d2fe7b8c70a25"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aada37608343e756e7f8d2fe7b8c70a25">DaysInMonth</a> (int year, int month)</td></tr>
<tr class="separator:aada37608343e756e7f8d2fe7b8c70a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5679092d910233f46fbfb0e25afd5096" id="r_a5679092d910233f46fbfb0e25afd5096"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5679092d910233f46fbfb0e25afd5096">DoubleDateToTicks</a> (double value)</td></tr>
<tr class="separator:a5679092d910233f46fbfb0e25afd5096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20775b513590f82d730c4b3f6a779f04" id="r_a20775b513590f82d730c4b3f6a779f04"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a20775b513590f82d730c4b3f6a779f04">FromBinary</a> (long long dateData)</td></tr>
<tr class="separator:a20775b513590f82d730c4b3f6a779f04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a350b7357da9360e3bb133f46d7bcc16d" id="r_a350b7357da9360e3bb133f46d7bcc16d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a350b7357da9360e3bb133f46d7bcc16d">FromFileTime</a> (long long fileTime)</td></tr>
<tr class="separator:a350b7357da9360e3bb133f46d7bcc16d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae00e08234218ab38c36840d496a09491" id="r_ae00e08234218ab38c36840d496a09491"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae00e08234218ab38c36840d496a09491">FromFileTime</a> (FILETIME fileTime)</td></tr>
<tr class="separator:ae00e08234218ab38c36840d496a09491"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00477c6e7279aa306d07224e78481a9c" id="r_a00477c6e7279aa306d07224e78481a9c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a00477c6e7279aa306d07224e78481a9c">FromOADate</a> (double d)</td></tr>
<tr class="separator:a00477c6e7279aa306d07224e78481a9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ea95202bfc73c26a89a96fe9ca46ff4" id="r_a6ea95202bfc73c26a89a96fe9ca46ff4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ea95202bfc73c26a89a96fe9ca46ff4">FromUDate</a> (double d)</td></tr>
<tr class="separator:a6ea95202bfc73c26a89a96fe9ca46ff4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d20c4c9773ad71e80df802bf107194c" id="r_a6d20c4c9773ad71e80df802bf107194c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d20c4c9773ad71e80df802bf107194c">Now</a> ()</td></tr>
<tr class="separator:a6d20c4c9773ad71e80df802bf107194c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06f371ffca7d7ab015471d723efda3ec" id="r_a06f371ffca7d7ab015471d723efda3ec"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a06f371ffca7d7ab015471d723efda3ec">UtcNow</a> () noexcept</td></tr>
<tr class="separator:a06f371ffca7d7ab015471d723efda3ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6d20ab84e2dcf40a405083086c8d76" id="r_aac6d20ab84e2dcf40a405083086c8d76"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac6d20ab84e2dcf40a405083086c8d76">Today</a> ()</td></tr>
<tr class="separator:aac6d20ab84e2dcf40a405083086c8d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9467f4af4a579aaa59418ded05e5b91d" id="r_a9467f4af4a579aaa59418ded05e5b91d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9467f4af4a579aaa59418ded05e5b91d">IsLeapYear</a> (int year)</td></tr>
<tr class="separator:a9467f4af4a579aaa59418ded05e5b91d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d6f4fa44da179dfa5d007bb6fd7b2c1" id="r_a7d6f4fa44da179dfa5d007bb6fd7b2c1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7d6f4fa44da179dfa5d007bb6fd7b2c1">TicksToOADate</a> (long long value)</td></tr>
<tr class="separator:a7d6f4fa44da179dfa5d007bb6fd7b2c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4306fe4569aca235254d690c5e21c1" id="r_aed4306fe4569aca235254d690c5e21c1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed4306fe4569aca235254d690c5e21c1">TryParse</a> (const std::locale &amp;locale, const wchar_t *text, size_t textLength, const wchar_t *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:aed4306fe4569aca235254d690c5e21c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ca5cc5008351121c7d873cccaae101" id="r_a35ca5cc5008351121c7d873cccaae101"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35ca5cc5008351121c7d873cccaae101">TryParse</a> (const std::locale &amp;locale, const char *text, size_t textLength, const char *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a35ca5cc5008351121c7d873cccaae101"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a949ffde8005b47a73d745ad9afce83f0" id="r_a949ffde8005b47a73d745ad9afce83f0"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a949ffde8005b47a73d745ad9afce83f0">TryParse</a> (const wchar_t *text, size_t textLength, const wchar_t *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a949ffde8005b47a73d745ad9afce83f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53d48f430aaf6b9a0690e09b4c05791b" id="r_a53d48f430aaf6b9a0690e09b4c05791b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a53d48f430aaf6b9a0690e09b4c05791b">TryParse</a> (const char *text, size_t textLength, const char *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a53d48f430aaf6b9a0690e09b4c05791b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea1f5103df749b1a04d36a9028a1f59c" id="r_aea1f5103df749b1a04d36a9028a1f59c"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:aea1f5103df749b1a04d36a9028a1f59c"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aea1f5103df749b1a04d36a9028a1f59c">TryParse</a> (const std::locale &amp;locale, const StringT &amp;text, const wchar_t *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:aea1f5103df749b1a04d36a9028a1f59c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dbe46094a4d8921cb02fc58dbc33833" id="r_a7dbe46094a4d8921cb02fc58dbc33833"><td class="memTemplParams" colspan="2">template&lt;typename StringT &gt; <br />
requires std::is_same_v&lt;StringT, std::wstring_view&gt; || std::is_same_v&lt;StringT, std::string_view&gt;</td></tr>
<tr class="memitem:a7dbe46094a4d8921cb02fc58dbc33833"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a7dbe46094a4d8921cb02fc58dbc33833">TryParse</a> (const std::locale &amp;locale, const StringT &amp;text, const wchar_t *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a7dbe46094a4d8921cb02fc58dbc33833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addf006d6d6c16f332d29705dbbd2bc41" id="r_addf006d6d6c16f332d29705dbbd2bc41"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:addf006d6d6c16f332d29705dbbd2bc41"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#addf006d6d6c16f332d29705dbbd2bc41">TryParse</a> (const StringT &amp;text, const wchar_t *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:addf006d6d6c16f332d29705dbbd2bc41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a36f7514ba9f101e0c9fafe558016dc" id="r_a2a36f7514ba9f101e0c9fafe558016dc"><td class="memTemplParams" colspan="2">template&lt;SimpleStringLike StringT&gt; </td></tr>
<tr class="memitem:a2a36f7514ba9f101e0c9fafe558016dc"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a2a36f7514ba9f101e0c9fafe558016dc">TryParse</a> (const StringT &amp;text, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a2a36f7514ba9f101e0c9fafe558016dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd716504f1384d6633608dadca9c8e20" id="r_abd716504f1384d6633608dadca9c8e20"><td class="memTemplParams" colspan="2">template&lt;typename StringT &gt; <br />
requires std::is_same_v&lt;StringT, std::wstring_view&gt; || std::is_same_v&lt;StringT, std::string_view&gt;</td></tr>
<tr class="memitem:abd716504f1384d6633608dadca9c8e20"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#abd716504f1384d6633608dadca9c8e20">TryParse</a> (const StringT &amp;text, const wchar_t *format, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:abd716504f1384d6633608dadca9c8e20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a454cfa3ef0d489c72b95421fcedcd645" id="r_a454cfa3ef0d489c72b95421fcedcd645"><td class="memTemplParams" colspan="2">template&lt;typename StringT &gt; <br />
requires std::is_same_v&lt;StringT, std::wstring_view&gt; || std::is_same_v&lt;StringT, std::string_view&gt;</td></tr>
<tr class="memitem:a454cfa3ef0d489c72b95421fcedcd645"><td class="memTemplItemLeft" align="right" valign="top">static bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a454cfa3ef0d489c72b95421fcedcd645">TryParse</a> (const StringT &amp;text, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a454cfa3ef0d489c72b95421fcedcd645"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c5e73ef96c613aef2611a4ac4af79f3" id="r_a5c5e73ef96c613aef2611a4ac4af79f3"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c5e73ef96c613aef2611a4ac4af79f3">TryParse</a> (const std::locale &amp;locale, const wchar_t *text, size_t textLength, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a5c5e73ef96c613aef2611a4ac4af79f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7ec73a6a320873f947d5acc4d3a90c" id="r_a4d7ec73a6a320873f947d5acc4d3a90c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d7ec73a6a320873f947d5acc4d3a90c">TryParse</a> (const std::locale &amp;locale, const char *text, size_t textLength, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a4d7ec73a6a320873f947d5acc4d3a90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bda6c0355a72081a791fbe20c5c7549" id="r_a2bda6c0355a72081a791fbe20c5c7549"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2bda6c0355a72081a791fbe20c5c7549">TryParse</a> (const wchar_t *text, size_t textLength, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a2bda6c0355a72081a791fbe20c5c7549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab065be6de2fb9abe49119121416b1a60" id="r_ab065be6de2fb9abe49119121416b1a60"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab065be6de2fb9abe49119121416b1a60">TryParse</a> (const char *text, size_t textLength, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:ab065be6de2fb9abe49119121416b1a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03bd11f38c339d4ad7884a08cbd58120" id="r_a03bd11f38c339d4ad7884a08cbd58120"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a03bd11f38c339d4ad7884a08cbd58120">TryParse</a> (const std::locale &amp;locale, const wchar_t *text, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a03bd11f38c339d4ad7884a08cbd58120"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a64800fb70da76f497ee3b1da9ba4b6" id="r_a9a64800fb70da76f497ee3b1da9ba4b6"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a64800fb70da76f497ee3b1da9ba4b6">TryParse</a> (const std::locale &amp;locale, const char *text, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a9a64800fb70da76f497ee3b1da9ba4b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f265e26bc857836bd56fd2f16d15923" id="r_a3f265e26bc857836bd56fd2f16d15923"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f265e26bc857836bd56fd2f16d15923">TryParse</a> (const wchar_t *text, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a3f265e26bc857836bd56fd2f16d15923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50e857e2da18ca723e1080b7e07497eb" id="r_a50e857e2da18ca723e1080b7e07497eb"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a50e857e2da18ca723e1080b7e07497eb">TryParse</a> (const char *text, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;result)</td></tr>
<tr class="separator:a50e857e2da18ca723e1080b7e07497eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa689b4d8381ac734cd54a6d49d2d3b80" id="r_aa689b4d8381ac734cd54a6d49d2d3b80"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa689b4d8381ac734cd54a6d49d2d3b80">Parse</a> (const wchar_t *text)</td></tr>
<tr class="separator:aa689b4d8381ac734cd54a6d49d2d3b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c6271dad22169070276db4b94115c6d" id="r_a6c6271dad22169070276db4b94115c6d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6c6271dad22169070276db4b94115c6d">Parse</a> (const char *text)</td></tr>
<tr class="separator:a6c6271dad22169070276db4b94115c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa26508a875f1b71c2ff41c897e42560c" id="r_aa26508a875f1b71c2ff41c897e42560c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa26508a875f1b71c2ff41c897e42560c">Parse</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;text)</td></tr>
<tr class="separator:aa26508a875f1b71c2ff41c897e42560c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2d26cb7d0e94c060f1ee2af76316e17" id="r_ad2d26cb7d0e94c060f1ee2af76316e17"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad2d26cb7d0e94c060f1ee2af76316e17">Parse</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;text)</td></tr>
<tr class="separator:ad2d26cb7d0e94c060f1ee2af76316e17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61f28867c0df28db31e17d12894a44cd" id="r_a61f28867c0df28db31e17d12894a44cd"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61f28867c0df28db31e17d12894a44cd">FromTimeval</a> (const timeval &amp;tv)</td></tr>
<tr class="separator:a61f28867c0df28db31e17d12894a44cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c4c7d862af20c1b5120c2dab9900295" id="r_a5c4c7d862af20c1b5120c2dab9900295"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c4c7d862af20c1b5120c2dab9900295">FromNTP</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> secondsSince1900, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> fraction)</td></tr>
<tr class="separator:a5c4c7d862af20c1b5120c2dab9900295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace3c0e46100b43e283fe4ac300c4e950" id="r_ace3c0e46100b43e283fe4ac300c4e950"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ace3c0e46100b43e283fe4ac300c4e950">FromNTP</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a> ntpTime)</td></tr>
<tr class="separator:ace3c0e46100b43e283fe4ac300c4e950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84b59bcb504849794ff5bf7013ce77b2" id="r_a84b59bcb504849794ff5bf7013ce77b2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84b59bcb504849794ff5bf7013ce77b2">FromTimePoint</a> (std::chrono::system_clock::time_point timePoint) noexcept</td></tr>
<tr class="separator:a84b59bcb504849794ff5bf7013ce77b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a83f71ae93d42c213aec15491bd8c6ee5" id="r_a83f71ae93d42c213aec15491bd8c6ee5"><td class="memItemLeft" align="right" valign="top">static constexpr wchar_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83f71ae93d42c213aec15491bd8c6ee5">DEFAULT_WIDE_FORMAT</a> [] = L&quot;%FT%T%Z&quot;</td></tr>
<tr class="separator:a83f71ae93d42c213aec15491bd8c6ee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade18ecce450543df93e8513b4aef9159" id="r_ade18ecce450543df93e8513b4aef9159"><td class="memItemLeft" align="right" valign="top">static constexpr char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ade18ecce450543df93e8513b4aef9159">DEFAULT_FORMAT</a> [] = &quot;%FT%T%Z&quot;</td></tr>
<tr class="separator:ade18ecce450543df93e8513b4aef9159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml">Harlinn::Common::Core::TimeBase</a></td></tr>
<tr class="memitem:af1984030d64d64535fc07856d0152e53 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_af1984030d64d64535fc07856d0152e53"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#af1984030d64d64535fc07856d0152e53">TicksPerMicrosecond</a> = 10</td></tr>
<tr class="separator:af1984030d64d64535fc07856d0152e53 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abba4be8174d0219af2624b4665516166 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_abba4be8174d0219af2624b4665516166"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#abba4be8174d0219af2624b4665516166">TicksPerMillisecond</a> = 10000</td></tr>
<tr class="separator:abba4be8174d0219af2624b4665516166 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cf2951a09bf3797e23b5d8aa3742dfd inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a4cf2951a09bf3797e23b5d8aa3742dfd"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a4cf2951a09bf3797e23b5d8aa3742dfd">TicksPerSecond</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#abba4be8174d0219af2624b4665516166">TicksPerMillisecond</a> * 1000</td></tr>
<tr class="separator:a4cf2951a09bf3797e23b5d8aa3742dfd inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f87740bb367a6efcad091b9240c9d40 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a1f87740bb367a6efcad091b9240c9d40"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1f87740bb367a6efcad091b9240c9d40">TicksPerMinute</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a4cf2951a09bf3797e23b5d8aa3742dfd">TicksPerSecond</a> * 60</td></tr>
<tr class="separator:a1f87740bb367a6efcad091b9240c9d40 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07e97840c5ea9ad7e91abdf105c40377 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a07e97840c5ea9ad7e91abdf105c40377"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a07e97840c5ea9ad7e91abdf105c40377">TicksPerHour</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1f87740bb367a6efcad091b9240c9d40">TicksPerMinute</a> * 60</td></tr>
<tr class="separator:a07e97840c5ea9ad7e91abdf105c40377 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20b767f3edb36fcbf23ee7607b257d6 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_aa20b767f3edb36fcbf23ee7607b257d6"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a07e97840c5ea9ad7e91abdf105c40377">TicksPerHour</a> * 24</td></tr>
<tr class="separator:aa20b767f3edb36fcbf23ee7607b257d6 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64fada6c9fb042f6b103c17865d06f06 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a64fada6c9fb042f6b103c17865d06f06"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a64fada6c9fb042f6b103c17865d06f06">TicksPerYear</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a> * 365</td></tr>
<tr class="separator:a64fada6c9fb042f6b103c17865d06f06 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ab9ef1f701d059a1c5a686ea381dcba inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a5ab9ef1f701d059a1c5a686ea381dcba"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a5ab9ef1f701d059a1c5a686ea381dcba">MillisecondsPerTick</a> = 1.0 / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#abba4be8174d0219af2624b4665516166">TicksPerMillisecond</a></td></tr>
<tr class="separator:a5ab9ef1f701d059a1c5a686ea381dcba inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad46a1cc5a3a59cb465f7b73da51fc6 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a2ad46a1cc5a3a59cb465f7b73da51fc6"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a2ad46a1cc5a3a59cb465f7b73da51fc6">SecondsPerTick</a> = 1.0 / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a4cf2951a09bf3797e23b5d8aa3742dfd">TicksPerSecond</a></td></tr>
<tr class="separator:a2ad46a1cc5a3a59cb465f7b73da51fc6 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e1262b2355c14a228aeffe07acf0fb3 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a9e1262b2355c14a228aeffe07acf0fb3"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a9e1262b2355c14a228aeffe07acf0fb3">MinutesPerTick</a> = 1.0 / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1f87740bb367a6efcad091b9240c9d40">TicksPerMinute</a></td></tr>
<tr class="separator:a9e1262b2355c14a228aeffe07acf0fb3 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74971de661ef2b7e6e860a296e7520aa inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a74971de661ef2b7e6e860a296e7520aa"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a74971de661ef2b7e6e860a296e7520aa">HoursPerTick</a> = 1.0 / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a07e97840c5ea9ad7e91abdf105c40377">TicksPerHour</a></td></tr>
<tr class="separator:a74971de661ef2b7e6e860a296e7520aa inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e2cfefeb71f21e6278fa2e4f6a236e7 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a9e2cfefeb71f21e6278fa2e4f6a236e7"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a9e2cfefeb71f21e6278fa2e4f6a236e7">DaysPerTick</a> = 1.0 / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a></td></tr>
<tr class="separator:a9e2cfefeb71f21e6278fa2e4f6a236e7 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21863810432f837f6b91d2bd6b0128cd inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a21863810432f837f6b91d2bd6b0128cd"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a21863810432f837f6b91d2bd6b0128cd">OADateMinAsDouble</a> = -657435.0</td></tr>
<tr class="separator:a21863810432f837f6b91d2bd6b0128cd inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a826f12aeb9c03741887c4d7f16cbe0e2 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a826f12aeb9c03741887c4d7f16cbe0e2"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a826f12aeb9c03741887c4d7f16cbe0e2">OADateMaxAsDouble</a> = 2958466.0</td></tr>
<tr class="separator:a826f12aeb9c03741887c4d7f16cbe0e2 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae5101d6c1adc8bc18ce048124a0fb73 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_aae5101d6c1adc8bc18ce048124a0fb73"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a6ff1d522958b304e14f8a822c38c5e89">DaysToMonth</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aae5101d6c1adc8bc18ce048124a0fb73">DaysToMonth365</a> { 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365 }</td></tr>
<tr class="separator:aae5101d6c1adc8bc18ce048124a0fb73 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a671f8d949af11f660f34a372a8af0986 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a671f8d949af11f660f34a372a8af0986"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a6ff1d522958b304e14f8a822c38c5e89">DaysToMonth</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a671f8d949af11f660f34a372a8af0986">DaysToMonth366</a> { 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366 }</td></tr>
<tr class="separator:a671f8d949af11f660f34a372a8af0986 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99aa90ce36c44cc8a7282a6ba26dc0b8 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a99aa90ce36c44cc8a7282a6ba26dc0b8"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a99aa90ce36c44cc8a7282a6ba26dc0b8">MillisPerSecond</a> = 1000</td></tr>
<tr class="separator:a99aa90ce36c44cc8a7282a6ba26dc0b8 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ef688013966ba1a275d0364dccf3fb2 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a5ef688013966ba1a275d0364dccf3fb2"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a5ef688013966ba1a275d0364dccf3fb2">MillisPerMinute</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a99aa90ce36c44cc8a7282a6ba26dc0b8">MillisPerSecond</a> * 60</td></tr>
<tr class="separator:a5ef688013966ba1a275d0364dccf3fb2 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c1b7db7da55cfaea9c7cba74e491fe7 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a6c1b7db7da55cfaea9c7cba74e491fe7"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a6c1b7db7da55cfaea9c7cba74e491fe7">MillisPerHour</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a5ef688013966ba1a275d0364dccf3fb2">MillisPerMinute</a> * 60</td></tr>
<tr class="separator:a6c1b7db7da55cfaea9c7cba74e491fe7 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace2a40f7379a8b239d1553f697289564 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_ace2a40f7379a8b239d1553f697289564"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ace2a40f7379a8b239d1553f697289564">MillisPerDay</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a6c1b7db7da55cfaea9c7cba74e491fe7">MillisPerHour</a> * 24</td></tr>
<tr class="separator:ace2a40f7379a8b239d1553f697289564 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51f2daa444a424ad25a432782fcf8bc6 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a51f2daa444a424ad25a432782fcf8bc6"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a51f2daa444a424ad25a432782fcf8bc6">MaxSeconds</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a13e2cce25b750cddaddf6d1432c40be3">MaxInt64</a> / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a4cf2951a09bf3797e23b5d8aa3742dfd">TicksPerSecond</a></td></tr>
<tr class="separator:a51f2daa444a424ad25a432782fcf8bc6 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77601e07870e35af96fd8ac1f9546dac inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a77601e07870e35af96fd8ac1f9546dac"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a77601e07870e35af96fd8ac1f9546dac">MinSeconds</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a6604007404964ecd88a8610f3a5687cc">MinInt64</a> / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a4cf2951a09bf3797e23b5d8aa3742dfd">TicksPerSecond</a></td></tr>
<tr class="separator:a77601e07870e35af96fd8ac1f9546dac inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8edfdab4d6ed164ef4e4a971200dde6d inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a8edfdab4d6ed164ef4e4a971200dde6d"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a8edfdab4d6ed164ef4e4a971200dde6d">MaxMilliSeconds</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a13e2cce25b750cddaddf6d1432c40be3">MaxInt64</a> / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#abba4be8174d0219af2624b4665516166">TicksPerMillisecond</a></td></tr>
<tr class="separator:a8edfdab4d6ed164ef4e4a971200dde6d inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73aab427a9558e1e9f199437ab519034 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a73aab427a9558e1e9f199437ab519034"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a73aab427a9558e1e9f199437ab519034">MinMilliSeconds</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a6604007404964ecd88a8610f3a5687cc">MinInt64</a> / <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#abba4be8174d0219af2624b4665516166">TicksPerMillisecond</a></td></tr>
<tr class="separator:a73aab427a9558e1e9f199437ab519034 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c82ca99f570ff0e3044012f024b6d67 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a3c82ca99f570ff0e3044012f024b6d67"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a3c82ca99f570ff0e3044012f024b6d67">UnixEpoch</a> = 621355968000000000LL</td></tr>
<tr class="separator:a3c82ca99f570ff0e3044012f024b6d67 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69cb3a665289c66e6de7e963ec5c13ef inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a69cb3a665289c66e6de7e963ec5c13ef"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a69cb3a665289c66e6de7e963ec5c13ef">NtpEpoch</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a3c82ca99f570ff0e3044012f024b6d67">UnixEpoch</a> - ( 2208988800 * <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a4cf2951a09bf3797e23b5d8aa3742dfd">TicksPerSecond</a> )</td></tr>
<tr class="separator:a69cb3a665289c66e6de7e963ec5c13ef inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1223bbc4cea693403b2b5c9790f28c11 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a1223bbc4cea693403b2b5c9790f28c11"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1223bbc4cea693403b2b5c9790f28c11">DaysPerYear</a> = 365</td></tr>
<tr class="separator:a1223bbc4cea693403b2b5c9790f28c11 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3065a095919ee11a5be2a9543aae9fb inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_ae3065a095919ee11a5be2a9543aae9fb"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ae3065a095919ee11a5be2a9543aae9fb">DaysPer4Years</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1223bbc4cea693403b2b5c9790f28c11">DaysPerYear</a> * 4 + 1</td></tr>
<tr class="separator:ae3065a095919ee11a5be2a9543aae9fb inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a305157fcdb3ecc5620e04ac4ee6d0eb0 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a305157fcdb3ecc5620e04ac4ee6d0eb0"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a305157fcdb3ecc5620e04ac4ee6d0eb0">DaysPer100Years</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ae3065a095919ee11a5be2a9543aae9fb">DaysPer4Years</a> * 25 - 1</td></tr>
<tr class="separator:a305157fcdb3ecc5620e04ac4ee6d0eb0 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82205f11f462559dd389c7ed88cbe563 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a82205f11f462559dd389c7ed88cbe563"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a82205f11f462559dd389c7ed88cbe563">DaysPer400Years</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a305157fcdb3ecc5620e04ac4ee6d0eb0">DaysPer100Years</a> * 4 + 1</td></tr>
<tr class="separator:a82205f11f462559dd389c7ed88cbe563 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d9d58e33c0a9948038a7c98856b4827 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a3d9d58e33c0a9948038a7c98856b4827"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a3d9d58e33c0a9948038a7c98856b4827">DaysTo1601</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a82205f11f462559dd389c7ed88cbe563">DaysPer400Years</a> * 4</td></tr>
<tr class="separator:a3d9d58e33c0a9948038a7c98856b4827 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc03d7d12bbc9cb66480b4fdf742d5c4 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_adc03d7d12bbc9cb66480b4fdf742d5c4"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#adc03d7d12bbc9cb66480b4fdf742d5c4">DaysTo1899</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a82205f11f462559dd389c7ed88cbe563">DaysPer400Years</a> * 4 + <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a305157fcdb3ecc5620e04ac4ee6d0eb0">DaysPer100Years</a> * 3 - 367</td></tr>
<tr class="separator:adc03d7d12bbc9cb66480b4fdf742d5c4 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada00421c14a24b3f0cdea4fd5a3200a8 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_ada00421c14a24b3f0cdea4fd5a3200a8"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ada00421c14a24b3f0cdea4fd5a3200a8">DaysTo10000</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a82205f11f462559dd389c7ed88cbe563">DaysPer400Years</a> * 25 - 366</td></tr>
<tr class="separator:ada00421c14a24b3f0cdea4fd5a3200a8 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab92d993ec33ce8dc5a8f02fc1bb05830 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_ab92d993ec33ce8dc5a8f02fc1bb05830"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ab92d993ec33ce8dc5a8f02fc1bb05830">MinTicks</a> = 0</td></tr>
<tr class="separator:ab92d993ec33ce8dc5a8f02fc1bb05830 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5eac8922159f6827f6bb5c4be139ddd inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_ae5eac8922159f6827f6bb5c4be139ddd"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ae5eac8922159f6827f6bb5c4be139ddd">MaxTicks</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ada00421c14a24b3f0cdea4fd5a3200a8">DaysTo10000</a> * <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a> - 1</td></tr>
<tr class="separator:ae5eac8922159f6827f6bb5c4be139ddd inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1353924760ddbcb21258c05a5a1c2c69 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a1353924760ddbcb21258c05a5a1c2c69"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1353924760ddbcb21258c05a5a1c2c69">MaxMillis</a> = static_cast&lt;long long&gt;( <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ada00421c14a24b3f0cdea4fd5a3200a8">DaysTo10000</a> )* <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#ace2a40f7379a8b239d1553f697289564">MillisPerDay</a></td></tr>
<tr class="separator:a1353924760ddbcb21258c05a5a1c2c69 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16cec7cbadfe899a6b409904129ff322 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a16cec7cbadfe899a6b409904129ff322"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a16cec7cbadfe899a6b409904129ff322">FileTimeOffset</a> = static_cast&lt;long long&gt;( <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a3d9d58e33c0a9948038a7c98856b4827">DaysTo1601</a> ) * <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a></td></tr>
<tr class="separator:a16cec7cbadfe899a6b409904129ff322 inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a2370f0fdc935f49e82ca733fdc417f inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a7a2370f0fdc935f49e82ca733fdc417f"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a7a2370f0fdc935f49e82ca733fdc417f">DoubleDateOffset</a> = static_cast&lt;long long&gt;( <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#adc03d7d12bbc9cb66480b4fdf742d5c4">DaysTo1899</a> ) * <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a></td></tr>
<tr class="separator:a7a2370f0fdc935f49e82ca733fdc417f inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1066bcbf9bbb974432c463c5804aad9a inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a1066bcbf9bbb974432c463c5804aad9a"><td class="memItemLeft" align="right" valign="top">static constexpr long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1066bcbf9bbb974432c463c5804aad9a">OADateMinAsTicks</a> = ( static_cast&lt;long long&gt;( <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a305157fcdb3ecc5620e04ac4ee6d0eb0">DaysPer100Years</a> ) - <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a1223bbc4cea693403b2b5c9790f28c11">DaysPerYear</a> ) * <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#aa20b767f3edb36fcbf23ee7607b257d6">TicksPerDay</a></td></tr>
<tr class="separator:a1066bcbf9bbb974432c463c5804aad9a inherit pub_static_attribs_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ab1a45ca84b6fe270563337346bbfb6b8" id="r_ab1a45ca84b6fe270563337346bbfb6b8"><td class="memItemLeft" align="right" valign="top">long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab1a45ca84b6fe270563337346bbfb6b8">ticks_</a></td></tr>
<tr class="separator:ab1a45ca84b6fe270563337346bbfb6b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a1071a0047f949a9e26e514e598a211ac" id="r_a1071a0047f949a9e26e514e598a211ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> friend std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1071a0047f949a9e26e514e598a211ac">operator&lt;&lt;</a> (std::ostream &amp;stream, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;dateTime)</td></tr>
<tr class="separator:a1071a0047f949a9e26e514e598a211ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_time_base')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml">Harlinn::Common::Core::TimeBase</a></td></tr>
<tr class="memitem:a6ff1d522958b304e14f8a822c38c5e89 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_time_base" id="r_a6ff1d522958b304e14f8a822c38c5e89"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_base.xhtml#a6ff1d522958b304e14f8a822c38c5e89">DaysToMonth</a> = std::array&lt;int, 13&gt;</td></tr>
<tr class="separator:a6ff1d522958b304e14f8a822c38c5e89 inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_time_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a55778a0adf3a9e5178d04951d0c48712" name="a55778a0adf3a9e5178d04951d0c48712"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55778a0adf3a9e5178d04951d0c48712">&#9670;&#160;</a></span>DateTime() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd5f2c7f136638f4cfc3f698b5ab69aa" name="abd5f2c7f136638f4cfc3f698b5ab69aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd5f2c7f136638f4cfc3f698b5ab69aa">&#9670;&#160;</a></span>DateTime() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>ticks</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abb2990eabcd006a02bba0e59df6c8b78" name="abb2990eabcd006a02bba0e59df6c8b78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb2990eabcd006a02bba0e59df6c8b78">&#9670;&#160;</a></span>DateTime() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">const std::chrono::system_clock::time_point &amp;</td>          <td class="paramname"><span class="paramname"><em>timePoint</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afb5b8a7be26746469460f091dad140d8" name="afb5b8a7be26746469460f091dad140d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb5b8a7be26746469460f091dad140d8">&#9670;&#160;</a></span>DateTime() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">const timeval &amp;</td>          <td class="paramname"><span class="paramname"><em>tv</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abc6905004ee2a7acde84f3c72ea05a89" name="abc6905004ee2a7acde84f3c72ea05a89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc6905004ee2a7acde84f3c72ea05a89">&#9670;&#160;</a></span>DateTime() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>days</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e7364f7c974a5680dd6906346fdd258" name="a2e7364f7c974a5680dd6906346fdd258"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e7364f7c974a5680dd6906346fdd258">&#9670;&#160;</a></span>DateTime() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a317017cdea55d79ff229335d7da3117f" name="a317017cdea55d79ff229335d7da3117f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a317017cdea55d79ff229335d7da3117f">&#9670;&#160;</a></span>DateTime() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>hour</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>minute</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>second</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a075e969785ef82f7280cf2ee425cb336" name="a075e969785ef82f7280cf2ee425cb336"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a075e969785ef82f7280cf2ee425cb336">&#9670;&#160;</a></span>DateTime() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::DateTime </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>hour</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>minute</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>second</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>millisecond</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab3abcb3da226752e546be36ed36cf8c3" name="ab3abcb3da226752e546be36ed36cf8c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3abcb3da226752e546be36ed36cf8c3">&#9670;&#160;</a></span>Add() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Add </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0696388312979eb15bdcf28c46797700" name="a0696388312979eb15bdcf28c46797700"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0696388312979eb15bdcf28c46797700">&#9670;&#160;</a></span>Add() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Add </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scale</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8dd02cc4edc004c55046aafa67f3d2ce" name="a8dd02cc4edc004c55046aafa67f3d2ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dd02cc4edc004c55046aafa67f3d2ce">&#9670;&#160;</a></span>AddDays()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddDays </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a23d268fbafa487132f0299744b97436d" name="a23d268fbafa487132f0299744b97436d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23d268fbafa487132f0299744b97436d">&#9670;&#160;</a></span>AddHours()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddHours </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6b37495f81cfc02e9294511a0e6c7bb9" name="a6b37495f81cfc02e9294511a0e6c7bb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b37495f81cfc02e9294511a0e6c7bb9">&#9670;&#160;</a></span>AddMilliseconds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddMilliseconds </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4adb8d1ba7d6a2cebf5b3260df842c17" name="a4adb8d1ba7d6a2cebf5b3260df842c17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4adb8d1ba7d6a2cebf5b3260df842c17">&#9670;&#160;</a></span>AddMinutes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddMinutes </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d3acbddb70c58a8d98f12babb5b8c71" name="a3d3acbddb70c58a8d98f12babb5b8c71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d3acbddb70c58a8d98f12babb5b8c71">&#9670;&#160;</a></span>AddMonths()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddMonths </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>months</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a92c59c7f6e75172979b4c6b5ea448628" name="a92c59c7f6e75172979b4c6b5ea448628"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92c59c7f6e75172979b4c6b5ea448628">&#9670;&#160;</a></span>AddSeconds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddSeconds </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3833dd8acacd17d26524a0e40249347d" name="a3833dd8acacd17d26524a0e40249347d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3833dd8acacd17d26524a0e40249347d">&#9670;&#160;</a></span>AddTicks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddTicks </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab912cdd69096e7bf409004501dbb8853" name="ab912cdd69096e7bf409004501dbb8853"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab912cdd69096e7bf409004501dbb8853">&#9670;&#160;</a></span>AddYears()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::AddYears </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a97e704f35b119a851648f1408e1d5ed8" name="a97e704f35b119a851648f1408e1d5ed8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e704f35b119a851648f1408e1d5ed8">&#9670;&#160;</a></span>AssingTo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp; Harlinn::Common::Core::DateTime::AssingTo </td>
          <td>(</td>
          <td class="paramtype">SYSTEMTIME &amp;</td>          <td class="paramname"><span class="paramname"><em>systemTime</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a463e980dddb456390fcf00603a25e537" name="a463e980dddb456390fcf00603a25e537"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a463e980dddb456390fcf00603a25e537">&#9670;&#160;</a></span>Compare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr int Harlinn::Common::Core::DateTime::Compare </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>first</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>second</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e0e75ee908de6ef9e651598e315175c" name="a6e0e75ee908de6ef9e651598e315175c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e0e75ee908de6ef9e651598e315175c">&#9670;&#160;</a></span>CompareTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::CompareTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7dadc293243d798672772a2cc1e7a226" name="a7dadc293243d798672772a2cc1e7a226"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dadc293243d798672772a2cc1e7a226">&#9670;&#160;</a></span>Date()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Date </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a050f2a538c2b405f31810cb4ca8955ff" name="a050f2a538c2b405f31810cb4ca8955ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a050f2a538c2b405f31810cb4ca8955ff">&#9670;&#160;</a></span>DateToAnsiString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> Harlinn::Common::Core::DateTime::DateToAnsiString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afbcf68d89fc54c8ef6b7683533dbcd84" name="afbcf68d89fc54c8ef6b7683533dbcd84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbcf68d89fc54c8ef6b7683533dbcd84">&#9670;&#160;</a></span>DateToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::DateTime::DateToString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b3d1b7f25103fb7160e41b47e7d0961" name="a4b3d1b7f25103fb7160e41b47e7d0961"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3d1b7f25103fb7160e41b47e7d0961">&#9670;&#160;</a></span>DateToTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::DateToTicks </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa9d2304a5207d9bf0a428cb8b065e2c" name="aaa9d2304a5207d9bf0a428cb8b065e2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa9d2304a5207d9bf0a428cb8b065e2c">&#9670;&#160;</a></span>Day()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Day </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a363c67ecc5f519794e5bf6b2ba14502c" name="a363c67ecc5f519794e5bf6b2ba14502c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a363c67ecc5f519794e5bf6b2ba14502c">&#9670;&#160;</a></span>DayOfWeek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a663636b97aa32afb14b0c0d507343375">DayOfWeek</a> Harlinn::Common::Core::DateTime::DayOfWeek </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a728e622d3254ffe16571b83248717535" name="a728e622d3254ffe16571b83248717535"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a728e622d3254ffe16571b83248717535">&#9670;&#160;</a></span>DayOfYear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::DayOfYear </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aada37608343e756e7f8d2fe7b8c70a25" name="aada37608343e756e7f8d2fe7b8c70a25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aada37608343e756e7f8d2fe7b8c70a25">&#9670;&#160;</a></span>DaysInMonth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::DaysInMonth </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5679092d910233f46fbfb0e25afd5096" name="a5679092d910233f46fbfb0e25afd5096"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5679092d910233f46fbfb0e25afd5096">&#9670;&#160;</a></span>DoubleDateToTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::DoubleDateToTicks </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a20775b513590f82d730c4b3f6a779f04" name="a20775b513590f82d730c4b3f6a779f04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20775b513590f82d730c4b3f6a779f04">&#9670;&#160;</a></span>FromBinary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromBinary </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>dateData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae00e08234218ab38c36840d496a09491" name="ae00e08234218ab38c36840d496a09491"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae00e08234218ab38c36840d496a09491">&#9670;&#160;</a></span>FromFileTime() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromFileTime </td>
          <td>(</td>
          <td class="paramtype">FILETIME</td>          <td class="paramname"><span class="paramname"><em>fileTime</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a350b7357da9360e3bb133f46d7bcc16d" name="a350b7357da9360e3bb133f46d7bcc16d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a350b7357da9360e3bb133f46d7bcc16d">&#9670;&#160;</a></span>FromFileTime() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromFileTime </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>fileTime</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ace3c0e46100b43e283fe4ac300c4e950" name="ace3c0e46100b43e283fe4ac300c4e950"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace3c0e46100b43e283fe4ac300c4e950">&#9670;&#160;</a></span>FromNTP() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromNTP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a></td>          <td class="paramname"><span class="paramname"><em>ntpTime</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c4c7d862af20c1b5120c2dab9900295" name="a5c4c7d862af20c1b5120c2dab9900295"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c4c7d862af20c1b5120c2dab9900295">&#9670;&#160;</a></span>FromNTP() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromNTP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>secondsSince1900</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>fraction</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a00477c6e7279aa306d07224e78481a9c" name="a00477c6e7279aa306d07224e78481a9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00477c6e7279aa306d07224e78481a9c">&#9670;&#160;</a></span>FromOADate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromOADate </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>d</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a84b59bcb504849794ff5bf7013ce77b2" name="a84b59bcb504849794ff5bf7013ce77b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84b59bcb504849794ff5bf7013ce77b2">&#9670;&#160;</a></span>FromTimePoint()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromTimePoint </td>
          <td>(</td>
          <td class="paramtype">std::chrono::system_clock::time_point</td>          <td class="paramname"><span class="paramname"><em>timePoint</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61f28867c0df28db31e17d12894a44cd" name="a61f28867c0df28db31e17d12894a44cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61f28867c0df28db31e17d12894a44cd">&#9670;&#160;</a></span>FromTimeval()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromTimeval </td>
          <td>(</td>
          <td class="paramtype">const timeval &amp;</td>          <td class="paramname"><span class="paramname"><em>tv</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6ea95202bfc73c26a89a96fe9ca46ff4" name="a6ea95202bfc73c26a89a96fe9ca46ff4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ea95202bfc73c26a89a96fe9ca46ff4">&#9670;&#160;</a></span>FromUDate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::FromUDate </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>d</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a28de950ab858a786a384e70c6312d860" name="a28de950ab858a786a384e70c6312d860"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28de950ab858a786a384e70c6312d860">&#9670;&#160;</a></span>GetDatePart()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::GetDatePart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a2bad736145da8233a22d4e06ec9623e5">DatePart</a></td>          <td class="paramname"><span class="paramname"><em>datePart</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3351a921817df2589d7095035442740e" name="a3351a921817df2589d7095035442740e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3351a921817df2589d7095035442740e">&#9670;&#160;</a></span>GetYearMonthDay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::DateTime::GetYearMonthDay </td>
          <td>(</td>
          <td class="paramtype">int &amp;</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;</td>          <td class="paramname"><span class="paramname"><em>day</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a75f740ef87e16615174c6dc21f9bba11" name="a75f740ef87e16615174c6dc21f9bba11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75f740ef87e16615174c6dc21f9bba11">&#9670;&#160;</a></span>hash()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Harlinn::Common::Core::DateTime::hash </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4c7341a659607cc3b2bb9886ecb9974e" name="a4c7341a659607cc3b2bb9886ecb9974e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c7341a659607cc3b2bb9886ecb9974e">&#9670;&#160;</a></span>Hour()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Hour </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a88d0ef3fc37b866f1583f39a93b3603c" name="a88d0ef3fc37b866f1583f39a93b3603c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88d0ef3fc37b866f1583f39a93b3603c">&#9670;&#160;</a></span>IsDaylightSavingTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::IsDaylightSavingTime </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9467f4af4a579aaa59418ded05e5b91d" name="a9467f4af4a579aaa59418ded05e5b91d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9467f4af4a579aaa59418ded05e5b91d">&#9670;&#160;</a></span>IsLeapYear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::IsLeapYear </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af8c0a51c6d5f8a61c4bbfee5ac1befb6" name="af8c0a51c6d5f8a61c4bbfee5ac1befb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8c0a51c6d5f8a61c4bbfee5ac1befb6">&#9670;&#160;</a></span>JulianDateToTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::JulianDateToTicks </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="add10abdce4172e508d8fdc4c911a059d" name="add10abdce4172e508d8fdc4c911a059d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add10abdce4172e508d8fdc4c911a059d">&#9670;&#160;</a></span>MaxValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::MaxValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aad45f49326e46c92bb79b69cc09e3385" name="aad45f49326e46c92bb79b69cc09e3385"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad45f49326e46c92bb79b69cc09e3385">&#9670;&#160;</a></span>Millisecond()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Millisecond </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae92a650379e22ace488c52e92104d112" name="ae92a650379e22ace488c52e92104d112"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae92a650379e22ace488c52e92104d112">&#9670;&#160;</a></span>Minute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Minute </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ce2f2e9517d4dd914df9f0e4527762b" name="a1ce2f2e9517d4dd914df9f0e4527762b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ce2f2e9517d4dd914df9f0e4527762b">&#9670;&#160;</a></span>MinValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::MinValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a92b20bd631a52141206e41ac67db329a" name="a92b20bd631a52141206e41ac67db329a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92b20bd631a52141206e41ac67db329a">&#9670;&#160;</a></span>Month()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Month </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d20c4c9773ad71e80df802bf107194c" name="a6d20c4c9773ad71e80df802bf107194c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d20c4c9773ad71e80df802bf107194c">&#9670;&#160;</a></span>Now()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Now </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb9b81ffba1cfd9e5a65c3984f99f06e" name="adb9b81ffba1cfd9e5a65c3984f99f06e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb9b81ffba1cfd9e5a65c3984f99f06e">&#9670;&#160;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::DateTime::operator bool </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a444afcf9f556addd538b957b64392004" name="a444afcf9f556addd538b957b64392004"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a444afcf9f556addd538b957b64392004">&#9670;&#160;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7f38a7fffbb524d75dc7478028e46519" name="a7f38a7fffbb524d75dc7478028e46519"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f38a7fffbb524d75dc7478028e46519">&#9670;&#160;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>timeSpan</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1497a8a4bb57ebce5867dec4b5f9bfc7" name="a1497a8a4bb57ebce5867dec4b5f9bfc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1497a8a4bb57ebce5867dec4b5f9bfc7">&#9670;&#160;</a></span>operator+=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp; Harlinn::Common::Core::DateTime::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>timeSpan</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a00f054f1a14ecb1c851652a99afb881a" name="a00f054f1a14ecb1c851652a99afb881a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00f054f1a14ecb1c851652a99afb881a">&#9670;&#160;</a></span>operator-() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> Harlinn::Common::Core::DateTime::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e6203a16e658b88eb78900e13477e72" name="a6e6203a16e658b88eb78900e13477e72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e6203a16e658b88eb78900e13477e72">&#9670;&#160;</a></span>operator-() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>timeSpan</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a5dbc939fe0d3ee269d02c77706a84e" name="a5a5dbc939fe0d3ee269d02c77706a84e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a5dbc939fe0d3ee269d02c77706a84e">&#9670;&#160;</a></span>operator-=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp; Harlinn::Common::Core::DateTime::operator-= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>timeSpan</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c34277a9565ea5a09978b39dbf50e90" name="a2c34277a9565ea5a09978b39dbf50e90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c34277a9565ea5a09978b39dbf50e90">&#9670;&#160;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a676fd79fae02b31b3aa4af93db441ab5" name="a676fd79fae02b31b3aa4af93db441ab5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a676fd79fae02b31b3aa4af93db441ab5">&#9670;&#160;</a></span>operator&lt;=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2b2680160105a186c798427e3ddadcbf" name="a2b2680160105a186c798427e3ddadcbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b2680160105a186c798427e3ddadcbf">&#9670;&#160;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp; Harlinn::Common::Core::DateTime::operator= </td>
          <td>(</td>
          <td class="paramtype">const std::chrono::system_clock::time_point &amp;</td>          <td class="paramname"><span class="paramname"><em>timePoint</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a28aa65bbb7e15325f21ce80fd82f6d87" name="a28aa65bbb7e15325f21ce80fd82f6d87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28aa65bbb7e15325f21ce80fd82f6d87">&#9670;&#160;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa82c6d574d2f155af661395f650e21b2" name="aa82c6d574d2f155af661395f650e21b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa82c6d574d2f155af661395f650e21b2">&#9670;&#160;</a></span>operator&gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a03a74d63b3699598313cf2b6e70a6ee5" name="a03a74d63b3699598313cf2b6e70a6ee5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03a74d63b3699598313cf2b6e70a6ee5">&#9670;&#160;</a></span>operator&gt;=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad2d26cb7d0e94c060f1ee2af76316e17" name="ad2d26cb7d0e94c060f1ee2af76316e17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2d26cb7d0e94c060f1ee2af76316e17">&#9670;&#160;</a></span>Parse() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Parse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6c6271dad22169070276db4b94115c6d" name="a6c6271dad22169070276db4b94115c6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c6271dad22169070276db4b94115c6d">&#9670;&#160;</a></span>Parse() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Parse </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa689b4d8381ac734cd54a6d49d2d3b80" name="aa689b4d8381ac734cd54a6d49d2d3b80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa689b4d8381ac734cd54a6d49d2d3b80">&#9670;&#160;</a></span>Parse() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Parse </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa26508a875f1b71c2ff41c897e42560c" name="aa26508a875f1b71c2ff41c897e42560c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa26508a875f1b71c2ff41c897e42560c">&#9670;&#160;</a></span>Parse() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Parse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a83a65def46a048ffe35613f918b7b046" name="a83a65def46a048ffe35613f918b7b046"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83a65def46a048ffe35613f918b7b046">&#9670;&#160;</a></span>Second()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Second </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abc80c540b0c5271a3db9acc7496e0d02" name="abc80c540b0c5271a3db9acc7496e0d02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc80c540b0c5271a3db9acc7496e0d02">&#9670;&#160;</a></span>Subtract() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> Harlinn::Common::Core::DateTime::Subtract </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a39df0abfb71031b6f2a46f37014776e6" name="a39df0abfb71031b6f2a46f37014776e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39df0abfb71031b6f2a46f37014776e6">&#9670;&#160;</a></span>Subtract() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Subtract </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ada4a1fb7abc67abf21aa804b355e977b" name="ada4a1fb7abc67abf21aa804b355e977b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada4a1fb7abc67abf21aa804b355e977b">&#9670;&#160;</a></span>SystemTimeToTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::SystemTimeToTicks </td>
          <td>(</td>
          <td class="paramtype">const SYSTEMTIME &amp;</td>          <td class="paramname"><span class="paramname"><em>systemTime</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a4b4bf5a82d6848572f1e7171a9532f" name="a3a4b4bf5a82d6848572f1e7171a9532f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a4b4bf5a82d6848572f1e7171a9532f">&#9670;&#160;</a></span>Ticks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::Ticks </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7d6f4fa44da179dfa5d007bb6fd7b2c1" name="a7d6f4fa44da179dfa5d007bb6fd7b2c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d6f4fa44da179dfa5d007bb6fd7b2c1">&#9670;&#160;</a></span>TicksToOADate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Common::Core::DateTime::TicksToOADate </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a92152becdf071e8d8735f4d6e891a413" name="a92152becdf071e8d8735f4d6e891a413"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92152becdf071e8d8735f4d6e891a413">&#9670;&#160;</a></span>TimeOfDay()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> Harlinn::Common::Core::DateTime::TimeOfDay </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74054f6a232f56dfa0b8cc85e03a1813" name="a74054f6a232f56dfa0b8cc85e03a1813"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74054f6a232f56dfa0b8cc85e03a1813">&#9670;&#160;</a></span>TimeToAnsiString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> Harlinn::Common::Core::DateTime::TimeToAnsiString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ffd528c472dc9e69500a1169b7178b1" name="a9ffd528c472dc9e69500a1169b7178b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ffd528c472dc9e69500a1169b7178b1">&#9670;&#160;</a></span>TimeToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::DateTime::TimeToString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a30446fd4113875c7eb9c65aefc32f0f9" name="a30446fd4113875c7eb9c65aefc32f0f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30446fd4113875c7eb9c65aefc32f0f9">&#9670;&#160;</a></span>TimeToTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::TimeToTicks </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>hour</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>minute</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>second</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afe49debab0e1467b9f9fbd1fe95c630d" name="afe49debab0e1467b9f9fbd1fe95c630d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe49debab0e1467b9f9fbd1fe95c630d">&#9670;&#160;</a></span>ToAnsiString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aedb2935f481d7ca3cd3db3cd88dc1b40">AnsiString</a> Harlinn::Common::Core::DateTime::ToAnsiString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18cf1cbc00df67ce9a235ca47282104d" name="a18cf1cbc00df67ce9a235ca47282104d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18cf1cbc00df67ce9a235ca47282104d">&#9670;&#160;</a></span>ToBinary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::ToBinary </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac6d20ab84e2dcf40a405083086c8d76" name="aac6d20ab84e2dcf40a405083086c8d76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac6d20ab84e2dcf40a405083086c8d76">&#9670;&#160;</a></span>Today()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::Today </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a98f8a2e3c184e576b0795ee5daef1b38" name="a98f8a2e3c184e576b0795ee5daef1b38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98f8a2e3c184e576b0795ee5daef1b38">&#9670;&#160;</a></span>ToFileTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::ToFileTime </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a085323246369f89d2a8eae0fb7fe7aa6" name="a085323246369f89d2a8eae0fb7fe7aa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a085323246369f89d2a8eae0fb7fe7aa6">&#9670;&#160;</a></span>ToLocalTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::ToLocalTicks </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>ticksInUtc</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad230991421d4f4c7568d9ffb5c59d007" name="ad230991421d4f4c7568d9ffb5c59d007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad230991421d4f4c7568d9ffb5c59d007">&#9670;&#160;</a></span>ToLocalTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::ToLocalTime </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa840966794b0ba3b3a106bbd32daeffd" name="aa840966794b0ba3b3a106bbd32daeffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa840966794b0ba3b3a106bbd32daeffd">&#9670;&#160;</a></span>ToNTP()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a> Harlinn::Common::Core::DateTime::ToNTP </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4568a2f7bc39eec45ed04a9806c2c179" name="a4568a2f7bc39eec45ed04a9806c2c179"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4568a2f7bc39eec45ed04a9806c2c179">&#9670;&#160;</a></span>ToOADate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Common::Core::DateTime::ToOADate </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3595a43da297d1c968df23c0c6420e7e" name="a3595a43da297d1c968df23c0c6420e7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3595a43da297d1c968df23c0c6420e7e">&#9670;&#160;</a></span>ToString() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::DateTime::ToString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4a32cac561ae94251c64bf70f8635153" name="a4a32cac561ae94251c64bf70f8635153"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a32cac561ae94251c64bf70f8635153">&#9670;&#160;</a></span>ToString() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::DateTime::ToString </td>
          <td>(</td>
          <td class="paramtype">const std::wstring_view &amp;</td>          <td class="paramname"><span class="paramname"><em>format</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5cf791c5abfb18367eb78dac13d34c30" name="a5cf791c5abfb18367eb78dac13d34c30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cf791c5abfb18367eb78dac13d34c30">&#9670;&#160;</a></span>ToTicks() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr long long Harlinn::Common::Core::DateTime::ToTicks </td>
          <td>(</td>
          <td class="paramtype">const timeval &amp;</td>          <td class="paramname"><span class="paramname"><em>tv</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4f6a1bb62160ba1980712b010e660921" name="a4f6a1bb62160ba1980712b010e660921"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f6a1bb62160ba1980712b010e660921">&#9670;&#160;</a></span>ToTicks() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::ToTicks </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>hour</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>minute</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>second</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>millisecond</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8f40cdea9645e36ce045580697999ec7" name="a8f40cdea9645e36ce045580697999ec7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f40cdea9645e36ce045580697999ec7">&#9670;&#160;</a></span>ToTimePoint()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::chrono::system_clock::time_point Harlinn::Common::Core::DateTime::ToTimePoint </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a575caa0985d114c09405b53150093952" name="a575caa0985d114c09405b53150093952"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a575caa0985d114c09405b53150093952">&#9670;&#160;</a></span>ToTimespec()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">timespec Harlinn::Common::Core::DateTime::ToTimespec </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a76c927cee4f769a8563d20acaef31a9d" name="a76c927cee4f769a8563d20acaef31a9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76c927cee4f769a8563d20acaef31a9d">&#9670;&#160;</a></span>ToTimeT()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">time_t Harlinn::Common::Core::DateTime::ToTimeT </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8fa74a6240ebb17ef38a217c0f87e031" name="a8fa74a6240ebb17ef38a217c0f87e031"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fa74a6240ebb17ef38a217c0f87e031">&#9670;&#160;</a></span>ToTimeval()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">timeval Harlinn::Common::Core::DateTime::ToTimeval </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aecb00443849287f2ca1f02fa70e0adb7" name="aecb00443849287f2ca1f02fa70e0adb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecb00443849287f2ca1f02fa70e0adb7">&#9670;&#160;</a></span>ToUDate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Common::Core::DateTime::ToUDate </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a72ff94b45c6539e3c3fdc6cb0643f60a" name="a72ff94b45c6539e3c3fdc6cb0643f60a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72ff94b45c6539e3c3fdc6cb0643f60a">&#9670;&#160;</a></span>ToUniversalTicks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::ToUniversalTicks </td>
          <td>(</td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>ticksInLocalTime</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab113a8e7bda4e5206a4ce7766417699c" name="ab113a8e7bda4e5206a4ce7766417699c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab113a8e7bda4e5206a4ce7766417699c">&#9670;&#160;</a></span>ToUniversalTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::ToUniversalTime </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7b329b4be015b40065073f69ca34a37" name="ae7b329b4be015b40065073f69ca34a37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7b329b4be015b40065073f69ca34a37">&#9670;&#160;</a></span>TryCreate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::TryCreate </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>year</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>month</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>day</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>hour</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>minute</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>second</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>millisecond</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a50e857e2da18ca723e1080b7e07497eb" name="a50e857e2da18ca723e1080b7e07497eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50e857e2da18ca723e1080b7e07497eb">&#9670;&#160;</a></span>TryParse() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a53d48f430aaf6b9a0690e09b4c05791b" name="a53d48f430aaf6b9a0690e09b4c05791b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53d48f430aaf6b9a0690e09b4c05791b">&#9670;&#160;</a></span>TryParse() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab065be6de2fb9abe49119121416b1a60" name="ab065be6de2fb9abe49119121416b1a60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab065be6de2fb9abe49119121416b1a60">&#9670;&#160;</a></span>TryParse() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9a64800fb70da76f497ee3b1da9ba4b6" name="a9a64800fb70da76f497ee3b1da9ba4b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a64800fb70da76f497ee3b1da9ba4b6">&#9670;&#160;</a></span>TryParse() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a35ca5cc5008351121c7d873cccaae101" name="a35ca5cc5008351121c7d873cccaae101"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35ca5cc5008351121c7d873cccaae101">&#9670;&#160;</a></span>TryParse() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d7ec73a6a320873f947d5acc4d3a90c" name="a4d7ec73a6a320873f947d5acc4d3a90c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d7ec73a6a320873f947d5acc4d3a90c">&#9670;&#160;</a></span>TryParse() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aea1f5103df749b1a04d36a9028a1f59c" name="aea1f5103df749b1a04d36a9028a1f59c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea1f5103df749b1a04d36a9028a1f59c">&#9670;&#160;</a></span>TryParse() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7dbe46094a4d8921cb02fc58dbc33833" name="a7dbe46094a4d8921cb02fc58dbc33833"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dbe46094a4d8921cb02fc58dbc33833">&#9670;&#160;</a></span>TryParse() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename StringT &gt; <br />
requires std::is_same_v&lt;StringT, std::wstring_view&gt; || std::is_same_v&lt;StringT, std::string_view&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a03bd11f38c339d4ad7884a08cbd58120" name="a03bd11f38c339d4ad7884a08cbd58120"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03bd11f38c339d4ad7884a08cbd58120">&#9670;&#160;</a></span>TryParse() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aed4306fe4569aca235254d690c5e21c1" name="aed4306fe4569aca235254d690c5e21c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed4306fe4569aca235254d690c5e21c1">&#9670;&#160;</a></span>TryParse() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c5e73ef96c613aef2611a4ac4af79f3" name="a5c5e73ef96c613aef2611a4ac4af79f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c5e73ef96c613aef2611a4ac4af79f3">&#9670;&#160;</a></span>TryParse() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const std::locale &amp;</td>          <td class="paramname"><span class="paramname"><em>locale</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="addf006d6d6c16f332d29705dbbd2bc41" name="addf006d6d6c16f332d29705dbbd2bc41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addf006d6d6c16f332d29705dbbd2bc41">&#9670;&#160;</a></span>TryParse() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd716504f1384d6633608dadca9c8e20" name="abd716504f1384d6633608dadca9c8e20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd716504f1384d6633608dadca9c8e20">&#9670;&#160;</a></span>TryParse() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename StringT &gt; <br />
requires std::is_same_v&lt;StringT, std::wstring_view&gt; || std::is_same_v&lt;StringT, std::string_view&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a36f7514ba9f101e0c9fafe558016dc" name="a2a36f7514ba9f101e0c9fafe558016dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a36f7514ba9f101e0c9fafe558016dc">&#9670;&#160;</a></span>TryParse() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;SimpleStringLike StringT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a454cfa3ef0d489c72b95421fcedcd645" name="a454cfa3ef0d489c72b95421fcedcd645"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a454cfa3ef0d489c72b95421fcedcd645">&#9670;&#160;</a></span>TryParse() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename StringT &gt; <br />
requires std::is_same_v&lt;StringT, std::wstring_view&gt; || std::is_same_v&lt;StringT, std::string_view&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const StringT &amp;</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f265e26bc857836bd56fd2f16d15923" name="a3f265e26bc857836bd56fd2f16d15923"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f265e26bc857836bd56fd2f16d15923">&#9670;&#160;</a></span>TryParse() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a949ffde8005b47a73d745ad9afce83f0" name="a949ffde8005b47a73d745ad9afce83f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a949ffde8005b47a73d745ad9afce83f0">&#9670;&#160;</a></span>TryParse() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>format</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bda6c0355a72081a791fbe20c5c7549" name="a2bda6c0355a72081a791fbe20c5c7549"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bda6c0355a72081a791fbe20c5c7549">&#9670;&#160;</a></span>TryParse() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Harlinn::Common::Core::DateTime::TryParse </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>text</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>textLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a06f371ffca7d7ab015471d723efda3ec" name="a06f371ffca7d7ab015471d723efda3ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06f371ffca7d7ab015471d723efda3ec">&#9670;&#160;</a></span>UtcNow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> Harlinn::Common::Core::DateTime::UtcNow </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a146b9db29ca89d8a94c13d06f4d9ad8f" name="a146b9db29ca89d8a94c13d06f4d9ad8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a146b9db29ca89d8a94c13d06f4d9ad8f">&#9670;&#160;</a></span>Year()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::DateTime::Year </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Symbol Documentation</h2>
<a id="a1071a0047f949a9e26e514e598a211ac" name="a1071a0047f949a9e26e514e598a211ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1071a0047f949a9e26e514e598a211ac">&#9670;&#160;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> friend std::ostream &amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;</td>          <td class="paramname"><span class="paramname"><em>stream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>dateTime</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ade18ecce450543df93e8513b4aef9159" name="ade18ecce450543df93e8513b4aef9159"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade18ecce450543df93e8513b4aef9159">&#9670;&#160;</a></span>DEFAULT_FORMAT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char Harlinn::Common::Core::DateTime::DEFAULT_FORMAT[] = &quot;%FT%T%Z&quot;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a83f71ae93d42c213aec15491bd8c6ee5" name="a83f71ae93d42c213aec15491bd8c6ee5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83f71ae93d42c213aec15491bd8c6ee5">&#9670;&#160;</a></span>DEFAULT_WIDE_FORMAT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wchar_t Harlinn::Common::Core::DateTime::DEFAULT_WIDE_FORMAT[] = L&quot;%FT%T%Z&quot;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab1a45ca84b6fe270563337346bbfb6b8" name="ab1a45ca84b6fe270563337346bbfb6b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1a45ca84b6fe270563337346bbfb6b8">&#9670;&#160;</a></span>ticks_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long long Harlinn::Common::Core::DateTime::ticks_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_h_c_c_date_time_8h.xhtml">HCCDateTime.h</a></li>
<li><a class="el" href="_h_c_c_date_time_8cpp.xhtml">HCCDateTime.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_date_time.xhtml">DateTime</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
