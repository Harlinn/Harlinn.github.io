<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Blocks::BlockIterator&lt; BlockManagerType, BlockType &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Blocks::BlockIterator&lt; BlockManagerType, BlockType &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCBlocks.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aae343854393d49942a28a5e27d5f336c" id="r_aae343854393d49942a28a5e27d5f336c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aae343854393d49942a28a5e27d5f336c">value_type</a> = BlockType</td></tr>
<tr class="separator:aae343854393d49942a28a5e27d5f336c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d2a9d05fa23c4080e42a0b82fbf10fb" id="r_a9d2a9d05fa23c4080e42a0b82fbf10fb"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9d2a9d05fa23c4080e42a0b82fbf10fb">difference_type</a> = std::ptrdiff_t</td></tr>
<tr class="separator:a9d2a9d05fa23c4080e42a0b82fbf10fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17742de1a8d4f7c19d3f80f1c538f28d" id="r_a17742de1a8d4f7c19d3f80f1c538f28d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a17742de1a8d4f7c19d3f80f1c538f28d">pointer</a> = BlockType*</td></tr>
<tr class="separator:a17742de1a8d4f7c19d3f80f1c538f28d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5183c3afb9aebaaaf5729c689f058610" id="r_a5183c3afb9aebaaaf5729c689f058610"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5183c3afb9aebaaaf5729c689f058610">reference</a> = BlockType&amp;</td></tr>
<tr class="separator:a5183c3afb9aebaaaf5729c689f058610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32304e22c2f58d8bfae4982d6aab5a8f" id="r_a32304e22c2f58d8bfae4982d6aab5a8f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a32304e22c2f58d8bfae4982d6aab5a8f">iterator_category</a> = std::bidirectional_iterator_tag</td></tr>
<tr class="separator:a32304e22c2f58d8bfae4982d6aab5a8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a675a835fb4e9d5d72c210ee34fb7f1c2" id="r_a675a835fb4e9d5d72c210ee34fb7f1c2"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a675a835fb4e9d5d72c210ee34fb7f1c2">BlockIterator</a> (BlockManagerType &amp;blockManager) noexcept</td></tr>
<tr class="separator:a675a835fb4e9d5d72c210ee34fb7f1c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceaba1e5a54cff3fb32936783baeb28a" id="r_aceaba1e5a54cff3fb32936783baeb28a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aceaba1e5a54cff3fb32936783baeb28a">BlockIterator</a> (BlockManagerType &amp;blockManager, <a class="el" href="#a17742de1a8d4f7c19d3f80f1c538f28d">pointer</a> current) noexcept</td></tr>
<tr class="separator:aceaba1e5a54cff3fb32936783baeb28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af235e662a6b1cbfcebfc9b9eb36b2949" id="r_af235e662a6b1cbfcebfc9b9eb36b2949"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af235e662a6b1cbfcebfc9b9eb36b2949">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;other) const noexcept</td></tr>
<tr class="separator:af235e662a6b1cbfcebfc9b9eb36b2949"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acef9923a3798c27413844533ef13b25b" id="r_acef9923a3798c27413844533ef13b25b"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acef9923a3798c27413844533ef13b25b">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;other) const noexcept</td></tr>
<tr class="separator:acef9923a3798c27413844533ef13b25b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d1d6a5375feb2d363386494fd398054" id="r_a8d1d6a5375feb2d363386494fd398054"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="#a5183c3afb9aebaaaf5729c689f058610">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d1d6a5375feb2d363386494fd398054">operator*</a> () const noexcept</td></tr>
<tr class="separator:a8d1d6a5375feb2d363386494fd398054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa312e285001ec816019cfe3b73e2092d" id="r_aa312e285001ec816019cfe3b73e2092d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa312e285001ec816019cfe3b73e2092d">operator++</a> () noexcept</td></tr>
<tr class="separator:aa312e285001ec816019cfe3b73e2092d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fce081f06622df8d72964dcce4415eb" id="r_a5fce081f06622df8d72964dcce4415eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5fce081f06622df8d72964dcce4415eb">operator++</a> (int) noexcept</td></tr>
<tr class="separator:a5fce081f06622df8d72964dcce4415eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46bb7d36c755d4fe9874f8f273fc5072" id="r_a46bb7d36c755d4fe9874f8f273fc5072"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a46bb7d36c755d4fe9874f8f273fc5072">operator--</a> () noexcept</td></tr>
<tr class="separator:a46bb7d36c755d4fe9874f8f273fc5072"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab83bcdb461c2f0ac94d400479664ec49" id="r_ab83bcdb461c2f0ac94d400479664ec49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab83bcdb461c2f0ac94d400479664ec49">operator--</a> (int) noexcept</td></tr>
<tr class="separator:ab83bcdb461c2f0ac94d400479664ec49"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a0dcf1652863510dd8d0751dbb95343c7" id="r_a0dcf1652863510dd8d0751dbb95343c7"><td class="memItemLeft" align="right" valign="top">BlockManagerType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0dcf1652863510dd8d0751dbb95343c7">blockManager_</a></td></tr>
<tr class="separator:a0dcf1652863510dd8d0751dbb95343c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5fdb93d847948114b5bb08f9656cd99" id="r_ac5fdb93d847948114b5bb08f9656cd99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a17742de1a8d4f7c19d3f80f1c538f28d">pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac5fdb93d847948114b5bb08f9656cd99">current_</a></td></tr>
<tr class="separator:ac5fdb93d847948114b5bb08f9656cd99"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a9d2a9d05fa23c4080e42a0b82fbf10fb" name="a9d2a9d05fa23c4080e42a0b82fbf10fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d2a9d05fa23c4080e42a0b82fbf10fb">&#9670;&#160;</a></span>difference_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::difference_type = std::ptrdiff_t</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a32304e22c2f58d8bfae4982d6aab5a8f" name="a32304e22c2f58d8bfae4982d6aab5a8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32304e22c2f58d8bfae4982d6aab5a8f">&#9670;&#160;</a></span>iterator_category</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::iterator_category = std::bidirectional_iterator_tag</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a17742de1a8d4f7c19d3f80f1c538f28d" name="a17742de1a8d4f7c19d3f80f1c538f28d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17742de1a8d4f7c19d3f80f1c538f28d">&#9670;&#160;</a></span>pointer</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::pointer = BlockType*</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5183c3afb9aebaaaf5729c689f058610" name="a5183c3afb9aebaaaf5729c689f058610"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5183c3afb9aebaaaf5729c689f058610">&#9670;&#160;</a></span>reference</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::reference = BlockType&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aae343854393d49942a28a5e27d5f336c" name="aae343854393d49942a28a5e27d5f336c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae343854393d49942a28a5e27d5f336c">&#9670;&#160;</a></span>value_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::value_type = BlockType</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a675a835fb4e9d5d72c210ee34fb7f1c2" name="a675a835fb4e9d5d72c210ee34fb7f1c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a675a835fb4e9d5d72c210ee34fb7f1c2">&#9670;&#160;</a></span>BlockIterator() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::BlockIterator </td>
          <td>(</td>
          <td class="paramtype">BlockManagerType &amp;</td>          <td class="paramname"><span class="paramname"><em>blockManager</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aceaba1e5a54cff3fb32936783baeb28a" name="aceaba1e5a54cff3fb32936783baeb28a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aceaba1e5a54cff3fb32936783baeb28a">&#9670;&#160;</a></span>BlockIterator() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::BlockIterator </td>
          <td>(</td>
          <td class="paramtype">BlockManagerType &amp;</td>          <td class="paramname"><span class="paramname"><em>blockManager</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a17742de1a8d4f7c19d3f80f1c538f28d">pointer</a></td>          <td class="paramname"><span class="paramname"><em>current</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="acef9923a3798c27413844533ef13b25b" name="acef9923a3798c27413844533ef13b25b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acef9923a3798c27413844533ef13b25b">&#9670;&#160;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&lt; BlockManagerType, BlockType &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d1d6a5375feb2d363386494fd398054" name="a8d1d6a5375feb2d363386494fd398054"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d1d6a5375feb2d363386494fd398054">&#9670;&#160;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a5183c3afb9aebaaaf5729c689f058610">reference</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator* </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa312e285001ec816019cfe3b73e2092d" name="aa312e285001ec816019cfe3b73e2092d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa312e285001ec816019cfe3b73e2092d">&#9670;&#160;</a></span>operator++() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator++ </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5fce081f06622df8d72964dcce4415eb" name="a5fce081f06622df8d72964dcce4415eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fce081f06622df8d72964dcce4415eb">&#9670;&#160;</a></span>operator++() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator++ </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a46bb7d36c755d4fe9874f8f273fc5072" name="a46bb7d36c755d4fe9874f8f273fc5072"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46bb7d36c755d4fe9874f8f273fc5072">&#9670;&#160;</a></span>operator--() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator-- </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab83bcdb461c2f0ac94d400479664ec49" name="ab83bcdb461c2f0ac94d400479664ec49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab83bcdb461c2f0ac94d400479664ec49">&#9670;&#160;</a></span>operator--() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator-- </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af235e662a6b1cbfcebfc9b9eb36b2949" name="af235e662a6b1cbfcebfc9b9eb36b2949"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af235e662a6b1cbfcebfc9b9eb36b2949">&#9670;&#160;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&lt; BlockManagerType, BlockType &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0dcf1652863510dd8d0751dbb95343c7" name="a0dcf1652863510dd8d0751dbb95343c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dcf1652863510dd8d0751dbb95343c7">&#9670;&#160;</a></span>blockManager_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">BlockManagerType&amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::blockManager_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5fdb93d847948114b5bb08f9656cd99" name="ac5fdb93d847948114b5bb08f9656cd99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5fdb93d847948114b5bb08f9656cd99">&#9670;&#160;</a></span>current_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a17742de1a8d4f7c19d3f80f1c538f28d">pointer</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::current_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_blocks_8h.xhtml">HCCBlocks.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_blocks.xhtml">Blocks</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
