<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::IO::Blocks::BlockIterator&lt; BlockManagerType, BlockType &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::IO::Blocks::BlockIterator&lt; BlockManagerType, BlockType &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCBlocks.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aad8c7684d5ca86b5371ad79f6eeed387" id="r_aad8c7684d5ca86b5371ad79f6eeed387"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aad8c7684d5ca86b5371ad79f6eeed387">value_type</a> = BlockType</td></tr>
<tr class="separator:aad8c7684d5ca86b5371ad79f6eeed387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e40dde7c0718e5ba0e22dd8f61b9b5" id="r_a84e40dde7c0718e5ba0e22dd8f61b9b5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84e40dde7c0718e5ba0e22dd8f61b9b5">difference_type</a> = std::ptrdiff_t</td></tr>
<tr class="separator:a84e40dde7c0718e5ba0e22dd8f61b9b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb8cfc3774d38d7ca3ac5d88ab1f6b1b" id="r_abb8cfc3774d38d7ca3ac5d88ab1f6b1b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb8cfc3774d38d7ca3ac5d88ab1f6b1b">pointer</a> = BlockType*</td></tr>
<tr class="separator:abb8cfc3774d38d7ca3ac5d88ab1f6b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a5b42bddad020b4ee18b76aa339f43c" id="r_a8a5b42bddad020b4ee18b76aa339f43c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a5b42bddad020b4ee18b76aa339f43c">reference</a> = BlockType&amp;</td></tr>
<tr class="separator:a8a5b42bddad020b4ee18b76aa339f43c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a224c98519f3674ab357918eaa2a8e9de" id="r_a224c98519f3674ab357918eaa2a8e9de"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a224c98519f3674ab357918eaa2a8e9de">iterator_category</a> = std::bidirectional_iterator_tag</td></tr>
<tr class="separator:a224c98519f3674ab357918eaa2a8e9de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a549241bc9cc1d6d89a194d309646851c" id="r_a549241bc9cc1d6d89a194d309646851c"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a549241bc9cc1d6d89a194d309646851c">BlockIterator</a> (BlockManagerType &amp;blockManager) noexcept</td></tr>
<tr class="separator:a549241bc9cc1d6d89a194d309646851c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d2cac9eaa74dbb19114d16898500859" id="r_a4d2cac9eaa74dbb19114d16898500859"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d2cac9eaa74dbb19114d16898500859">BlockIterator</a> (BlockManagerType &amp;blockManager, <a class="el" href="#abb8cfc3774d38d7ca3ac5d88ab1f6b1b">pointer</a> current) noexcept</td></tr>
<tr class="separator:a4d2cac9eaa74dbb19114d16898500859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08c20a3c043aa584da5fd3836e5746ef" id="r_a08c20a3c043aa584da5fd3836e5746ef"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a08c20a3c043aa584da5fd3836e5746ef">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a08c20a3c043aa584da5fd3836e5746ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abba184c36c9956d5f2de3546f728f060" id="r_abba184c36c9956d5f2de3546f728f060"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abba184c36c9956d5f2de3546f728f060">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;other) const noexcept</td></tr>
<tr class="separator:abba184c36c9956d5f2de3546f728f060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc3b7cbd90ba22cbe09644d145a3db2e" id="r_abc3b7cbd90ba22cbe09644d145a3db2e"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="#a8a5b42bddad020b4ee18b76aa339f43c">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abc3b7cbd90ba22cbe09644d145a3db2e">operator*</a> () const noexcept</td></tr>
<tr class="separator:abc3b7cbd90ba22cbe09644d145a3db2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb61ff46b7eb1e086283fca36ba4f10a" id="r_acb61ff46b7eb1e086283fca36ba4f10a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb61ff46b7eb1e086283fca36ba4f10a">operator++</a> () noexcept</td></tr>
<tr class="separator:acb61ff46b7eb1e086283fca36ba4f10a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e00b951b1b90632b669d3d6f52c2d85" id="r_a2e00b951b1b90632b669d3d6f52c2d85"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2e00b951b1b90632b669d3d6f52c2d85">operator++</a> (int) noexcept</td></tr>
<tr class="separator:a2e00b951b1b90632b669d3d6f52c2d85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1040e56bf62aba44d9067543bc10dfa9" id="r_a1040e56bf62aba44d9067543bc10dfa9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1040e56bf62aba44d9067543bc10dfa9">operator--</a> () noexcept</td></tr>
<tr class="separator:a1040e56bf62aba44d9067543bc10dfa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b1233b54ceb8eae600af0cbe595cac6" id="r_a0b1233b54ceb8eae600af0cbe595cac6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b1233b54ceb8eae600af0cbe595cac6">operator--</a> (int) noexcept</td></tr>
<tr class="separator:a0b1233b54ceb8eae600af0cbe595cac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:affe313f08d69d299c7494880c0cfb96c" id="r_affe313f08d69d299c7494880c0cfb96c"><td class="memItemLeft" align="right" valign="top">BlockManagerType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#affe313f08d69d299c7494880c0cfb96c">blockManager_</a></td></tr>
<tr class="separator:affe313f08d69d299c7494880c0cfb96c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508c48367524877c6940b5508a0ed0b8" id="r_a508c48367524877c6940b5508a0ed0b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#abb8cfc3774d38d7ca3ac5d88ab1f6b1b">pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a508c48367524877c6940b5508a0ed0b8">current_</a></td></tr>
<tr class="separator:a508c48367524877c6940b5508a0ed0b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a84e40dde7c0718e5ba0e22dd8f61b9b5" name="a84e40dde7c0718e5ba0e22dd8f61b9b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e40dde7c0718e5ba0e22dd8f61b9b5">&#9670;&#160;</a></span>difference_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::difference_type = std::ptrdiff_t</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a224c98519f3674ab357918eaa2a8e9de" name="a224c98519f3674ab357918eaa2a8e9de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a224c98519f3674ab357918eaa2a8e9de">&#9670;&#160;</a></span>iterator_category</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::iterator_category = std::bidirectional_iterator_tag</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abb8cfc3774d38d7ca3ac5d88ab1f6b1b" name="abb8cfc3774d38d7ca3ac5d88ab1f6b1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb8cfc3774d38d7ca3ac5d88ab1f6b1b">&#9670;&#160;</a></span>pointer</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::pointer = BlockType*</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8a5b42bddad020b4ee18b76aa339f43c" name="a8a5b42bddad020b4ee18b76aa339f43c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a5b42bddad020b4ee18b76aa339f43c">&#9670;&#160;</a></span>reference</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::reference = BlockType&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aad8c7684d5ca86b5371ad79f6eeed387" name="aad8c7684d5ca86b5371ad79f6eeed387"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad8c7684d5ca86b5371ad79f6eeed387">&#9670;&#160;</a></span>value_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::value_type = BlockType</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a549241bc9cc1d6d89a194d309646851c" name="a549241bc9cc1d6d89a194d309646851c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a549241bc9cc1d6d89a194d309646851c">&#9670;&#160;</a></span>BlockIterator() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::BlockIterator </td>
          <td>(</td>
          <td class="paramtype">BlockManagerType &amp;</td>          <td class="paramname"><span class="paramname"><em>blockManager</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d2cac9eaa74dbb19114d16898500859" name="a4d2cac9eaa74dbb19114d16898500859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d2cac9eaa74dbb19114d16898500859">&#9670;&#160;</a></span>BlockIterator() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::BlockIterator </td>
          <td>(</td>
          <td class="paramtype">BlockManagerType &amp;</td>          <td class="paramname"><span class="paramname"><em>blockManager</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#abb8cfc3774d38d7ca3ac5d88ab1f6b1b">pointer</a></td>          <td class="paramname"><span class="paramname"><em>current</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="abba184c36c9956d5f2de3546f728f060" name="abba184c36c9956d5f2de3546f728f060"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abba184c36c9956d5f2de3546f728f060">&#9670;&#160;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&lt; BlockManagerType, BlockType &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abc3b7cbd90ba22cbe09644d145a3db2e" name="abc3b7cbd90ba22cbe09644d145a3db2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc3b7cbd90ba22cbe09644d145a3db2e">&#9670;&#160;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a8a5b42bddad020b4ee18b76aa339f43c">reference</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator* </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb61ff46b7eb1e086283fca36ba4f10a" name="acb61ff46b7eb1e086283fca36ba4f10a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb61ff46b7eb1e086283fca36ba4f10a">&#9670;&#160;</a></span>operator++() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator++ </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e00b951b1b90632b669d3d6f52c2d85" name="a2e00b951b1b90632b669d3d6f52c2d85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e00b951b1b90632b669d3d6f52c2d85">&#9670;&#160;</a></span>operator++() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator++ </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1040e56bf62aba44d9067543bc10dfa9" name="a1040e56bf62aba44d9067543bc10dfa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1040e56bf62aba44d9067543bc10dfa9">&#9670;&#160;</a></span>operator--() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator-- </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b1233b54ceb8eae600af0cbe595cac6" name="a0b1233b54ceb8eae600af0cbe595cac6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b1233b54ceb8eae600af0cbe595cac6">&#9670;&#160;</a></span>operator--() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator-- </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a08c20a3c043aa584da5fd3836e5746ef" name="a08c20a3c043aa584da5fd3836e5746ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08c20a3c043aa584da5fd3836e5746ef">&#9670;&#160;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a>&lt; BlockManagerType, BlockType &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="affe313f08d69d299c7494880c0cfb96c" name="affe313f08d69d299c7494880c0cfb96c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe313f08d69d299c7494880c0cfb96c">&#9670;&#160;</a></span>blockManager_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">BlockManagerType&amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::blockManager_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a508c48367524877c6940b5508a0ed0b8" name="a508c48367524877c6940b5508a0ed0b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a508c48367524877c6940b5508a0ed0b8">&#9670;&#160;</a></span>current_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename BlockManagerType , typename BlockType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#abb8cfc3774d38d7ca3ac5d88ab1f6b1b">pointer</a> <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">Harlinn::Common::Core::IO::Blocks::BlockIterator</a>&lt; BlockManagerType, BlockType &gt;::current_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_blocks_8h.xhtml">HCCBlocks.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml">IO</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks.xhtml">Blocks</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_blocks_1_1_block_iterator.xhtml">BlockIterator</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
