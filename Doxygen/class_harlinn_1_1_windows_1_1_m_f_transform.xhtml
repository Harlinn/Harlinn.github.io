<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::MFTransform Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_m_f_transform.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_m_f_transform-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::MFTransform Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HWMFTransform.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::MFTransform:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_m_f_transform__inherit__graph.svg" width="218" height="124"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::MFTransform:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_m_f_transform__coll__graph.svg" width="218" height="124"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_harlinn_1_1_windows_1_1_m_f_transform_1_1_stream_count.xhtml">StreamCount</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_harlinn_1_1_windows_1_1_m_f_transform_1_1_stream_limits.xhtml">StreamLimits</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4a58d51c34abb0919cec54f012335da5" id="r_a4a58d51c34abb0919cec54f012335da5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4a58d51c34abb0919cec54f012335da5">GetStreamLimits</a> (__RPC__out DWORD *pdwInputMinimum, __RPC__out DWORD *pdwInputMaximum, __RPC__out DWORD *pdwOutputMinimum, __RPC__out DWORD *pdwOutputMaximum) const</td></tr>
<tr class="separator:a4a58d51c34abb0919cec54f012335da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3efc77cce8c36fb11cf28def193d8170" id="r_a3efc77cce8c36fb11cf28def193d8170"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_harlinn_1_1_windows_1_1_m_f_transform_1_1_stream_limits.xhtml">StreamLimits</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3efc77cce8c36fb11cf28def193d8170">GetStreamLimits</a> () const</td></tr>
<tr class="separator:a3efc77cce8c36fb11cf28def193d8170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9954311bcf4584cfdd1841efd3724e41" id="r_a9954311bcf4584cfdd1841efd3724e41"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9954311bcf4584cfdd1841efd3724e41">GetStreamCount</a> (__RPC__out DWORD *pcInputStreams, __RPC__out DWORD *pcOutputStreams) const</td></tr>
<tr class="separator:a9954311bcf4584cfdd1841efd3724e41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0777515a1e8886ee4c0dbe7842d189d0" id="r_a0777515a1e8886ee4c0dbe7842d189d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_harlinn_1_1_windows_1_1_m_f_transform_1_1_stream_count.xhtml">StreamCount</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0777515a1e8886ee4c0dbe7842d189d0">GetStreamCount</a> () const</td></tr>
<tr class="separator:a0777515a1e8886ee4c0dbe7842d189d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4df3f3685a6484a21cf38caa07d9d6e" id="r_aa4df3f3685a6484a21cf38caa07d9d6e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa4df3f3685a6484a21cf38caa07d9d6e">GetStreamIDs</a> (DWORD dwInputIDArraySize, __RPC__out_ecount_full(dwInputIDArraySize) DWORD *pdwInputIDs, DWORD dwOutputIDArraySize, __RPC__out_ecount_full(dwOutputIDArraySize) DWORD *pdwOutputIDs) const</td></tr>
<tr class="separator:aa4df3f3685a6484a21cf38caa07d9d6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a2b5133ba0a9406dcc4d8617553fd7" id="r_ae8a2b5133ba0a9406dcc4d8617553fd7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8a2b5133ba0a9406dcc4d8617553fd7">GetInputStreamInfo</a> (DWORD dwInputStreamID, __RPC__out MFT_INPUT_STREAM_INFO *pStreamInfo) const</td></tr>
<tr class="separator:ae8a2b5133ba0a9406dcc4d8617553fd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a81e6b21c7b1eed0f016f4b91e1c1fd" id="r_a6a81e6b21c7b1eed0f016f4b91e1c1fd"><td class="memItemLeft" align="right" valign="top">MFT_INPUT_STREAM_INFO&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a81e6b21c7b1eed0f016f4b91e1c1fd">GetInputStreamInfo</a> (DWORD dwInputStreamID) const</td></tr>
<tr class="separator:a6a81e6b21c7b1eed0f016f4b91e1c1fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64deece66156ad1a10154a319c0d9ce0" id="r_a64deece66156ad1a10154a319c0d9ce0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a64deece66156ad1a10154a319c0d9ce0">GetOutputStreamInfo</a> (DWORD dwOutputStreamID, __RPC__out MFT_OUTPUT_STREAM_INFO *pStreamInfo) const</td></tr>
<tr class="separator:a64deece66156ad1a10154a319c0d9ce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c26d0850f07f4ed6f5f5c7c76665b2a" id="r_a9c26d0850f07f4ed6f5f5c7c76665b2a"><td class="memItemLeft" align="right" valign="top">MFT_OUTPUT_STREAM_INFO&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c26d0850f07f4ed6f5f5c7c76665b2a">GetOutputStreamInfo</a> (DWORD dwOutputStreamID) const</td></tr>
<tr class="separator:a9c26d0850f07f4ed6f5f5c7c76665b2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb2bbaa5edc35de1f2c118a656f7eda7" id="r_adb2bbaa5edc35de1f2c118a656f7eda7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adb2bbaa5edc35de1f2c118a656f7eda7">GetAttributes</a> (__RPC__deref_out_opt IMFAttributes **pAttributes) const</td></tr>
<tr class="separator:adb2bbaa5edc35de1f2c118a656f7eda7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3da2b8d11a8b97e0c849efecd5d39b7f" id="r_a3da2b8d11a8b97e0c849efecd5d39b7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3da2b8d11a8b97e0c849efecd5d39b7f">GetAttributes</a> () const</td></tr>
<tr class="separator:a3da2b8d11a8b97e0c849efecd5d39b7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a780736c8f861769277f1b97b473efeda" id="r_a780736c8f861769277f1b97b473efeda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a780736c8f861769277f1b97b473efeda">GetInputStreamAttributes</a> (DWORD dwInputStreamID, __RPC__deref_out_opt IMFAttributes **pAttributes) const</td></tr>
<tr class="separator:a780736c8f861769277f1b97b473efeda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83373ba259bba0fc966dffa378b3433d" id="r_a83373ba259bba0fc966dffa378b3433d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83373ba259bba0fc966dffa378b3433d">GetInputStreamAttributes</a> (DWORD dwInputStreamID) const</td></tr>
<tr class="separator:a83373ba259bba0fc966dffa378b3433d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7155a2c51d69544aeb959fc8e3b1c9b" id="r_ac7155a2c51d69544aeb959fc8e3b1c9b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7155a2c51d69544aeb959fc8e3b1c9b">GetOutputStreamAttributes</a> (DWORD dwOutputStreamID, __RPC__deref_out_opt IMFAttributes **pAttributes) const</td></tr>
<tr class="separator:ac7155a2c51d69544aeb959fc8e3b1c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2953b1c4eb2df5ec26cf0007d8234a89" id="r_a2953b1c4eb2df5ec26cf0007d8234a89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2953b1c4eb2df5ec26cf0007d8234a89">GetOutputStreamAttributes</a> (DWORD dwOutputStreamID) const</td></tr>
<tr class="separator:a2953b1c4eb2df5ec26cf0007d8234a89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a731c931bee8bb5a97fb547b3f2682b" id="r_a2a731c931bee8bb5a97fb547b3f2682b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a731c931bee8bb5a97fb547b3f2682b">DeleteInputStream</a> (DWORD dwStreamID) const</td></tr>
<tr class="separator:a2a731c931bee8bb5a97fb547b3f2682b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed3e5681b517808e559c561ef96403c0" id="r_aed3e5681b517808e559c561ef96403c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed3e5681b517808e559c561ef96403c0">AddInputStreams</a> (DWORD cStreams, __RPC__in DWORD *adwStreamIDs) const</td></tr>
<tr class="separator:aed3e5681b517808e559c561ef96403c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bd1f8aa7eb61a562475ae0415f16653" id="r_a3bd1f8aa7eb61a562475ae0415f16653"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3bd1f8aa7eb61a562475ae0415f16653">GetInputAvailableType</a> (DWORD inputStreamID, DWORD typeIndex, __RPC__deref_out_opt IMFMediaType **ppType) const</td></tr>
<tr class="separator:a3bd1f8aa7eb61a562475ae0415f16653"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee27c4de2f3337598b46ef022f5cd0a0" id="r_aee27c4de2f3337598b46ef022f5cd0a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee27c4de2f3337598b46ef022f5cd0a0">GetInputAvailableType</a> (DWORD inputStreamID, DWORD typeIndex) const</td></tr>
<tr class="separator:aee27c4de2f3337598b46ef022f5cd0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49a0b59289b06e8bb6ba97c3984fa007" id="r_a49a0b59289b06e8bb6ba97c3984fa007"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a49a0b59289b06e8bb6ba97c3984fa007">GetInputAvailableTypes</a> (DWORD inputStreamID) const</td></tr>
<tr class="separator:a49a0b59289b06e8bb6ba97c3984fa007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61b1123370ad0a4966c5f85ed4d9f29e" id="r_a61b1123370ad0a4966c5f85ed4d9f29e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61b1123370ad0a4966c5f85ed4d9f29e">GetOutputAvailableType</a> (DWORD dwOutputStreamID, DWORD dwTypeIndex, __RPC__deref_out_opt IMFMediaType **ppType) const</td></tr>
<tr class="separator:a61b1123370ad0a4966c5f85ed4d9f29e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a873ec9d42e62d514fe7ac3e381bc5b83" id="r_a873ec9d42e62d514fe7ac3e381bc5b83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a873ec9d42e62d514fe7ac3e381bc5b83">GetOutputAvailableType</a> (DWORD dwOutputStreamID, DWORD dwTypeIndex) const</td></tr>
<tr class="separator:a873ec9d42e62d514fe7ac3e381bc5b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58f51623d4a121559708b306146d390f" id="r_a58f51623d4a121559708b306146d390f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a58f51623d4a121559708b306146d390f">GetOutputAvailableTypes</a> (DWORD inputStreamID) const</td></tr>
<tr class="separator:a58f51623d4a121559708b306146d390f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10b1f35c8eac40b44e3b388d775edff9" id="r_a10b1f35c8eac40b44e3b388d775edff9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a10b1f35c8eac40b44e3b388d775edff9">SetInputType</a> (DWORD dwInputStreamID, __RPC__in_opt IMFMediaType *pType, DWORD <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a88091f3cf7c0f5215895ddbdef078de4">dwFlags</a>=0) const</td></tr>
<tr class="separator:a10b1f35c8eac40b44e3b388d775edff9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9376f8ff2c89ce4a2df8fd40e311ef18" id="r_a9376f8ff2c89ce4a2df8fd40e311ef18"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9376f8ff2c89ce4a2df8fd40e311ef18">SetOutputType</a> (DWORD dwOutputStreamID, __RPC__in_opt IMFMediaType *pType, DWORD <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a88091f3cf7c0f5215895ddbdef078de4">dwFlags</a>=0) const</td></tr>
<tr class="separator:a9376f8ff2c89ce4a2df8fd40e311ef18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2dd51eeba263ab08a88535fbd75106c" id="r_ae2dd51eeba263ab08a88535fbd75106c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae2dd51eeba263ab08a88535fbd75106c">GetInputCurrentType</a> (DWORD dwInputStreamID, __RPC__deref_out_opt IMFMediaType **ppType) const</td></tr>
<tr class="separator:ae2dd51eeba263ab08a88535fbd75106c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94355dc48f5d9429b2cc8b7b624e09d9" id="r_a94355dc48f5d9429b2cc8b7b624e09d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a94355dc48f5d9429b2cc8b7b624e09d9">GetInputCurrentType</a> (DWORD dwInputStreamID) const</td></tr>
<tr class="separator:a94355dc48f5d9429b2cc8b7b624e09d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c946dda81ce7a464abf20e71d91a9bb" id="r_a3c946dda81ce7a464abf20e71d91a9bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c946dda81ce7a464abf20e71d91a9bb">GetOutputCurrentType</a> (DWORD dwOutputStreamID, __RPC__deref_out_opt IMFMediaType **ppType) const</td></tr>
<tr class="separator:a3c946dda81ce7a464abf20e71d91a9bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e8c6d77b0889cf15c14b45899f0dbc8" id="r_a1e8c6d77b0889cf15c14b45899f0dbc8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1e8c6d77b0889cf15c14b45899f0dbc8">GetOutputCurrentType</a> (DWORD dwOutputStreamID) const</td></tr>
<tr class="separator:a1e8c6d77b0889cf15c14b45899f0dbc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3ed638dd0091efe40e10fbb8c7a3706" id="r_ae3ed638dd0091efe40e10fbb8c7a3706"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae3ed638dd0091efe40e10fbb8c7a3706">GetInputStatus</a> (DWORD dwInputStreamID, __RPC__out DWORD *pdwFlags) const</td></tr>
<tr class="separator:ae3ed638dd0091efe40e10fbb8c7a3706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaea8edb5808d7d197214535f4b459c5" id="r_abaea8edb5808d7d197214535f4b459c5"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abaea8edb5808d7d197214535f4b459c5">GetInputStatus</a> (DWORD dwInputStreamID) const</td></tr>
<tr class="separator:abaea8edb5808d7d197214535f4b459c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac218e30de43fe3975523b9fc764ca973" id="r_ac218e30de43fe3975523b9fc764ca973"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac218e30de43fe3975523b9fc764ca973">GetOutputStatus</a> (__RPC__out DWORD *pdwFlags) const</td></tr>
<tr class="separator:ac218e30de43fe3975523b9fc764ca973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab69882d2741ec3eabe0dac4833a3119b" id="r_ab69882d2741ec3eabe0dac4833a3119b"><td class="memItemLeft" align="right" valign="top">DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab69882d2741ec3eabe0dac4833a3119b">GetOutputStatus</a> () const</td></tr>
<tr class="separator:ab69882d2741ec3eabe0dac4833a3119b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fddc0f3fd5188dd0a4eb96be8e91a77" id="r_a4fddc0f3fd5188dd0a4eb96be8e91a77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4fddc0f3fd5188dd0a4eb96be8e91a77">SetOutputBounds</a> (LONGLONG hnsLowerBound, LONGLONG hnsUpperBound) const</td></tr>
<tr class="separator:a4fddc0f3fd5188dd0a4eb96be8e91a77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7366da11d5dbb9b72a9f8b0ea66d46" id="r_a3d7366da11d5dbb9b72a9f8b0ea66d46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d7366da11d5dbb9b72a9f8b0ea66d46">ProcessEvent</a> (DWORD dwInputStreamID, __RPC__in_opt IMFMediaEvent *pEvent) const</td></tr>
<tr class="separator:a3d7366da11d5dbb9b72a9f8b0ea66d46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec9febf708642f93d554e9d26021405d" id="r_aec9febf708642f93d554e9d26021405d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec9febf708642f93d554e9d26021405d">ProcessMessage</a> (MFT_MESSAGE_TYPE eMessage, ULONG_PTR ulParam=0) const</td></tr>
<tr class="separator:aec9febf708642f93d554e9d26021405d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef3dc4d3614d6c56455cfec61a9c918" id="r_afef3dc4d3614d6c56455cfec61a9c918"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afef3dc4d3614d6c56455cfec61a9c918">ProcessInput</a> (DWORD dwInputStreamID, IMFSample *pSample, DWORD <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a88091f3cf7c0f5215895ddbdef078de4">dwFlags</a>) const</td></tr>
<tr class="separator:afef3dc4d3614d6c56455cfec61a9c918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62e5cf43896aaaecbf8b7896540cbcbb" id="r_a62e5cf43896aaaecbf8b7896540cbcbb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_windows_1_1_m_f.xhtml#a40906c10bbb65acfef9d31f996bdd1ba">MF::TransformOutputResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a62e5cf43896aaaecbf8b7896540cbcbb">ProcessOutput</a> (DWORD <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a88091f3cf7c0f5215895ddbdef078de4">dwFlags</a>, DWORD cOutputBufferCount, MFT_OUTPUT_DATA_BUFFER *pOutputSamples, DWORD *pdwStatus) const</td></tr>
<tr class="separator:a62e5cf43896aaaecbf8b7896540cbcbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ef2ba86b23af8f225e38a13544755eb" id="r_a6ef2ba86b23af8f225e38a13544755eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_windows_1_1_m_f.xhtml#a40906c10bbb65acfef9d31f996bdd1ba">MF::TransformOutputResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ef2ba86b23af8f225e38a13544755eb">ProcessOutput</a> (DWORD flags, DWORD outputBufferCount, <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_transform_output_data_buffer.xhtml">MF::TransformOutputDataBuffer</a> *outputSamples, DWORD *status) const</td></tr>
<tr class="separator:a6ef2ba86b23af8f225e38a13544755eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ca596a76ae8b8cbce5c8f9352b18fb8" id="r_a0ca596a76ae8b8cbce5c8f9352b18fb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_windows_1_1_m_f.xhtml#a40906c10bbb65acfef9d31f996bdd1ba">MF::TransformOutputResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0ca596a76ae8b8cbce5c8f9352b18fb8">ProcessOutput</a> (DWORD flags, <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_transform_output_data_buffer.xhtml">MF::TransformOutputDataBuffer</a> &amp;outputSamples, DWORD *status) const</td></tr>
<tr class="separator:a0ca596a76ae8b8cbce5c8f9352b18fb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aed3e5681b517808e559c561ef96403c0" name="aed3e5681b517808e559c561ef96403c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed3e5681b517808e559c561ef96403c0">&#9670;&#160;</a></span>AddInputStreams()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::AddInputStreams </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>cStreams</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__in DWORD *</td>          <td class="paramname"><span class="paramname"><em>adwStreamIDs</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a731c931bee8bb5a97fb547b3f2682b" name="a2a731c931bee8bb5a97fb547b3f2682b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a731c931bee8bb5a97fb547b3f2682b">&#9670;&#160;</a></span>DeleteInputStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::DeleteInputStream </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3da2b8d11a8b97e0c849efecd5d39b7f" name="a3da2b8d11a8b97e0c849efecd5d39b7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3da2b8d11a8b97e0c849efecd5d39b7f">&#9670;&#160;</a></span>GetAttributes() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> Harlinn::Windows::MFTransform::GetAttributes </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb2bbaa5edc35de1f2c118a656f7eda7" name="adb2bbaa5edc35de1f2c118a656f7eda7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb2bbaa5edc35de1f2c118a656f7eda7">&#9670;&#160;</a></span>GetAttributes() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFTransform::GetAttributes </td>
          <td>(</td>
          <td class="paramtype">__RPC__deref_out_opt IMFAttributes **</td>          <td class="paramname"><span class="paramname"><em>pAttributes</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aee27c4de2f3337598b46ef022f5cd0a0" name="aee27c4de2f3337598b46ef022f5cd0a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee27c4de2f3337598b46ef022f5cd0a0">&#9670;&#160;</a></span>GetInputAvailableType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> Harlinn::Windows::MFTransform::GetInputAvailableType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>inputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>typeIndex</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3bd1f8aa7eb61a562475ae0415f16653" name="a3bd1f8aa7eb61a562475ae0415f16653"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bd1f8aa7eb61a562475ae0415f16653">&#9670;&#160;</a></span>GetInputAvailableType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFTransform::GetInputAvailableType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>inputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>typeIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__deref_out_opt IMFMediaType **</td>          <td class="paramname"><span class="paramname"><em>ppType</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a49a0b59289b06e8bb6ba97c3984fa007" name="a49a0b59289b06e8bb6ba97c3984fa007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49a0b59289b06e8bb6ba97c3984fa007">&#9670;&#160;</a></span>GetInputAvailableTypes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> &gt; Harlinn::Windows::MFTransform::GetInputAvailableTypes </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>inputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a94355dc48f5d9429b2cc8b7b624e09d9" name="a94355dc48f5d9429b2cc8b7b624e09d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94355dc48f5d9429b2cc8b7b624e09d9">&#9670;&#160;</a></span>GetInputCurrentType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> Harlinn::Windows::MFTransform::GetInputCurrentType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae2dd51eeba263ab08a88535fbd75106c" name="ae2dd51eeba263ab08a88535fbd75106c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2dd51eeba263ab08a88535fbd75106c">&#9670;&#160;</a></span>GetInputCurrentType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetInputCurrentType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__deref_out_opt IMFMediaType **</td>          <td class="paramname"><span class="paramname"><em>ppType</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abaea8edb5808d7d197214535f4b459c5" name="abaea8edb5808d7d197214535f4b459c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaea8edb5808d7d197214535f4b459c5">&#9670;&#160;</a></span>GetInputStatus() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Windows::MFTransform::GetInputStatus </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae3ed638dd0091efe40e10fbb8c7a3706" name="ae3ed638dd0091efe40e10fbb8c7a3706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3ed638dd0091efe40e10fbb8c7a3706">&#9670;&#160;</a></span>GetInputStatus() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetInputStatus </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a83373ba259bba0fc966dffa378b3433d" name="a83373ba259bba0fc966dffa378b3433d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83373ba259bba0fc966dffa378b3433d">&#9670;&#160;</a></span>GetInputStreamAttributes() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> Harlinn::Windows::MFTransform::GetInputStreamAttributes </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a780736c8f861769277f1b97b473efeda" name="a780736c8f861769277f1b97b473efeda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a780736c8f861769277f1b97b473efeda">&#9670;&#160;</a></span>GetInputStreamAttributes() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetInputStreamAttributes </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__deref_out_opt IMFAttributes **</td>          <td class="paramname"><span class="paramname"><em>pAttributes</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6a81e6b21c7b1eed0f016f4b91e1c1fd" name="a6a81e6b21c7b1eed0f016f4b91e1c1fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a81e6b21c7b1eed0f016f4b91e1c1fd">&#9670;&#160;</a></span>GetInputStreamInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MFT_INPUT_STREAM_INFO Harlinn::Windows::MFTransform::GetInputStreamInfo </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae8a2b5133ba0a9406dcc4d8617553fd7" name="ae8a2b5133ba0a9406dcc4d8617553fd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8a2b5133ba0a9406dcc4d8617553fd7">&#9670;&#160;</a></span>GetInputStreamInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetInputStreamInfo </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out MFT_INPUT_STREAM_INFO *</td>          <td class="paramname"><span class="paramname"><em>pStreamInfo</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a873ec9d42e62d514fe7ac3e381bc5b83" name="a873ec9d42e62d514fe7ac3e381bc5b83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a873ec9d42e62d514fe7ac3e381bc5b83">&#9670;&#160;</a></span>GetOutputAvailableType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> Harlinn::Windows::MFTransform::GetOutputAvailableType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwTypeIndex</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61b1123370ad0a4966c5f85ed4d9f29e" name="a61b1123370ad0a4966c5f85ed4d9f29e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61b1123370ad0a4966c5f85ed4d9f29e">&#9670;&#160;</a></span>GetOutputAvailableType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFTransform::GetOutputAvailableType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwTypeIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__deref_out_opt IMFMediaType **</td>          <td class="paramname"><span class="paramname"><em>ppType</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a58f51623d4a121559708b306146d390f" name="a58f51623d4a121559708b306146d390f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58f51623d4a121559708b306146d390f">&#9670;&#160;</a></span>GetOutputAvailableTypes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> &gt; Harlinn::Windows::MFTransform::GetOutputAvailableTypes </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>inputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1e8c6d77b0889cf15c14b45899f0dbc8" name="a1e8c6d77b0889cf15c14b45899f0dbc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e8c6d77b0889cf15c14b45899f0dbc8">&#9670;&#160;</a></span>GetOutputCurrentType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_media_type.xhtml">MFMediaType</a> Harlinn::Windows::MFTransform::GetOutputCurrentType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c946dda81ce7a464abf20e71d91a9bb" name="a3c946dda81ce7a464abf20e71d91a9bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c946dda81ce7a464abf20e71d91a9bb">&#9670;&#160;</a></span>GetOutputCurrentType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetOutputCurrentType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__deref_out_opt IMFMediaType **</td>          <td class="paramname"><span class="paramname"><em>ppType</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab69882d2741ec3eabe0dac4833a3119b" name="ab69882d2741ec3eabe0dac4833a3119b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab69882d2741ec3eabe0dac4833a3119b">&#9670;&#160;</a></span>GetOutputStatus() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Windows::MFTransform::GetOutputStatus </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac218e30de43fe3975523b9fc764ca973" name="ac218e30de43fe3975523b9fc764ca973"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac218e30de43fe3975523b9fc764ca973">&#9670;&#160;</a></span>GetOutputStatus() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetOutputStatus </td>
          <td>(</td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwFlags</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2953b1c4eb2df5ec26cf0007d8234a89" name="a2953b1c4eb2df5ec26cf0007d8234a89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2953b1c4eb2df5ec26cf0007d8234a89">&#9670;&#160;</a></span>GetOutputStreamAttributes() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> Harlinn::Windows::MFTransform::GetOutputStreamAttributes </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7155a2c51d69544aeb959fc8e3b1c9b" name="ac7155a2c51d69544aeb959fc8e3b1c9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7155a2c51d69544aeb959fc8e3b1c9b">&#9670;&#160;</a></span>GetOutputStreamAttributes() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetOutputStreamAttributes </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__deref_out_opt IMFAttributes **</td>          <td class="paramname"><span class="paramname"><em>pAttributes</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c26d0850f07f4ed6f5f5c7c76665b2a" name="a9c26d0850f07f4ed6f5f5c7c76665b2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c26d0850f07f4ed6f5f5c7c76665b2a">&#9670;&#160;</a></span>GetOutputStreamInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MFT_OUTPUT_STREAM_INFO Harlinn::Windows::MFTransform::GetOutputStreamInfo </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a64deece66156ad1a10154a319c0d9ce0" name="a64deece66156ad1a10154a319c0d9ce0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64deece66156ad1a10154a319c0d9ce0">&#9670;&#160;</a></span>GetOutputStreamInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetOutputStreamInfo </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out MFT_OUTPUT_STREAM_INFO *</td>          <td class="paramname"><span class="paramname"><em>pStreamInfo</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0777515a1e8886ee4c0dbe7842d189d0" name="a0777515a1e8886ee4c0dbe7842d189d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0777515a1e8886ee4c0dbe7842d189d0">&#9670;&#160;</a></span>GetStreamCount() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_harlinn_1_1_windows_1_1_m_f_transform_1_1_stream_count.xhtml">StreamCount</a> Harlinn::Windows::MFTransform::GetStreamCount </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9954311bcf4584cfdd1841efd3724e41" name="a9954311bcf4584cfdd1841efd3724e41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9954311bcf4584cfdd1841efd3724e41">&#9670;&#160;</a></span>GetStreamCount() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetStreamCount </td>
          <td>(</td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pcInputStreams</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pcOutputStreams</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4df3f3685a6484a21cf38caa07d9d6e" name="aa4df3f3685a6484a21cf38caa07d9d6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4df3f3685a6484a21cf38caa07d9d6e">&#9670;&#160;</a></span>GetStreamIDs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetStreamIDs </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputIDArraySize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out_ecount_full(dwInputIDArraySize) DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwInputIDs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputIDArraySize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out_ecount_full(dwOutputIDArraySize) DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwOutputIDs</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3efc77cce8c36fb11cf28def193d8170" name="a3efc77cce8c36fb11cf28def193d8170"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3efc77cce8c36fb11cf28def193d8170">&#9670;&#160;</a></span>GetStreamLimits() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_harlinn_1_1_windows_1_1_m_f_transform_1_1_stream_limits.xhtml">StreamLimits</a> Harlinn::Windows::MFTransform::GetStreamLimits </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4a58d51c34abb0919cec54f012335da5" name="a4a58d51c34abb0919cec54f012335da5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a58d51c34abb0919cec54f012335da5">&#9670;&#160;</a></span>GetStreamLimits() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::GetStreamLimits </td>
          <td>(</td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwInputMinimum</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwInputMaximum</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwOutputMinimum</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__out DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwOutputMaximum</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d7366da11d5dbb9b72a9f8b0ea66d46" name="a3d7366da11d5dbb9b72a9f8b0ea66d46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d7366da11d5dbb9b72a9f8b0ea66d46">&#9670;&#160;</a></span>ProcessEvent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::ProcessEvent </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__in_opt IMFMediaEvent *</td>          <td class="paramname"><span class="paramname"><em>pEvent</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afef3dc4d3614d6c56455cfec61a9c918" name="afef3dc4d3614d6c56455cfec61a9c918"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afef3dc4d3614d6c56455cfec61a9c918">&#9670;&#160;</a></span>ProcessInput()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::ProcessInput </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IMFSample *</td>          <td class="paramname"><span class="paramname"><em>pSample</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwFlags</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec9febf708642f93d554e9d26021405d" name="aec9febf708642f93d554e9d26021405d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec9febf708642f93d554e9d26021405d">&#9670;&#160;</a></span>ProcessMessage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::ProcessMessage </td>
          <td>(</td>
          <td class="paramtype">MFT_MESSAGE_TYPE</td>          <td class="paramname"><span class="paramname"><em>eMessage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ULONG_PTR</td>          <td class="paramname"><span class="paramname"><em>ulParam</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a62e5cf43896aaaecbf8b7896540cbcbb" name="a62e5cf43896aaaecbf8b7896540cbcbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62e5cf43896aaaecbf8b7896540cbcbb">&#9670;&#160;</a></span>ProcessOutput() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_windows_1_1_m_f.xhtml#a40906c10bbb65acfef9d31f996bdd1ba">MF::TransformOutputResult</a> Harlinn::Windows::MFTransform::ProcessOutput </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>cOutputBufferCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MFT_OUTPUT_DATA_BUFFER *</td>          <td class="paramname"><span class="paramname"><em>pOutputSamples</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>pdwStatus</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6ef2ba86b23af8f225e38a13544755eb" name="a6ef2ba86b23af8f225e38a13544755eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ef2ba86b23af8f225e38a13544755eb">&#9670;&#160;</a></span>ProcessOutput() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_windows_1_1_m_f.xhtml#a40906c10bbb65acfef9d31f996bdd1ba">MF::TransformOutputResult</a> Harlinn::Windows::MFTransform::ProcessOutput </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>flags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>outputBufferCount</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_transform_output_data_buffer.xhtml">MF::TransformOutputDataBuffer</a> *</td>          <td class="paramname"><span class="paramname"><em>outputSamples</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>status</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0ca596a76ae8b8cbce5c8f9352b18fb8" name="a0ca596a76ae8b8cbce5c8f9352b18fb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ca596a76ae8b8cbce5c8f9352b18fb8">&#9670;&#160;</a></span>ProcessOutput() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_windows_1_1_m_f.xhtml#a40906c10bbb65acfef9d31f996bdd1ba">MF::TransformOutputResult</a> Harlinn::Windows::MFTransform::ProcessOutput </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>flags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_transform_output_data_buffer.xhtml">MF::TransformOutputDataBuffer</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>outputSamples</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD *</td>          <td class="paramname"><span class="paramname"><em>status</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a10b1f35c8eac40b44e3b388d775edff9" name="a10b1f35c8eac40b44e3b388d775edff9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10b1f35c8eac40b44e3b388d775edff9">&#9670;&#160;</a></span>SetInputType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::SetInputType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwInputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__in_opt IMFMediaType *</td>          <td class="paramname"><span class="paramname"><em>pType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwFlags</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4fddc0f3fd5188dd0a4eb96be8e91a77" name="a4fddc0f3fd5188dd0a4eb96be8e91a77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fddc0f3fd5188dd0a4eb96be8e91a77">&#9670;&#160;</a></span>SetOutputBounds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::SetOutputBounds </td>
          <td>(</td>
          <td class="paramtype">LONGLONG</td>          <td class="paramname"><span class="paramname"><em>hnsLowerBound</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LONGLONG</td>          <td class="paramname"><span class="paramname"><em>hnsUpperBound</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9376f8ff2c89ce4a2df8fd40e311ef18" name="a9376f8ff2c89ce4a2df8fd40e311ef18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9376f8ff2c89ce4a2df8fd40e311ef18">&#9670;&#160;</a></span>SetOutputType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFTransform::SetOutputType </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwOutputStreamID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">__RPC__in_opt IMFMediaType *</td>          <td class="paramname"><span class="paramname"><em>pType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>dwFlags</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_m_f_transform_8h.xhtml">HWMFTransform.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_transform.xhtml">MFTransform</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
