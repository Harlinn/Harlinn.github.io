<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Http::ApiVersion Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('struct_harlinn_1_1_common_1_1_core_1_1_http_1_1_api_version.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_harlinn_1_1_common_1_1_core_1_1_http_1_1_api_version-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Http::ApiVersion Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Api <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_http_1_1_version.xhtml" title="HTTP protocol version information and manipulation.">Version</a>. This is used to ensure compatibility between applications and httpapi.dll and http.sys.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCHTTP.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a644909cda6541603634c6b29a042ad0a" id="r_a644909cda6541603634c6b29a042ad0a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a644909cda6541603634c6b29a042ad0a">ApiVersion</a> () noexcept</td></tr>
<tr class="separator:a644909cda6541603634c6b29a042ad0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a148f1e0a47e9bb542103d65065f88e6f" id="r_a148f1e0a47e9bb542103d65065f88e6f"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a148f1e0a47e9bb542103d65065f88e6f">ApiVersion</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a> majorVersion, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a> minorVersion=0) noexcept</td></tr>
<tr class="separator:a148f1e0a47e9bb542103d65065f88e6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b15fff70c1eb749fcfee728d7d39819" id="r_a6b15fff70c1eb749fcfee728d7d39819"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b15fff70c1eb749fcfee728d7d39819">ApiVersion</a> (const HTTPAPI_VERSION &amp;other) noexcept</td></tr>
<tr class="separator:a6b15fff70c1eb749fcfee728d7d39819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db233f7bcedbd4e639b27f28f5c10a3" id="r_a6db233f7bcedbd4e639b27f28f5c10a3"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6db233f7bcedbd4e639b27f28f5c10a3">IsUnknown</a> () const noexcept</td></tr>
<tr class="separator:a6db233f7bcedbd4e639b27f28f5c10a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bce3bb97e04368821177b3f011a0e78" id="r_a2bce3bb97e04368821177b3f011a0e78"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</td></tr>
<tr class="memitem:a2bce3bb97e04368821177b3f011a0e78"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a2bce3bb97e04368821177b3f011a0e78">operator==</a> (const T &amp;other) const noexcept</td></tr>
<tr class="separator:a2bce3bb97e04368821177b3f011a0e78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f52aeccec7c3eb074f76e025ff42c4d" id="r_a0f52aeccec7c3eb074f76e025ff42c4d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</td></tr>
<tr class="memitem:a0f52aeccec7c3eb074f76e025ff42c4d"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a0f52aeccec7c3eb074f76e025ff42c4d">operator!=</a> (const T &amp;other) const noexcept</td></tr>
<tr class="separator:a0f52aeccec7c3eb074f76e025ff42c4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a593a02239ee36cd42cdb61de35885305" id="r_a593a02239ee36cd42cdb61de35885305"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</td></tr>
<tr class="memitem:a593a02239ee36cd42cdb61de35885305"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a593a02239ee36cd42cdb61de35885305">operator&lt;</a> (const T &amp;other) const noexcept</td></tr>
<tr class="separator:a593a02239ee36cd42cdb61de35885305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bc3cc090439c360dcab870e2cf72c24" id="r_a4bc3cc090439c360dcab870e2cf72c24"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</td></tr>
<tr class="memitem:a4bc3cc090439c360dcab870e2cf72c24"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a4bc3cc090439c360dcab870e2cf72c24">operator&lt;=</a> (const T &amp;other) const noexcept</td></tr>
<tr class="separator:a4bc3cc090439c360dcab870e2cf72c24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e34b52399a0531c30b245bc6cd8e13d" id="r_a7e34b52399a0531c30b245bc6cd8e13d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</td></tr>
<tr class="memitem:a7e34b52399a0531c30b245bc6cd8e13d"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a7e34b52399a0531c30b245bc6cd8e13d">operator&gt;</a> (const T &amp;other) const noexcept</td></tr>
<tr class="separator:a7e34b52399a0531c30b245bc6cd8e13d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa929478dd61d668f54f3b9b775b7dfb4" id="r_aa929478dd61d668f54f3b9b775b7dfb4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</td></tr>
<tr class="memitem:aa929478dd61d668f54f3b9b775b7dfb4"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aa929478dd61d668f54f3b9b775b7dfb4">operator&gt;=</a> (const T &amp;other) const noexcept</td></tr>
<tr class="separator:aa929478dd61d668f54f3b9b775b7dfb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0a3163f36e66424d7baa26c219806d72" id="r_a0a3163f36e66424d7baa26c219806d72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0a3163f36e66424d7baa26c219806d72">MajorVersion</a></td></tr>
<tr class="separator:a0a3163f36e66424d7baa26c219806d72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87edefc232edb1e5e6f24a1b1b2559dd" id="r_a87edefc232edb1e5e6f24a1b1b2559dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a87edefc232edb1e5e6f24a1b1b2559dd">MinorVersion</a></td></tr>
<tr class="separator:a87edefc232edb1e5e6f24a1b1b2559dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Api <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_http_1_1_version.xhtml" title="HTTP protocol version information and manipulation.">Version</a>. This is used to ensure compatibility between applications and httpapi.dll and http.sys. </p>
<p>This must not be confused with the HTTP Protocol version. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a644909cda6541603634c6b29a042ad0a" name="a644909cda6541603634c6b29a042ad0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a644909cda6541603634c6b29a042ad0a">&#9670;&#160;</a></span>ApiVersion() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Http::ApiVersion::ApiVersion </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a148f1e0a47e9bb542103d65065f88e6f" name="a148f1e0a47e9bb542103d65065f88e6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a148f1e0a47e9bb542103d65065f88e6f">&#9670;&#160;</a></span>ApiVersion() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Http::ApiVersion::ApiVersion </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a></td>          <td class="paramname"><span class="paramname"><em>majorVersion</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a></td>          <td class="paramname"><span class="paramname"><em>minorVersion</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6b15fff70c1eb749fcfee728d7d39819" name="a6b15fff70c1eb749fcfee728d7d39819"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b15fff70c1eb749fcfee728d7d39819">&#9670;&#160;</a></span>ApiVersion() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Http::ApiVersion::ApiVersion </td>
          <td>(</td>
          <td class="paramtype">const HTTPAPI_VERSION &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6db233f7bcedbd4e639b27f28f5c10a3" name="a6db233f7bcedbd4e639b27f28f5c10a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db233f7bcedbd4e639b27f28f5c10a3">&#9670;&#160;</a></span>IsUnknown()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::IsUnknown </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0f52aeccec7c3eb074f76e025ff42c4d" name="a0f52aeccec7c3eb074f76e025ff42c4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f52aeccec7c3eb074f76e025ff42c4d">&#9670;&#160;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::operator!= </td>
          <td>(</td>
          <td class="paramtype">const T &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a593a02239ee36cd42cdb61de35885305" name="a593a02239ee36cd42cdb61de35885305"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a593a02239ee36cd42cdb61de35885305">&#9670;&#160;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const T &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4bc3cc090439c360dcab870e2cf72c24" name="a4bc3cc090439c360dcab870e2cf72c24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bc3cc090439c360dcab870e2cf72c24">&#9670;&#160;</a></span>operator&lt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const T &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bce3bb97e04368821177b3f011a0e78" name="a2bce3bb97e04368821177b3f011a0e78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bce3bb97e04368821177b3f011a0e78">&#9670;&#160;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::operator== </td>
          <td>(</td>
          <td class="paramtype">const T &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7e34b52399a0531c30b245bc6cd8e13d" name="a7e34b52399a0531c30b245bc6cd8e13d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e34b52399a0531c30b245bc6cd8e13d">&#9670;&#160;</a></span>operator&gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const T &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa929478dd61d668f54f3b9b775b7dfb4" name="aa929478dd61d668f54f3b9b775b7dfb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa929478dd61d668f54f3b9b775b7dfb4">&#9670;&#160;</a></span>operator&gt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; <br />
requires requires( T t ) { { t.MajorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; { t.MinorVersion } -&gt; std::same_as&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a>&gt;; }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::Http::ApiVersion::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const T &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0a3163f36e66424d7baa26c219806d72" name="a0a3163f36e66424d7baa26c219806d72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a3163f36e66424d7baa26c219806d72">&#9670;&#160;</a></span>MajorVersion</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a> Harlinn::Common::Core::Http::ApiVersion::MajorVersion</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a87edefc232edb1e5e6f24a1b1b2559dd" name="a87edefc232edb1e5e6f24a1b1b2559dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87edefc232edb1e5e6f24a1b1b2559dd">&#9670;&#160;</a></span>MinorVersion</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a> Harlinn::Common::Core::Http::ApiVersion::MinorVersion</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_h_t_t_p_8h.xhtml">HCCHTTP.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_http.xhtml">Http</a></li><li class="navelem"><a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_http_1_1_api_version.xhtml">ApiVersion</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
