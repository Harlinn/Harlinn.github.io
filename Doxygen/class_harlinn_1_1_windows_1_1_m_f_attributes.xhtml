<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::MFAttributes Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_m_f_attributes-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::MFAttributes Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HWMFObjects.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::MFAttributes:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_m_f_attributes__inherit__graph.svg" width="934" height="622"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::MFAttributes:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_m_f_attributes__coll__graph.svg" width="218" height="124"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a217efd5623d2e9f8801214c99a26c2ff" id="r_a217efd5623d2e9f8801214c99a26c2ff"><td class="memTemplParams" colspan="2">template&lt;typename ReaderT &gt; </td></tr>
<tr class="memitem:a217efd5623d2e9f8801214c99a26c2ff"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a217efd5623d2e9f8801214c99a26c2ff">Read</a> (ReaderT &amp;reader) const</td></tr>
<tr class="separator:a217efd5623d2e9f8801214c99a26c2ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8184909533d20e8995ece36514e66277" id="r_a8184909533d20e8995ece36514e66277"><td class="memTemplParams" colspan="2">template&lt;typename WriterT &gt; </td></tr>
<tr class="memitem:a8184909533d20e8995ece36514e66277"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a8184909533d20e8995ece36514e66277">Write</a> (WriterT &amp;writer)</td></tr>
<tr class="separator:a8184909533d20e8995ece36514e66277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21fc252e5d9531c12119908ebeed17d0" id="r_a21fc252e5d9531c12119908ebeed17d0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21fc252e5d9531c12119908ebeed17d0">GetItem</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, PROPVARIANT *value) const</td></tr>
<tr class="separator:a21fc252e5d9531c12119908ebeed17d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56ec400114f57b564fd1c368011d7d0e" id="r_a56ec400114f57b564fd1c368011d7d0e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56ec400114f57b564fd1c368011d7d0e">GetItemType</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, MF_ATTRIBUTE_TYPE *type) const</td></tr>
<tr class="separator:a56ec400114f57b564fd1c368011d7d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6203f7006fa21a249f347dc2c65e8ec" id="r_ae6203f7006fa21a249f347dc2c65e8ec"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6203f7006fa21a249f347dc2c65e8ec">HasAttribute</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:ae6203f7006fa21a249f347dc2c65e8ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91b686b0306b69d4a58bc6e9be708149" id="r_a91b686b0306b69d4a58bc6e9be708149"><td class="memItemLeft" align="right" valign="top">MF_ATTRIBUTE_TYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91b686b0306b69d4a58bc6e9be708149">GetItemType</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a91b686b0306b69d4a58bc6e9be708149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7797bb22cc15373cc8fbb2f7601721c" id="r_ae7797bb22cc15373cc8fbb2f7601721c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae7797bb22cc15373cc8fbb2f7601721c">CompareItem</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, REFPROPVARIANT value, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *result) const</td></tr>
<tr class="separator:ae7797bb22cc15373cc8fbb2f7601721c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e0fcdf04cbb2570e29da6c9a353598b" id="r_a6e0fcdf04cbb2570e29da6c9a353598b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6e0fcdf04cbb2570e29da6c9a353598b">CompareItem</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, REFPROPVARIANT value) const</td></tr>
<tr class="separator:a6e0fcdf04cbb2570e29da6c9a353598b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a076e1554c24562602696290f30d83dfd" id="r_a076e1554c24562602696290f30d83dfd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a076e1554c24562602696290f30d83dfd">Compare</a> (IMFAttributes *other, MF_ATTRIBUTES_MATCH_TYPE matchType, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *result) const</td></tr>
<tr class="separator:a076e1554c24562602696290f30d83dfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadc3a87d378233bc3d49b823584ea011" id="r_aadc3a87d378233bc3d49b823584ea011"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aadc3a87d378233bc3d49b823584ea011">Compare</a> (const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> &amp;other, MF_ATTRIBUTES_MATCH_TYPE matchType, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *result) const</td></tr>
<tr class="separator:aadc3a87d378233bc3d49b823584ea011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affa88f6688548e5c53e6c4a13c0aacbe" id="r_affa88f6688548e5c53e6c4a13c0aacbe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#affa88f6688548e5c53e6c4a13c0aacbe">Compare</a> (IMFAttributes *other, MF_ATTRIBUTES_MATCH_TYPE matchType) const</td></tr>
<tr class="separator:affa88f6688548e5c53e6c4a13c0aacbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795a004be21ec147512461ff7b623435" id="r_a795a004be21ec147512461ff7b623435"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a795a004be21ec147512461ff7b623435">Compare</a> (const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> &amp;other, MF_ATTRIBUTES_MATCH_TYPE matchType) const</td></tr>
<tr class="separator:a795a004be21ec147512461ff7b623435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a290ce938a8ea96bf2dfc6b6165c5c8c2" id="r_a290ce938a8ea96bf2dfc6b6165c5c8c2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a290ce938a8ea96bf2dfc6b6165c5c8c2">GetUINT32</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT32 *value) const</td></tr>
<tr class="separator:a290ce938a8ea96bf2dfc6b6165c5c8c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09ed67c8fd222454963be4d869aec99e" id="r_a09ed67c8fd222454963be4d869aec99e"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09ed67c8fd222454963be4d869aec99e">GetUINT32</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a09ed67c8fd222454963be4d869aec99e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60d6bff61bd1e5364365123a82985b32" id="r_a60d6bff61bd1e5364365123a82985b32"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a60d6bff61bd1e5364365123a82985b32">GetUINT32OrDefault</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT32 defaultValue=0) const</td></tr>
<tr class="separator:a60d6bff61bd1e5364365123a82985b32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae10837572cca9fa261350336c9db1eb3" id="r_ae10837572cca9fa261350336c9db1eb3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae10837572cca9fa261350336c9db1eb3">GetUINT64</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT64 *value) const</td></tr>
<tr class="separator:ae10837572cca9fa261350336c9db1eb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae27c3d315c99946a310880ba0a6b4f4c" id="r_ae27c3d315c99946a310880ba0a6b4f4c"><td class="memItemLeft" align="right" valign="top">UINT64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae27c3d315c99946a310880ba0a6b4f4c">GetUINT64</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:ae27c3d315c99946a310880ba0a6b4f4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf61f3a03f9fe8d0d98bf04946bfb4de" id="r_abf61f3a03f9fe8d0d98bf04946bfb4de"><td class="memItemLeft" align="right" valign="top">UINT64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abf61f3a03f9fe8d0d98bf04946bfb4de">GetUINT64OrDefault</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT64 defaultValue=0) const</td></tr>
<tr class="separator:abf61f3a03f9fe8d0d98bf04946bfb4de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1cf50c322fa7e2c4481421318b734fe" id="r_aa1cf50c322fa7e2c4481421318b734fe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa1cf50c322fa7e2c4481421318b734fe">GetDouble</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, double *value) const</td></tr>
<tr class="separator:aa1cf50c322fa7e2c4481421318b734fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9320082cd51a4b6e21def7f3fbc51e4" id="r_ac9320082cd51a4b6e21def7f3fbc51e4"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9320082cd51a4b6e21def7f3fbc51e4">GetDouble</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:ac9320082cd51a4b6e21def7f3fbc51e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de99bd1a59233caebf770c9c3ff485f" id="r_a1de99bd1a59233caebf770c9c3ff485f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1de99bd1a59233caebf770c9c3ff485f">GetDoubleOrDefault</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, double defaultValue=0.0) const</td></tr>
<tr class="separator:a1de99bd1a59233caebf770c9c3ff485f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2917f5e83fc7453305c4d92fca9fc5a" id="r_ab2917f5e83fc7453305c4d92fca9fc5a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab2917f5e83fc7453305c4d92fca9fc5a">GetGUID</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> *value) const</td></tr>
<tr class="separator:ab2917f5e83fc7453305c4d92fca9fc5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2da1133a86cc234f2047012afa866a8a" id="r_a2da1133a86cc234f2047012afa866a8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2da1133a86cc234f2047012afa866a8a">GetGUID</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a2da1133a86cc234f2047012afa866a8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08809c207ec1e2cc50bfff9000647552" id="r_a08809c207ec1e2cc50bfff9000647552"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a08809c207ec1e2cc50bfff9000647552">GetGUIDOrDefault</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;defaultValue=<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a>()) const</td></tr>
<tr class="separator:a08809c207ec1e2cc50bfff9000647552"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c60ebb0cf3a45e516f60f9ef94e7216" id="r_a0c60ebb0cf3a45e516f60f9ef94e7216"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0c60ebb0cf3a45e516f60f9ef94e7216">GetStringLength</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT32 *length) const</td></tr>
<tr class="separator:a0c60ebb0cf3a45e516f60f9ef94e7216"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb84c3df10f976f6235c241fa627b4cf" id="r_acb84c3df10f976f6235c241fa627b4cf"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb84c3df10f976f6235c241fa627b4cf">GetStringLength</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:acb84c3df10f976f6235c241fa627b4cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a152d190118b7d0fcbac0400373b6e468" id="r_a152d190118b7d0fcbac0400373b6e468"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a152d190118b7d0fcbac0400373b6e468">GetString</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, LPWSTR buffer, UINT32 bufferSize, UINT32 *length=nullptr) const</td></tr>
<tr class="separator:a152d190118b7d0fcbac0400373b6e468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c441bc4d1c0029127c87e903507b620" id="r_a3c441bc4d1c0029127c87e903507b620"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c441bc4d1c0029127c87e903507b620">GetString</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a3c441bc4d1c0029127c87e903507b620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5490b8739b09002400be225ed2f004ad" id="r_a5490b8739b09002400be225ed2f004ad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5490b8739b09002400be225ed2f004ad">GetAllocatedString</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, LPWSTR *buffer, UINT32 *length) const</td></tr>
<tr class="separator:a5490b8739b09002400be225ed2f004ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac12f2cc7e70c477444e6168c008f1a86" id="r_ac12f2cc7e70c477444e6168c008f1a86"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac12f2cc7e70c477444e6168c008f1a86">GetBlobSize</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT32 *blobSize) const</td></tr>
<tr class="separator:ac12f2cc7e70c477444e6168c008f1a86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29392b3087562f01de983e342d119fbb" id="r_a29392b3087562f01de983e342d119fbb"><td class="memItemLeft" align="right" valign="top">UINT32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a29392b3087562f01de983e342d119fbb">GetBlobSize</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a29392b3087562f01de983e342d119fbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac501207142e4801870bd0e679799ccfd" id="r_ac501207142e4801870bd0e679799ccfd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac501207142e4801870bd0e679799ccfd">GetBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT8 *buffer, UINT32 bufferSize, UINT32 *blobSize=nullptr) const</td></tr>
<tr class="separator:ac501207142e4801870bd0e679799ccfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e54c902f938813fc3194d5e46475c70" id="r_a2e54c902f938813fc3194d5e46475c70"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </td></tr>
<tr class="memitem:a2e54c902f938813fc3194d5e46475c70"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_blob_value.xhtml">MF::BlobValue</a>&lt; <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a2e54c902f938813fc3194d5e46475c70">GetBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a2e54c902f938813fc3194d5e46475c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada37c6497f3e7ef7f89a03b8efba7a03" id="r_ada37c6497f3e7ef7f89a03b8efba7a03"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ada37c6497f3e7ef7f89a03b8efba7a03">GetAllocatedBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT8 **buffer, UINT32 *blobSize) const</td></tr>
<tr class="separator:ada37c6497f3e7ef7f89a03b8efba7a03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ac0a20930b435a114e6cd24f2ec674" id="r_a73ac0a20930b435a114e6cd24f2ec674"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a73ac0a20930b435a114e6cd24f2ec674">GetUnknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;riid, LPVOID *result) const</td></tr>
<tr class="separator:a73ac0a20930b435a114e6cd24f2ec674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2502efe32b881a71e0e673b05c92eaf9" id="r_a2502efe32b881a71e0e673b05c92eaf9"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>,<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a>&gt;</td></tr>
<tr class="memitem:a2502efe32b881a71e0e673b05c92eaf9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a2502efe32b881a71e0e673b05c92eaf9">GetUnknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a2502efe32b881a71e0e673b05c92eaf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea47295bc4c3a89967843aae8761e2e" id="r_a1ea47295bc4c3a89967843aae8761e2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ea47295bc4c3a89967843aae8761e2e">SetItem</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, REFPROPVARIANT Value) const</td></tr>
<tr class="separator:a1ea47295bc4c3a89967843aae8761e2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a2be9f4bc7d8a14c70677b3b91af66b" id="r_a8a2be9f4bc7d8a14c70677b3b91af66b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a2be9f4bc7d8a14c70677b3b91af66b">DeleteItem</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key) const</td></tr>
<tr class="separator:a8a2be9f4bc7d8a14c70677b3b91af66b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12cd134b25d147e2a6add11fcdaee274" id="r_a12cd134b25d147e2a6add11fcdaee274"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a12cd134b25d147e2a6add11fcdaee274">DeleteAllItems</a> () const</td></tr>
<tr class="separator:a12cd134b25d147e2a6add11fcdaee274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2ad2e8f2cd88a831aac1cc0e4d8df05" id="r_af2ad2e8f2cd88a831aac1cc0e4d8df05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af2ad2e8f2cd88a831aac1cc0e4d8df05">SetUINT32</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT32 value) const</td></tr>
<tr class="separator:af2ad2e8f2cd88a831aac1cc0e4d8df05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05fd77e54dbd4df58597099272fde040" id="r_a05fd77e54dbd4df58597099272fde040"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a05fd77e54dbd4df58597099272fde040">SetUINT64</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, UINT64 value) const</td></tr>
<tr class="separator:a05fd77e54dbd4df58597099272fde040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814625f0497c45c3a4b7d7dce7d0dab7" id="r_a814625f0497c45c3a4b7d7dce7d0dab7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a814625f0497c45c3a4b7d7dce7d0dab7">SetDouble</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, double value) const</td></tr>
<tr class="separator:a814625f0497c45c3a4b7d7dce7d0dab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e99565a1cf086fbf8e0c34f8826e05b" id="r_a2e99565a1cf086fbf8e0c34f8826e05b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2e99565a1cf086fbf8e0c34f8826e05b">SetGUID</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;value) const</td></tr>
<tr class="separator:a2e99565a1cf086fbf8e0c34f8826e05b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa98f6605e478c761582d52b676e22f98" id="r_aa98f6605e478c761582d52b676e22f98"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa98f6605e478c761582d52b676e22f98">SetString</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, LPCWSTR value) const</td></tr>
<tr class="separator:aa98f6605e478c761582d52b676e22f98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae29145d31e49c8f546014599cc7d0631" id="r_ae29145d31e49c8f546014599cc7d0631"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae29145d31e49c8f546014599cc7d0631">SetString</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;value) const</td></tr>
<tr class="separator:ae29145d31e49c8f546014599cc7d0631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1499474500a16f02709e0bc5fc524254" id="r_a1499474500a16f02709e0bc5fc524254"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1499474500a16f02709e0bc5fc524254">SetBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const UINT8 *buffer, UINT32 bufferSize) const</td></tr>
<tr class="separator:a1499474500a16f02709e0bc5fc524254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b892327c88c5b4cd8f2e2f5be18590" id="r_af5b892327c88c5b4cd8f2e2f5be18590"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af5b892327c88c5b4cd8f2e2f5be18590">SetBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const std::span&lt; byte &gt; &amp;buffer) const</td></tr>
<tr class="separator:af5b892327c88c5b4cd8f2e2f5be18590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4d7735ed695ff099a297222e476a541" id="r_ab4d7735ed695ff099a297222e476a541"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab4d7735ed695ff099a297222e476a541">SetBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const std::vector&lt; byte &gt; &amp;buffer) const</td></tr>
<tr class="separator:ab4d7735ed695ff099a297222e476a541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512fb81741ec42886948c2f2a8e324a5" id="r_a512fb81741ec42886948c2f2a8e324a5"><td class="memTemplParams" colspan="2">template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </td></tr>
<tr class="memitem:a512fb81741ec42886948c2f2a8e324a5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a512fb81741ec42886948c2f2a8e324a5">SetBlob</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_blob_value.xhtml">MF::BlobValue</a>&lt; <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; &amp;blob) const</td></tr>
<tr class="separator:a512fb81741ec42886948c2f2a8e324a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61aa7c7d51d35d3df71130d8f70c4ff6" id="r_a61aa7c7d51d35d3df71130d8f70c4ff6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61aa7c7d51d35d3df71130d8f70c4ff6">SetUnknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;key, IUnknown *unknown) const</td></tr>
<tr class="separator:a61aa7c7d51d35d3df71130d8f70c4ff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af29ffb76cc3d52ac79ac80d0eeeca2ed" id="r_af29ffb76cc3d52ac79ac80d0eeeca2ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af29ffb76cc3d52ac79ac80d0eeeca2ed">LockStore</a> () const</td></tr>
<tr class="separator:af29ffb76cc3d52ac79ac80d0eeeca2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a510fe5c6d5bf6423e95c8b5b0b02be6b" id="r_a510fe5c6d5bf6423e95c8b5b0b02be6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a510fe5c6d5bf6423e95c8b5b0b02be6b">lock</a> () const</td></tr>
<tr class="separator:a510fe5c6d5bf6423e95c8b5b0b02be6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b8a73ab829a6a3ef37920720da93cf1" id="r_a3b8a73ab829a6a3ef37920720da93cf1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b8a73ab829a6a3ef37920720da93cf1">UnlockStore</a> () const</td></tr>
<tr class="separator:a3b8a73ab829a6a3ef37920720da93cf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31b518be09cd1d6bc86604bec5eceb71" id="r_a31b518be09cd1d6bc86604bec5eceb71"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a31b518be09cd1d6bc86604bec5eceb71">unlock</a> () const</td></tr>
<tr class="separator:a31b518be09cd1d6bc86604bec5eceb71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5eeee3733b57a9049437d2d039ce3d" id="r_a0e5eeee3733b57a9049437d2d039ce3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0e5eeee3733b57a9049437d2d039ce3d">GetCount</a> (UINT32 *result) const</td></tr>
<tr class="separator:a0e5eeee3733b57a9049437d2d039ce3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a433e39544fc00aaeac0472b122ac17e0" id="r_a433e39544fc00aaeac0472b122ac17e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a433e39544fc00aaeac0472b122ac17e0">GetCount</a> () const</td></tr>
<tr class="separator:a433e39544fc00aaeac0472b122ac17e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaff48f6f93266e715d061af53b38c7cb" id="r_aaff48f6f93266e715d061af53b38c7cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaff48f6f93266e715d061af53b38c7cb">GetItemByIndex</a> (UINT32 index, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> *key, PROPVARIANT *value=nullptr) const</td></tr>
<tr class="separator:aaff48f6f93266e715d061af53b38c7cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab386293158b0892effe03845feb16b8a" id="r_ab386293158b0892effe03845feb16b8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab386293158b0892effe03845feb16b8a">GetItemKeyByIndex</a> (UINT32 index) const</td></tr>
<tr class="separator:ab386293158b0892effe03845feb16b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2021986b7a4b3a8ee5daa1d361244641" id="r_a2021986b7a4b3a8ee5daa1d361244641"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2021986b7a4b3a8ee5daa1d361244641">CopyAllItems</a> (IMFAttributes *destination) const</td></tr>
<tr class="separator:a2021986b7a4b3a8ee5daa1d361244641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29d59045bcf39225b845c80b09cc381d" id="r_a29d59045bcf39225b845c80b09cc381d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a29d59045bcf39225b845c80b09cc381d">CopyAllItems</a> (const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> &amp;destination) const</td></tr>
<tr class="separator:a29d59045bcf39225b845c80b09cc381d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a0887513431c98f95b9b4bc0c1588f318" id="r_a0887513431c98f95b9b4bc0c1588f318"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0887513431c98f95b9b4bc0c1588f318">Create</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> initialSize)</td></tr>
<tr class="separator:a0887513431c98f95b9b4bc0c1588f318"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a426f04846feada41e4b32642ca8f22d8" id="r_a426f04846feada41e4b32642ca8f22d8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a426f04846feada41e4b32642ca8f22d8">Create</a> (const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_attributes.xhtml">MF::Attributes</a> &amp;attributes)</td></tr>
<tr class="separator:a426f04846feada41e4b32642ca8f22d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Provides a generic way to store key/value pairs on an object. The keys are GUIDs, and the values can be any of the following data types: UINT32, UINT64, double, GUID, wide-character string, byte array, or IUnknown pointer. The standard implementation of this interface holds a thread lock while values are added, deleted, or retrieved. </p>
<p>For a list of predefined attribute GUIDs, see Media Foundation Attributes. Each attribute GUID has an expected data type. The various "set" methods in <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> do not validate the type against the attribute GUID. It is the application's responsibility to set the correct type for the attribute. </p>
<p>To create an empty attribute store, call <a class="el" href="#a0887513431c98f95b9b4bc0c1588f318">MFAttributes::Create</a>. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a795a004be21ec147512461ff7b623435" name="a795a004be21ec147512461ff7b623435"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a795a004be21ec147512461ff7b623435">&#9670;&#160;</a></span>Compare() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::Compare </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MF_ATTRIBUTES_MATCH_TYPE</td>          <td class="paramname"><span class="paramname"><em>matchType</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aadc3a87d378233bc3d49b823584ea011" name="aadc3a87d378233bc3d49b823584ea011"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadc3a87d378233bc3d49b823584ea011">&#9670;&#160;</a></span>Compare() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::Compare </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MF_ATTRIBUTES_MATCH_TYPE</td>          <td class="paramname"><span class="paramname"><em>matchType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="affa88f6688548e5c53e6c4a13c0aacbe" name="affa88f6688548e5c53e6c4a13c0aacbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affa88f6688548e5c53e6c4a13c0aacbe">&#9670;&#160;</a></span>Compare() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::Compare </td>
          <td>(</td>
          <td class="paramtype">IMFAttributes *</td>          <td class="paramname"><span class="paramname"><em>other</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MF_ATTRIBUTES_MATCH_TYPE</td>          <td class="paramname"><span class="paramname"><em>matchType</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a076e1554c24562602696290f30d83dfd" name="a076e1554c24562602696290f30d83dfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a076e1554c24562602696290f30d83dfd">&#9670;&#160;</a></span>Compare() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::Compare </td>
          <td>(</td>
          <td class="paramtype">IMFAttributes *</td>          <td class="paramname"><span class="paramname"><em>other</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MF_ATTRIBUTES_MATCH_TYPE</td>          <td class="paramname"><span class="paramname"><em>matchType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e0fcdf04cbb2570e29da6c9a353598b" name="a6e0fcdf04cbb2570e29da6c9a353598b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e0fcdf04cbb2570e29da6c9a353598b">&#9670;&#160;</a></span>CompareItem() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::CompareItem </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REFPROPVARIANT</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7797bb22cc15373cc8fbb2f7601721c" name="ae7797bb22cc15373cc8fbb2f7601721c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7797bb22cc15373cc8fbb2f7601721c">&#9670;&#160;</a></span>CompareItem() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::CompareItem </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REFPROPVARIANT</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a29d59045bcf39225b845c80b09cc381d" name="a29d59045bcf39225b845c80b09cc381d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29d59045bcf39225b845c80b09cc381d">&#9670;&#160;</a></span>CopyAllItems() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::CopyAllItems </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>destination</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2021986b7a4b3a8ee5daa1d361244641" name="a2021986b7a4b3a8ee5daa1d361244641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2021986b7a4b3a8ee5daa1d361244641">&#9670;&#160;</a></span>CopyAllItems() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::CopyAllItems </td>
          <td>(</td>
          <td class="paramtype">IMFAttributes *</td>          <td class="paramname"><span class="paramname"><em>destination</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a426f04846feada41e4b32642ca8f22d8" name="a426f04846feada41e4b32642ca8f22d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a426f04846feada41e4b32642ca8f22d8">&#9670;&#160;</a></span>Create() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> Harlinn::Windows::MFAttributes::Create </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_attributes.xhtml">MF::Attributes</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>attributes</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0887513431c98f95b9b4bc0c1588f318" name="a0887513431c98f95b9b4bc0c1588f318"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0887513431c98f95b9b4bc0c1588f318">&#9670;&#160;</a></span>Create() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a> Harlinn::Windows::MFAttributes::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a></td>          <td class="paramname"><span class="paramname"><em>initialSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a12cd134b25d147e2a6add11fcdaee274" name="a12cd134b25d147e2a6add11fcdaee274"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12cd134b25d147e2a6add11fcdaee274">&#9670;&#160;</a></span>DeleteAllItems()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::DeleteAllItems </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8a2be9f4bc7d8a14c70677b3b91af66b" name="a8a2be9f4bc7d8a14c70677b3b91af66b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a2be9f4bc7d8a14c70677b3b91af66b">&#9670;&#160;</a></span>DeleteItem()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::DeleteItem </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ada37c6497f3e7ef7f89a03b8efba7a03" name="ada37c6497f3e7ef7f89a03b8efba7a03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada37c6497f3e7ef7f89a03b8efba7a03">&#9670;&#160;</a></span>GetAllocatedBlob()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetAllocatedBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT8 **</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>blobSize</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5490b8739b09002400be225ed2f004ad" name="a5490b8739b09002400be225ed2f004ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5490b8739b09002400be225ed2f004ad">&#9670;&#160;</a></span>GetAllocatedString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetAllocatedString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPWSTR *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>length</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e54c902f938813fc3194d5e46475c70" name="a2e54c902f938813fc3194d5e46475c70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e54c902f938813fc3194d5e46475c70">&#9670;&#160;</a></span>GetBlob() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_blob_value.xhtml">MF::BlobValue</a>&lt; <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; Harlinn::Windows::MFAttributes::GetBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac501207142e4801870bd0e679799ccfd" name="ac501207142e4801870bd0e679799ccfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac501207142e4801870bd0e679799ccfd">&#9670;&#160;</a></span>GetBlob() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT8 *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>bufferSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>blobSize</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a29392b3087562f01de983e342d119fbb" name="a29392b3087562f01de983e342d119fbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29392b3087562f01de983e342d119fbb">&#9670;&#160;</a></span>GetBlobSize() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT32 Harlinn::Windows::MFAttributes::GetBlobSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac12f2cc7e70c477444e6168c008f1a86" name="ac12f2cc7e70c477444e6168c008f1a86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac12f2cc7e70c477444e6168c008f1a86">&#9670;&#160;</a></span>GetBlobSize() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetBlobSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>blobSize</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a433e39544fc00aaeac0472b122ac17e0" name="a433e39544fc00aaeac0472b122ac17e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a433e39544fc00aaeac0472b122ac17e0">&#9670;&#160;</a></span>GetCount() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a9633dfa5c015d8773e20d1aa6035a966">UInt32</a> Harlinn::Windows::MFAttributes::GetCount </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0e5eeee3733b57a9049437d2d039ce3d" name="a0e5eeee3733b57a9049437d2d039ce3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e5eeee3733b57a9049437d2d039ce3d">&#9670;&#160;</a></span>GetCount() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::GetCount </td>
          <td>(</td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>result</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac9320082cd51a4b6e21def7f3fbc51e4" name="ac9320082cd51a4b6e21def7f3fbc51e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9320082cd51a4b6e21def7f3fbc51e4">&#9670;&#160;</a></span>GetDouble() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Windows::MFAttributes::GetDouble </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1cf50c322fa7e2c4481421318b734fe" name="aa1cf50c322fa7e2c4481421318b734fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1cf50c322fa7e2c4481421318b734fe">&#9670;&#160;</a></span>GetDouble() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetDouble </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1de99bd1a59233caebf770c9c3ff485f" name="a1de99bd1a59233caebf770c9c3ff485f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de99bd1a59233caebf770c9c3ff485f">&#9670;&#160;</a></span>GetDoubleOrDefault()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Harlinn::Windows::MFAttributes::GetDoubleOrDefault </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>defaultValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0.0</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2da1133a86cc234f2047012afa866a8a" name="a2da1133a86cc234f2047012afa866a8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2da1133a86cc234f2047012afa866a8a">&#9670;&#160;</a></span>GetGUID() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> Harlinn::Windows::MFAttributes::GetGUID </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab2917f5e83fc7453305c4d92fca9fc5a" name="ab2917f5e83fc7453305c4d92fca9fc5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2917f5e83fc7453305c4d92fca9fc5a">&#9670;&#160;</a></span>GetGUID() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetGUID </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> *</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a08809c207ec1e2cc50bfff9000647552" name="a08809c207ec1e2cc50bfff9000647552"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08809c207ec1e2cc50bfff9000647552">&#9670;&#160;</a></span>GetGUIDOrDefault()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> Harlinn::Windows::MFAttributes::GetGUIDOrDefault </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>defaultValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a>()</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a21fc252e5d9531c12119908ebeed17d0" name="a21fc252e5d9531c12119908ebeed17d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21fc252e5d9531c12119908ebeed17d0">&#9670;&#160;</a></span>GetItem()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetItem </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PROPVARIANT *</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaff48f6f93266e715d061af53b38c7cb" name="aaff48f6f93266e715d061af53b38c7cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaff48f6f93266e715d061af53b38c7cb">&#9670;&#160;</a></span>GetItemByIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::GetItemByIndex </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> *</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PROPVARIANT *</td>          <td class="paramname"><span class="paramname"><em>value</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab386293158b0892effe03845feb16b8a" name="ab386293158b0892effe03845feb16b8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab386293158b0892effe03845feb16b8a">&#9670;&#160;</a></span>GetItemKeyByIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> Harlinn::Windows::MFAttributes::GetItemKeyByIndex </td>
          <td>(</td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a91b686b0306b69d4a58bc6e9be708149" name="a91b686b0306b69d4a58bc6e9be708149"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91b686b0306b69d4a58bc6e9be708149">&#9670;&#160;</a></span>GetItemType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MF_ATTRIBUTE_TYPE Harlinn::Windows::MFAttributes::GetItemType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a56ec400114f57b564fd1c368011d7d0e" name="a56ec400114f57b564fd1c368011d7d0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56ec400114f57b564fd1c368011d7d0e">&#9670;&#160;</a></span>GetItemType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetItemType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MF_ATTRIBUTE_TYPE *</td>          <td class="paramname"><span class="paramname"><em>type</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c441bc4d1c0029127c87e903507b620" name="a3c441bc4d1c0029127c87e903507b620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c441bc4d1c0029127c87e903507b620">&#9670;&#160;</a></span>GetString() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Windows::MFAttributes::GetString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a152d190118b7d0fcbac0400373b6e468" name="a152d190118b7d0fcbac0400373b6e468"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a152d190118b7d0fcbac0400373b6e468">&#9670;&#160;</a></span>GetString() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPWSTR</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>bufferSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>length</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb84c3df10f976f6235c241fa627b4cf" name="acb84c3df10f976f6235c241fa627b4cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb84c3df10f976f6235c241fa627b4cf">&#9670;&#160;</a></span>GetStringLength() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT32 Harlinn::Windows::MFAttributes::GetStringLength </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0c60ebb0cf3a45e516f60f9ef94e7216" name="a0c60ebb0cf3a45e516f60f9ef94e7216"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c60ebb0cf3a45e516f60f9ef94e7216">&#9670;&#160;</a></span>GetStringLength() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetStringLength </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>length</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a09ed67c8fd222454963be4d869aec99e" name="a09ed67c8fd222454963be4d869aec99e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09ed67c8fd222454963be4d869aec99e">&#9670;&#160;</a></span>GetUINT32() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT32 Harlinn::Windows::MFAttributes::GetUINT32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a290ce938a8ea96bf2dfc6b6165c5c8c2" name="a290ce938a8ea96bf2dfc6b6165c5c8c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a290ce938a8ea96bf2dfc6b6165c5c8c2">&#9670;&#160;</a></span>GetUINT32() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetUINT32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32 *</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a60d6bff61bd1e5364365123a82985b32" name="a60d6bff61bd1e5364365123a82985b32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60d6bff61bd1e5364365123a82985b32">&#9670;&#160;</a></span>GetUINT32OrDefault()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT32 Harlinn::Windows::MFAttributes::GetUINT32OrDefault </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>defaultValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae27c3d315c99946a310880ba0a6b4f4c" name="ae27c3d315c99946a310880ba0a6b4f4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae27c3d315c99946a310880ba0a6b4f4c">&#9670;&#160;</a></span>GetUINT64() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT64 Harlinn::Windows::MFAttributes::GetUINT64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae10837572cca9fa261350336c9db1eb3" name="ae10837572cca9fa261350336c9db1eb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae10837572cca9fa261350336c9db1eb3">&#9670;&#160;</a></span>GetUINT64() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetUINT64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT64 *</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abf61f3a03f9fe8d0d98bf04946bfb4de" name="abf61f3a03f9fe8d0d98bf04946bfb4de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf61f3a03f9fe8d0d98bf04946bfb4de">&#9670;&#160;</a></span>GetUINT64OrDefault()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">UINT64 Harlinn::Windows::MFAttributes::GetUINT64OrDefault </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT64</td>          <td class="paramname"><span class="paramname"><em>defaultValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2502efe32b881a71e0e673b05c92eaf9" name="a2502efe32b881a71e0e673b05c92eaf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2502efe32b881a71e0e673b05c92eaf9">&#9670;&#160;</a></span>GetUnknown() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>,<a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a>&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> Harlinn::Windows::MFAttributes::GetUnknown </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a73ac0a20930b435a114e6cd24f2ec674" name="a73ac0a20930b435a114e6cd24f2ec674"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73ac0a20930b435a114e6cd24f2ec674">&#9670;&#160;</a></span>GetUnknown() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::GetUnknown </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>riid</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPVOID *</td>          <td class="paramname"><span class="paramname"><em>result</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae6203f7006fa21a249f347dc2c65e8ec" name="ae6203f7006fa21a249f347dc2c65e8ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6203f7006fa21a249f347dc2c65e8ec">&#9670;&#160;</a></span>HasAttribute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Windows::MFAttributes::HasAttribute </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a510fe5c6d5bf6423e95c8b5b0b02be6b" name="a510fe5c6d5bf6423e95c8b5b0b02be6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a510fe5c6d5bf6423e95c8b5b0b02be6b">&#9670;&#160;</a></span>lock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::lock </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af29ffb76cc3d52ac79ac80d0eeeca2ed" name="af29ffb76cc3d52ac79ac80d0eeeca2ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af29ffb76cc3d52ac79ac80d0eeeca2ed">&#9670;&#160;</a></span>LockStore()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::LockStore </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a217efd5623d2e9f8801214c99a26c2ff" name="a217efd5623d2e9f8801214c99a26c2ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a217efd5623d2e9f8801214c99a26c2ff">&#9670;&#160;</a></span>Read()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReaderT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::Read </td>
          <td>(</td>
          <td class="paramtype">ReaderT &amp;</td>          <td class="paramname"><span class="paramname"><em>reader</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a512fb81741ec42886948c2f2a8e324a5" name="a512fb81741ec42886948c2f2a8e324a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a512fb81741ec42886948c2f2a8e324a5">&#9670;&#160;</a></span>SetBlob() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_windows_1_1_m_f_1_1_blob_value.xhtml">MF::BlobValue</a>&lt; <a class="el" href="namespace_harlinn_1_1_windows.xhtml#ae78a358018b23c0b19e707c580404bcdab9ece18c950afbfa6b0fdbfa4ff731d3">T</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>blob</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af5b892327c88c5b4cd8f2e2f5be18590" name="af5b892327c88c5b4cd8f2e2f5be18590"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5b892327c88c5b4cd8f2e2f5be18590">&#9670;&#160;</a></span>SetBlob() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::span&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab4d7735ed695ff099a297222e476a541" name="ab4d7735ed695ff099a297222e476a541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4d7735ed695ff099a297222e476a541">&#9670;&#160;</a></span>SetBlob() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; byte &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1499474500a16f02709e0bc5fc524254" name="a1499474500a16f02709e0bc5fc524254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1499474500a16f02709e0bc5fc524254">&#9670;&#160;</a></span>SetBlob() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetBlob </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const UINT8 *</td>          <td class="paramname"><span class="paramname"><em>buffer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>bufferSize</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a814625f0497c45c3a4b7d7dce7d0dab7" name="a814625f0497c45c3a4b7d7dce7d0dab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a814625f0497c45c3a4b7d7dce7d0dab7">&#9670;&#160;</a></span>SetDouble()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetDouble </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2e99565a1cf086fbf8e0c34f8826e05b" name="a2e99565a1cf086fbf8e0c34f8826e05b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e99565a1cf086fbf8e0c34f8826e05b">&#9670;&#160;</a></span>SetGUID()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetGUID </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ea47295bc4c3a89967843aae8761e2e" name="a1ea47295bc4c3a89967843aae8761e2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ea47295bc4c3a89967843aae8761e2e">&#9670;&#160;</a></span>SetItem()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetItem </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REFPROPVARIANT</td>          <td class="paramname"><span class="paramname"><em>Value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae29145d31e49c8f546014599cc7d0631" name="ae29145d31e49c8f546014599cc7d0631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae29145d31e49c8f546014599cc7d0631">&#9670;&#160;</a></span>SetString() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa98f6605e478c761582d52b676e22f98" name="aa98f6605e478c761582d52b676e22f98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa98f6605e478c761582d52b676e22f98">&#9670;&#160;</a></span>SetString() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LPCWSTR</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af2ad2e8f2cd88a831aac1cc0e4d8df05" name="af2ad2e8f2cd88a831aac1cc0e4d8df05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2ad2e8f2cd88a831aac1cc0e4d8df05">&#9670;&#160;</a></span>SetUINT32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetUINT32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a05fd77e54dbd4df58597099272fde040" name="a05fd77e54dbd4df58597099272fde040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05fd77e54dbd4df58597099272fde040">&#9670;&#160;</a></span>SetUINT64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetUINT64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT64</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61aa7c7d51d35d3df71130d8f70c4ff6" name="a61aa7c7d51d35d3df71130d8f70c4ff6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61aa7c7d51d35d3df71130d8f70c4ff6">&#9670;&#160;</a></span>SetUnknown()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::SetUnknown </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>key</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IUnknown *</td>          <td class="paramname"><span class="paramname"><em>unknown</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a31b518be09cd1d6bc86604bec5eceb71" name="a31b518be09cd1d6bc86604bec5eceb71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31b518be09cd1d6bc86604bec5eceb71">&#9670;&#160;</a></span>unlock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::unlock </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b8a73ab829a6a3ef37920720da93cf1" name="a3b8a73ab829a6a3ef37920720da93cf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b8a73ab829a6a3ef37920720da93cf1">&#9670;&#160;</a></span>UnlockStore()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::UnlockStore </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8184909533d20e8995ece36514e66277" name="a8184909533d20e8995ece36514e66277"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8184909533d20e8995ece36514e66277">&#9670;&#160;</a></span>Write()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename WriterT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Windows::MFAttributes::Write </td>
          <td>(</td>
          <td class="paramtype">WriterT &amp;</td>          <td class="paramname"><span class="paramname"><em>writer</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_m_f_objects_8h.xhtml">HWMFObjects.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_m_f_attributes.xhtml">MFAttributes</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
