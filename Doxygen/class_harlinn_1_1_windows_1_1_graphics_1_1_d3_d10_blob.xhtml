<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::Graphics::D3D10Blob Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::Graphics::D3D10Blob Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Used to return arbitrary-length data.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HWGraphicsD3Common.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::Graphics::D3D10Blob:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob__inherit__graph.svg" width="194" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::Graphics::D3D10Blob:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob__coll__graph.svg" width="194" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a63d00b6444b9309d606468192818ed13" id="r_a63d00b6444b9309d606468192818ed13"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a63d00b6444b9309d606468192818ed13">Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a></td></tr>
<tr class="separator:a63d00b6444b9309d606468192818ed13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f9d739c7dfdbb02440a62c24a95193" id="r_ab7f9d739c7dfdbb02440a62c24a95193"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a></td></tr>
<tr class="separator:ab7f9d739c7dfdbb02440a62c24a95193"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a557700cf93103dadb39242dec490faa6" id="r_a557700cf93103dadb39242dec490faa6"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a557700cf93103dadb39242dec490faa6">size_type</a> = size_t</td></tr>
<tr class="separator:a557700cf93103dadb39242dec490faa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cd5c526b84f9c1714dbb2468afbf96e" id="r_a6cd5c526b84f9c1714dbb2468afbf96e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6cd5c526b84f9c1714dbb2468afbf96e">difference_type</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a42f0cd3c6591607713644eea77e8fed9">SSizeT</a></td></tr>
<tr class="separator:a6cd5c526b84f9c1714dbb2468afbf96e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ab6df754a68ead1ccde501a6b90d23e" id="r_a0ab6df754a68ead1ccde501a6b90d23e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0ab6df754a68ead1ccde501a6b90d23e">pointer</a> = <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>*</td></tr>
<tr class="separator:a0ab6df754a68ead1ccde501a6b90d23e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0423e2b1158a7e682592c46629084eab" id="r_a0423e2b1158a7e682592c46629084eab"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a> = <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&amp;</td></tr>
<tr class="separator:a0423e2b1158a7e682592c46629084eab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a595546faf457c1b02da4cb828dd733f2" id="r_a595546faf457c1b02da4cb828dd733f2"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a595546faf457c1b02da4cb828dd733f2">const_pointer</a> = const <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>*</td></tr>
<tr class="separator:a595546faf457c1b02da4cb828dd733f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20e6195b6cfb1cff567751460eae5f9e" id="r_a20e6195b6cfb1cff567751460eae5f9e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a> = const <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&amp;</td></tr>
<tr class="separator:a20e6195b6cfb1cff567751460eae5f9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac87be17153a6467f4c31bc4fb5b22de3" id="r_ac87be17153a6467f4c31bc4fb5b22de3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator</a>&lt;<a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob.xhtml">D3D10Blob</a>&gt;</td></tr>
<tr class="separator:ac87be17153a6467f4c31bc4fb5b22de3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10cd648c061f6b73b2abd590d7723ce0" id="r_a10cd648c061f6b73b2abd590d7723ce0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator</a>&lt;<a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob.xhtml">D3D10Blob</a>&gt;</td></tr>
<tr class="separator:a10cd648c061f6b73b2abd590d7723ce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8df10d2ed28a886eb21a14b9d423bd8a" id="r_a8df10d2ed28a886eb21a14b9d423bd8a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8df10d2ed28a886eb21a14b9d423bd8a">reverse_iterator</a> = std::reverse_iterator&lt;<a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a>&gt;</td></tr>
<tr class="separator:a8df10d2ed28a886eb21a14b9d423bd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf29f9d8108300638e0def4ae6829a41" id="r_aaf29f9d8108300638e0def4ae6829a41"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a> = std::reverse_iterator&lt;<a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a>&gt;</td></tr>
<tr class="separator:aaf29f9d8108300638e0def4ae6829a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06c272e225740df07eaeb011268069a3" id="r_a06c272e225740df07eaeb011268069a3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a06c272e225740df07eaeb011268069a3">span_type</a> = std::span&lt;<a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&gt;</td></tr>
<tr class="separator:a06c272e225740df07eaeb011268069a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee5efde1260028688680d595985b66a" id="r_aeee5efde1260028688680d595985b66a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeee5efde1260028688680d595985b66a">const_span_type</a> = std::span&lt;const <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&gt;</td></tr>
<tr class="separator:aeee5efde1260028688680d595985b66a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a09ab82655461ed0a8bdfe49775f0ae80" id="r_a09ab82655461ed0a8bdfe49775f0ae80"><td class="memItemLeft" align="right" valign="top">LPVOID&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09ab82655461ed0a8bdfe49775f0ae80">GetBufferPointer</a> () const</td></tr>
<tr class="memdesc:a09ab82655461ed0a8bdfe49775f0ae80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the data.  <br /></td></tr>
<tr class="separator:a09ab82655461ed0a8bdfe49775f0ae80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe00005845af954f13105f29f2804b6c" id="r_abe00005845af954f13105f29f2804b6c"><td class="memItemLeft" align="right" valign="top">SIZE_T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe00005845af954f13105f29f2804b6c">GetBufferSize</a> () const</td></tr>
<tr class="memdesc:abe00005845af954f13105f29f2804b6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size.  <br /></td></tr>
<tr class="separator:abe00005845af954f13105f29f2804b6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b826c65ff23c0da9b90546374fdc2f" id="r_a60b826c65ff23c0da9b90546374fdc2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a06c272e225740df07eaeb011268069a3">span_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a60b826c65ff23c0da9b90546374fdc2f">ToSpan</a> ()</td></tr>
<tr class="separator:a60b826c65ff23c0da9b90546374fdc2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a061bca9a14c135e3245e1b1556357ad6" id="r_a061bca9a14c135e3245e1b1556357ad6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aeee5efde1260028688680d595985b66a">const_span_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a061bca9a14c135e3245e1b1556357ad6">ToSpan</a> () const</td></tr>
<tr class="separator:a061bca9a14c135e3245e1b1556357ad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97b23dd141f3f8e044aff987af782590" id="r_a97b23dd141f3f8e044aff987af782590"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97b23dd141f3f8e044aff987af782590">size</a> () const</td></tr>
<tr class="separator:a97b23dd141f3f8e044aff987af782590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3afdcfa6113b4f186b63163a9b57cc6" id="r_ad3afdcfa6113b4f186b63163a9b57cc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a0ab6df754a68ead1ccde501a6b90d23e">pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad3afdcfa6113b4f186b63163a9b57cc6">data</a> ()</td></tr>
<tr class="separator:ad3afdcfa6113b4f186b63163a9b57cc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59321440b5a687d1274697d67aa6ddfc" id="r_a59321440b5a687d1274697d67aa6ddfc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a595546faf457c1b02da4cb828dd733f2">const_pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a59321440b5a687d1274697d67aa6ddfc">data</a> () const</td></tr>
<tr class="separator:a59321440b5a687d1274697d67aa6ddfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d8f80e7a619bc0847c7e8ac4cedabb" id="r_ac0d8f80e7a619bc0847c7e8ac4cedabb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac0d8f80e7a619bc0847c7e8ac4cedabb">begin</a> ()</td></tr>
<tr class="separator:ac0d8f80e7a619bc0847c7e8ac4cedabb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1371921bd01d3436984767e701287814" id="r_a1371921bd01d3436984767e701287814"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1371921bd01d3436984767e701287814">begin</a> () const</td></tr>
<tr class="separator:a1371921bd01d3436984767e701287814"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d37c4e158154bffbb4a46c6037dd32e" id="r_a4d37c4e158154bffbb4a46c6037dd32e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d37c4e158154bffbb4a46c6037dd32e">cbegin</a> () const</td></tr>
<tr class="separator:a4d37c4e158154bffbb4a46c6037dd32e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeec588ef1f0e0ca3874cd5b1ef525a36" id="r_aeec588ef1f0e0ca3874cd5b1ef525a36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeec588ef1f0e0ca3874cd5b1ef525a36">end</a> ()</td></tr>
<tr class="separator:aeec588ef1f0e0ca3874cd5b1ef525a36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7fc131b3c935b54ad0e46cd834e769a" id="r_ae7fc131b3c935b54ad0e46cd834e769a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae7fc131b3c935b54ad0e46cd834e769a">end</a> () const</td></tr>
<tr class="separator:ae7fc131b3c935b54ad0e46cd834e769a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add72d4e22d020db6208a48fab49a3d18" id="r_add72d4e22d020db6208a48fab49a3d18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add72d4e22d020db6208a48fab49a3d18">cend</a> () const</td></tr>
<tr class="separator:add72d4e22d020db6208a48fab49a3d18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79ace4d6267592d221cacf27b57ca739" id="r_a79ace4d6267592d221cacf27b57ca739"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a8df10d2ed28a886eb21a14b9d423bd8a">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a79ace4d6267592d221cacf27b57ca739">rbegin</a> ()</td></tr>
<tr class="separator:a79ace4d6267592d221cacf27b57ca739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ecd5bf472ca26e5cb3aa7a41a769ec0" id="r_a4ecd5bf472ca26e5cb3aa7a41a769ec0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ecd5bf472ca26e5cb3aa7a41a769ec0">rbegin</a> () const</td></tr>
<tr class="separator:a4ecd5bf472ca26e5cb3aa7a41a769ec0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb86ea0f5cb41f57266dcf71e4801e6b" id="r_afb86ea0f5cb41f57266dcf71e4801e6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a8df10d2ed28a886eb21a14b9d423bd8a">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afb86ea0f5cb41f57266dcf71e4801e6b">rend</a> ()</td></tr>
<tr class="separator:afb86ea0f5cb41f57266dcf71e4801e6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54ca8e163fa8d9b6fe2f5a7b5ed34682" id="r_a54ca8e163fa8d9b6fe2f5a7b5ed34682"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a54ca8e163fa8d9b6fe2f5a7b5ed34682">rend</a> () const</td></tr>
<tr class="separator:a54ca8e163fa8d9b6fe2f5a7b5ed34682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a801fc9dfecbb2a1b690d9d898284c30e" id="r_a801fc9dfecbb2a1b690d9d898284c30e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a801fc9dfecbb2a1b690d9d898284c30e">crbegin</a> () const</td></tr>
<tr class="separator:a801fc9dfecbb2a1b690d9d898284c30e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2525aa0d9a7183fd1a7b6e4e40819136" id="r_a2525aa0d9a7183fd1a7b6e4e40819136"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2525aa0d9a7183fd1a7b6e4e40819136">crend</a> () const</td></tr>
<tr class="separator:a2525aa0d9a7183fd1a7b6e4e40819136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac15c5429ed2958860f481622fcf6d727" id="r_ac15c5429ed2958860f481622fcf6d727"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac15c5429ed2958860f481622fcf6d727">front</a> ()</td></tr>
<tr class="separator:ac15c5429ed2958860f481622fcf6d727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f99a0fd071402549a57617230f1bbbd" id="r_a3f99a0fd071402549a57617230f1bbbd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f99a0fd071402549a57617230f1bbbd">front</a> () const</td></tr>
<tr class="separator:a3f99a0fd071402549a57617230f1bbbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef01c90364b00e8e52e8da0bd228c2e" id="r_a9ef01c90364b00e8e52e8da0bd228c2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ef01c90364b00e8e52e8da0bd228c2e">back</a> ()</td></tr>
<tr class="separator:a9ef01c90364b00e8e52e8da0bd228c2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fba5942b5ec901736024eec9bd2db02" id="r_a2fba5942b5ec901736024eec9bd2db02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fba5942b5ec901736024eec9bd2db02">back</a> () const</td></tr>
<tr class="separator:a2fba5942b5ec901736024eec9bd2db02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56ea3e4b23931d8b48e81ac411deef84" id="r_a56ea3e4b23931d8b48e81ac411deef84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56ea3e4b23931d8b48e81ac411deef84">operator[]</a> (<a class="el" href="#a557700cf93103dadb39242dec490faa6">size_type</a> i)</td></tr>
<tr class="separator:a56ea3e4b23931d8b48e81ac411deef84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a717fdd50fbc9d1c71ffa581e8dd1b79a" id="r_a717fdd50fbc9d1c71ffa581e8dd1b79a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a717fdd50fbc9d1c71ffa581e8dd1b79a">operator[]</a> (<a class="el" href="#a557700cf93103dadb39242dec490faa6">size_type</a> i) const</td></tr>
<tr class="separator:a717fdd50fbc9d1c71ffa581e8dd1b79a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Used to return arbitrary-length data. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a63d00b6444b9309d606468192818ed13" name="a63d00b6444b9309d606468192818ed13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63d00b6444b9309d606468192818ed13">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a63d00b6444b9309d606468192818ed13">Harlinn::Windows::Graphics::D3D10Blob::Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a10cd648c061f6b73b2abd590d7723ce0" name="a10cd648c061f6b73b2abd590d7723ce0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10cd648c061f6b73b2abd590d7723ce0">&#9670;&#160;</a></span>const_iterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">Harlinn::Windows::Graphics::D3D10Blob::const_iterator</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator</a>&lt;<a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob.xhtml">D3D10Blob</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a595546faf457c1b02da4cb828dd733f2" name="a595546faf457c1b02da4cb828dd733f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a595546faf457c1b02da4cb828dd733f2">&#9670;&#160;</a></span>const_pointer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a595546faf457c1b02da4cb828dd733f2">Harlinn::Windows::Graphics::D3D10Blob::const_pointer</a> = const <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>*</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a20e6195b6cfb1cff567751460eae5f9e" name="a20e6195b6cfb1cff567751460eae5f9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20e6195b6cfb1cff567751460eae5f9e">&#9670;&#160;</a></span>const_reference</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">Harlinn::Windows::Graphics::D3D10Blob::const_reference</a> = const <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf29f9d8108300638e0def4ae6829a41" name="aaf29f9d8108300638e0def4ae6829a41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf29f9d8108300638e0def4ae6829a41">&#9670;&#160;</a></span>const_reverse_iterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">Harlinn::Windows::Graphics::D3D10Blob::const_reverse_iterator</a> = std::reverse_iterator&lt;<a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeee5efde1260028688680d595985b66a" name="aeee5efde1260028688680d595985b66a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeee5efde1260028688680d595985b66a">&#9670;&#160;</a></span>const_span_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#aeee5efde1260028688680d595985b66a">Harlinn::Windows::Graphics::D3D10Blob::const_span_type</a> = std::span&lt;const <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6cd5c526b84f9c1714dbb2468afbf96e" name="a6cd5c526b84f9c1714dbb2468afbf96e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cd5c526b84f9c1714dbb2468afbf96e">&#9670;&#160;</a></span>difference_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a6cd5c526b84f9c1714dbb2468afbf96e">Harlinn::Windows::Graphics::D3D10Blob::difference_type</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a42f0cd3c6591607713644eea77e8fed9">SSizeT</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac87be17153a6467f4c31bc4fb5b22de3" name="ac87be17153a6467f4c31bc4fb5b22de3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac87be17153a6467f4c31bc4fb5b22de3">&#9670;&#160;</a></span>iterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">Harlinn::Windows::Graphics::D3D10Blob::iterator</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator</a>&lt;<a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob.xhtml">D3D10Blob</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0ab6df754a68ead1ccde501a6b90d23e" name="a0ab6df754a68ead1ccde501a6b90d23e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ab6df754a68ead1ccde501a6b90d23e">&#9670;&#160;</a></span>pointer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a0ab6df754a68ead1ccde501a6b90d23e">Harlinn::Windows::Graphics::D3D10Blob::pointer</a> = <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>*</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0423e2b1158a7e682592c46629084eab" name="a0423e2b1158a7e682592c46629084eab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0423e2b1158a7e682592c46629084eab">&#9670;&#160;</a></span>reference</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a0423e2b1158a7e682592c46629084eab">Harlinn::Windows::Graphics::D3D10Blob::reference</a> = <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8df10d2ed28a886eb21a14b9d423bd8a" name="a8df10d2ed28a886eb21a14b9d423bd8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8df10d2ed28a886eb21a14b9d423bd8a">&#9670;&#160;</a></span>reverse_iterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a8df10d2ed28a886eb21a14b9d423bd8a">Harlinn::Windows::Graphics::D3D10Blob::reverse_iterator</a> = std::reverse_iterator&lt;<a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a557700cf93103dadb39242dec490faa6" name="a557700cf93103dadb39242dec490faa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a557700cf93103dadb39242dec490faa6">&#9670;&#160;</a></span>size_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a557700cf93103dadb39242dec490faa6">Harlinn::Windows::Graphics::D3D10Blob::size_type</a> = size_t</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a06c272e225740df07eaeb011268069a3" name="a06c272e225740df07eaeb011268069a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06c272e225740df07eaeb011268069a3">&#9670;&#160;</a></span>span_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a06c272e225740df07eaeb011268069a3">Harlinn::Windows::Graphics::D3D10Blob::span_type</a> = std::span&lt;<a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">value_type</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab7f9d739c7dfdbb02440a62c24a95193" name="ab7f9d739c7dfdbb02440a62c24a95193"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7f9d739c7dfdbb02440a62c24a95193">&#9670;&#160;</a></span>value_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#ab7f9d739c7dfdbb02440a62c24a95193">Harlinn::Windows::Graphics::D3D10Blob::value_type</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#af82811a69582d9f85a78627741d07b19">Byte</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9ef01c90364b00e8e52e8da0bd228c2e" name="a9ef01c90364b00e8e52e8da0bd228c2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ef01c90364b00e8e52e8da0bd228c2e">&#9670;&#160;</a></span>back() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a> Harlinn::Windows::Graphics::D3D10Blob::back </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2fba5942b5ec901736024eec9bd2db02" name="a2fba5942b5ec901736024eec9bd2db02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fba5942b5ec901736024eec9bd2db02">&#9670;&#160;</a></span>back() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a> Harlinn::Windows::Graphics::D3D10Blob::back </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac0d8f80e7a619bc0847c7e8ac4cedabb" name="ac0d8f80e7a619bc0847c7e8ac4cedabb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0d8f80e7a619bc0847c7e8ac4cedabb">&#9670;&#160;</a></span>begin() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a> Harlinn::Windows::Graphics::D3D10Blob::begin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1371921bd01d3436984767e701287814" name="a1371921bd01d3436984767e701287814"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1371921bd01d3436984767e701287814">&#9670;&#160;</a></span>begin() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::begin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4d37c4e158154bffbb4a46c6037dd32e" name="a4d37c4e158154bffbb4a46c6037dd32e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d37c4e158154bffbb4a46c6037dd32e">&#9670;&#160;</a></span>cbegin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::cbegin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="add72d4e22d020db6208a48fab49a3d18" name="add72d4e22d020db6208a48fab49a3d18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add72d4e22d020db6208a48fab49a3d18">&#9670;&#160;</a></span>cend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::cend </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a801fc9dfecbb2a1b690d9d898284c30e" name="a801fc9dfecbb2a1b690d9d898284c30e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a801fc9dfecbb2a1b690d9d898284c30e">&#9670;&#160;</a></span>crbegin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::crbegin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2525aa0d9a7183fd1a7b6e4e40819136" name="a2525aa0d9a7183fd1a7b6e4e40819136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2525aa0d9a7183fd1a7b6e4e40819136">&#9670;&#160;</a></span>crend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::crend </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad3afdcfa6113b4f186b63163a9b57cc6" name="ad3afdcfa6113b4f186b63163a9b57cc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3afdcfa6113b4f186b63163a9b57cc6">&#9670;&#160;</a></span>data() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a0ab6df754a68ead1ccde501a6b90d23e">pointer</a> Harlinn::Windows::Graphics::D3D10Blob::data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a59321440b5a687d1274697d67aa6ddfc" name="a59321440b5a687d1274697d67aa6ddfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59321440b5a687d1274697d67aa6ddfc">&#9670;&#160;</a></span>data() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a595546faf457c1b02da4cb828dd733f2">const_pointer</a> Harlinn::Windows::Graphics::D3D10Blob::data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeec588ef1f0e0ca3874cd5b1ef525a36" name="aeec588ef1f0e0ca3874cd5b1ef525a36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeec588ef1f0e0ca3874cd5b1ef525a36">&#9670;&#160;</a></span>end() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#ac87be17153a6467f4c31bc4fb5b22de3">iterator</a> Harlinn::Windows::Graphics::D3D10Blob::end </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7fc131b3c935b54ad0e46cd834e769a" name="ae7fc131b3c935b54ad0e46cd834e769a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7fc131b3c935b54ad0e46cd834e769a">&#9670;&#160;</a></span>end() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a10cd648c061f6b73b2abd590d7723ce0">const_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::end </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac15c5429ed2958860f481622fcf6d727" name="ac15c5429ed2958860f481622fcf6d727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac15c5429ed2958860f481622fcf6d727">&#9670;&#160;</a></span>front() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a> Harlinn::Windows::Graphics::D3D10Blob::front </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f99a0fd071402549a57617230f1bbbd" name="a3f99a0fd071402549a57617230f1bbbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f99a0fd071402549a57617230f1bbbd">&#9670;&#160;</a></span>front() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a> Harlinn::Windows::Graphics::D3D10Blob::front </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a09ab82655461ed0a8bdfe49775f0ae80" name="a09ab82655461ed0a8bdfe49775f0ae80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09ab82655461ed0a8bdfe49775f0ae80">&#9670;&#160;</a></span>GetBufferPointer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">LPVOID Harlinn::Windows::Graphics::D3D10Blob::GetBufferPointer </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a pointer to the data. </p>

</div>
</div>
<a id="abe00005845af954f13105f29f2804b6c" name="abe00005845af954f13105f29f2804b6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe00005845af954f13105f29f2804b6c">&#9670;&#160;</a></span>GetBufferSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SIZE_T Harlinn::Windows::Graphics::D3D10Blob::GetBufferSize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the size. </p>
<dl class="section return"><dt>Returns</dt><dd>The size of the data, in bytes. </dd></dl>

</div>
</div>
<a id="a56ea3e4b23931d8b48e81ac411deef84" name="a56ea3e4b23931d8b48e81ac411deef84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56ea3e4b23931d8b48e81ac411deef84">&#9670;&#160;</a></span>operator[]() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a0423e2b1158a7e682592c46629084eab">reference</a> Harlinn::Windows::Graphics::D3D10Blob::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a557700cf93103dadb39242dec490faa6">size_type</a></td>          <td class="paramname"><span class="paramname"><em>i</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a717fdd50fbc9d1c71ffa581e8dd1b79a" name="a717fdd50fbc9d1c71ffa581e8dd1b79a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a717fdd50fbc9d1c71ffa581e8dd1b79a">&#9670;&#160;</a></span>operator[]() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a20e6195b6cfb1cff567751460eae5f9e">const_reference</a> Harlinn::Windows::Graphics::D3D10Blob::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a557700cf93103dadb39242dec490faa6">size_type</a></td>          <td class="paramname"><span class="paramname"><em>i</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a79ace4d6267592d221cacf27b57ca739" name="a79ace4d6267592d221cacf27b57ca739"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79ace4d6267592d221cacf27b57ca739">&#9670;&#160;</a></span>rbegin() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a8df10d2ed28a886eb21a14b9d423bd8a">reverse_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::rbegin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ecd5bf472ca26e5cb3aa7a41a769ec0" name="a4ecd5bf472ca26e5cb3aa7a41a769ec0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ecd5bf472ca26e5cb3aa7a41a769ec0">&#9670;&#160;</a></span>rbegin() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::rbegin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afb86ea0f5cb41f57266dcf71e4801e6b" name="afb86ea0f5cb41f57266dcf71e4801e6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb86ea0f5cb41f57266dcf71e4801e6b">&#9670;&#160;</a></span>rend() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a8df10d2ed28a886eb21a14b9d423bd8a">reverse_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::rend </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a54ca8e163fa8d9b6fe2f5a7b5ed34682" name="a54ca8e163fa8d9b6fe2f5a7b5ed34682"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54ca8e163fa8d9b6fe2f5a7b5ed34682">&#9670;&#160;</a></span>rend() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aaf29f9d8108300638e0def4ae6829a41">const_reverse_iterator</a> Harlinn::Windows::Graphics::D3D10Blob::rend </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a97b23dd141f3f8e044aff987af782590" name="a97b23dd141f3f8e044aff987af782590"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97b23dd141f3f8e044aff987af782590">&#9670;&#160;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Harlinn::Windows::Graphics::D3D10Blob::size </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a60b826c65ff23c0da9b90546374fdc2f" name="a60b826c65ff23c0da9b90546374fdc2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60b826c65ff23c0da9b90546374fdc2f">&#9670;&#160;</a></span>ToSpan() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a06c272e225740df07eaeb011268069a3">span_type</a> Harlinn::Windows::Graphics::D3D10Blob::ToSpan </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a061bca9a14c135e3245e1b1556357ad6" name="a061bca9a14c135e3245e1b1556357ad6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a061bca9a14c135e3245e1b1556357ad6">&#9670;&#160;</a></span>ToSpan() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aeee5efde1260028688680d595985b66a">const_span_type</a> Harlinn::Windows::Graphics::D3D10Blob::ToSpan </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_graphics_d3_common_8h.xhtml">HWGraphicsD3Common.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics.xhtml">Graphics</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_d3_d10_blob.xhtml">D3D10Blob</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
