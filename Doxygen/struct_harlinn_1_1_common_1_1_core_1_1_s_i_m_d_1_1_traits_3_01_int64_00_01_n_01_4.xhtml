<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::SIMD::Traits&lt; Int64, N &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits_3_01_int64_00_01_n_01_4.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits_3_01_int64_00_01_n_01_4-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::SIMD::Traits&lt; Int64, N &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCSIMD.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afaae4b38bb8d6bc856fabccaeece8cd0" id="r_afaae4b38bb8d6bc856fabccaeece8cd0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a></td></tr>
<tr class="separator:afaae4b38bb8d6bc856fabccaeece8cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abebfff937fd76c5e3358c080b1a51f97" id="r_abebfff937fd76c5e3358c080b1a51f97"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> = typename DataTypeTraits::Type</td></tr>
<tr class="separator:abebfff937fd76c5e3358c080b1a51f97"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab0fed60b3776d9289dc33cc346dc3b39" id="r_ab0fed60b3776d9289dc33cc346dc3b39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab0fed60b3776d9289dc33cc346dc3b39">Mul</a> (<a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> a, <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> b)</td></tr>
<tr class="separator:ab0fed60b3776d9289dc33cc346dc3b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aabbc26cb0a6505ce1b9a5d9e307467c5" id="r_aabbc26cb0a6505ce1b9a5d9e307467c5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aabbc26cb0a6505ce1b9a5d9e307467c5">Zero</a> () noexcept</td></tr>
<tr class="separator:aabbc26cb0a6505ce1b9a5d9e307467c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2806b69010a6c29265ba69245fe2690" id="r_ac2806b69010a6c29265ba69245fe2690"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2806b69010a6c29265ba69245fe2690">Fill</a> (<a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> value) noexcept</td></tr>
<tr class="separator:ac2806b69010a6c29265ba69245fe2690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf74b865400e6500a074e13baedd4f61" id="r_aaf74b865400e6500a074e13baedd4f61"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf74b865400e6500a074e13baedd4f61">Load</a> (const <a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *src) noexcept</td></tr>
<tr class="separator:aaf74b865400e6500a074e13baedd4f61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb3f1519f440dfc44ccecbebba38ec07" id="r_abb3f1519f440dfc44ccecbebba38ec07"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb3f1519f440dfc44ccecbebba38ec07">UnalignedLoad</a> (const <a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *src) noexcept</td></tr>
<tr class="separator:abb3f1519f440dfc44ccecbebba38ec07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a027b7981345ad795dafd755434993bfc" id="r_a027b7981345ad795dafd755434993bfc"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a027b7981345ad795dafd755434993bfc">Store</a> (<a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *dest, <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> src) noexcept</td></tr>
<tr class="separator:a027b7981345ad795dafd755434993bfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d55d7ff616305e3556c334c3809cf66" id="r_a8d55d7ff616305e3556c334c3809cf66"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d55d7ff616305e3556c334c3809cf66">UnaligedStore</a> (<a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *dest, <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> src) noexcept</td></tr>
<tr class="separator:a8d55d7ff616305e3556c334c3809cf66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae788bc48796d8d390e4ffc6b79be60fd" id="r_ae788bc48796d8d390e4ffc6b79be60fd"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae788bc48796d8d390e4ffc6b79be60fd">Add</a> (<a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> lhs, <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> rhs) noexcept</td></tr>
<tr class="memdesc:ae788bc48796d8d390e4ffc6b79be60fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds two int64 vectors.  <br /></td></tr>
<tr class="separator:ae788bc48796d8d390e4ffc6b79be60fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55c929866f3d8b448d9dfb0100ac5d14" id="r_a55c929866f3d8b448d9dfb0100ac5d14"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a55c929866f3d8b448d9dfb0100ac5d14">Sub</a> (<a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> lhs, <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> rhs) noexcept</td></tr>
<tr class="memdesc:a55c929866f3d8b448d9dfb0100ac5d14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts int64 vectors.  <br /></td></tr>
<tr class="separator:a55c929866f3d8b448d9dfb0100ac5d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a878b313d8618a18fb2e005b869de96ce" id="r_a878b313d8618a18fb2e005b869de96ce"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml#a81f751d1a95891a5fac3a87d2b2fc77f">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a878b313d8618a18fb2e005b869de96ce">Id</a> = DataTypeTraits::Id</td></tr>
<tr class="separator:a878b313d8618a18fb2e005b869de96ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b809bc09cdf6258dc42c8bb3ff89150" id="r_a2b809bc09cdf6258dc42c8bb3ff89150"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2b809bc09cdf6258dc42c8bb3ff89150">AlignAs</a> = DataTypeTraits::AlignAs</td></tr>
<tr class="separator:a2b809bc09cdf6258dc42c8bb3ff89150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf9898a02da59d4e83ad3edccb9e26f4" id="r_adf9898a02da59d4e83ad3edccb9e26f4"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adf9898a02da59d4e83ad3edccb9e26f4">SIMDTypeSize</a> = DataTypeTraits::Size</td></tr>
<tr class="separator:adf9898a02da59d4e83ad3edccb9e26f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81d2f9b499004f99917f40ac0b253926" id="r_a81d2f9b499004f99917f40ac0b253926"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a81d2f9b499004f99917f40ac0b253926">Capacity</a> = <a class="el" href="#a0f0830c85d19e98512db0fffbc900a2a">UseShortSIMDType</a> ? 2 : ( ( N + 3 ) &amp; static_cast&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>&gt;( -4 ) )</td></tr>
<tr class="separator:a81d2f9b499004f99917f40ac0b253926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81e45feecfcf44768033874a8e0d50b" id="r_ae81e45feecfcf44768033874a8e0d50b"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae81e45feecfcf44768033874a8e0d50b">SIMDIterations</a> = ( <a class="el" href="#a81d2f9b499004f99917f40ac0b253926">Capacity</a> * sizeof( <a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> ) ) / <a class="el" href="#adf9898a02da59d4e83ad3edccb9e26f4">SIMDTypeSize</a></td></tr>
<tr class="separator:ae81e45feecfcf44768033874a8e0d50b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-types" name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:ae8ce94abe87281450753fb15909ee154" id="r_ae8ce94abe87281450753fb15909ee154"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8ce94abe87281450753fb15909ee154">DataTypeTraits</a> = std::conditional_t&lt;<a class="el" href="#a0f0830c85d19e98512db0fffbc900a2a">UseShortSIMDType</a>, <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_data_type_traits.xhtml">SIMD::DataTypeTraits</a>&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml#a81f751d1a95891a5fac3a87d2b2fc77fa7014ddf69e65db5beffc6c32d849713c">DataType::m128i</a>&gt;, <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_data_type_traits.xhtml">SIMD::DataTypeTraits</a>&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml#a81f751d1a95891a5fac3a87d2b2fc77fabedb1edb68d0faa29a83f89a06d0dc17">DataType::m256i</a>&gt; &gt;</td></tr>
<tr class="separator:ae8ce94abe87281450753fb15909ee154"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-attribs" name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:a0f0830c85d19e98512db0fffbc900a2a" id="r_a0f0830c85d19e98512db0fffbc900a2a"><td class="memItemLeft" align="right" valign="top">static constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0f0830c85d19e98512db0fffbc900a2a">UseShortSIMDType</a> = N &lt;= 2</td></tr>
<tr class="separator:a0f0830c85d19e98512db0fffbc900a2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ae8ce94abe87281450753fb15909ee154" name="ae8ce94abe87281450753fb15909ee154"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8ce94abe87281450753fb15909ee154">&#9670;&#160;</a></span>DataTypeTraits</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::DataTypeTraits = std::conditional_t&lt;<a class="el" href="#a0f0830c85d19e98512db0fffbc900a2a">UseShortSIMDType</a>, <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_data_type_traits.xhtml">SIMD::DataTypeTraits</a>&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml#a81f751d1a95891a5fac3a87d2b2fc77fa7014ddf69e65db5beffc6c32d849713c">DataType::m128i</a>&gt;, <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_data_type_traits.xhtml">SIMD::DataTypeTraits</a>&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml#a81f751d1a95891a5fac3a87d2b2fc77fabedb1edb68d0faa29a83f89a06d0dc17">DataType::m256i</a>&gt; &gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abebfff937fd76c5e3358c080b1a51f97" name="abebfff937fd76c5e3358c080b1a51f97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abebfff937fd76c5e3358c080b1a51f97">&#9670;&#160;</a></span>SIMDType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::SIMDType = typename DataTypeTraits::Type</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afaae4b38bb8d6bc856fabccaeece8cd0" name="afaae4b38bb8d6bc856fabccaeece8cd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaae4b38bb8d6bc856fabccaeece8cd0">&#9670;&#160;</a></span>Type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Type = <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae788bc48796d8d390e4ffc6b79be60fd" name="ae788bc48796d8d390e4ffc6b79be60fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae788bc48796d8d390e4ffc6b79be60fd">&#9670;&#160;</a></span>Add()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>lhs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>rhs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds two int64 vectors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lhs</td><td>int64 vector used for the left-hand side of the operation</td></tr>
    <tr><td class="paramname">rhs</td><td>int64 vector used for the right-hand side of the operation</td></tr>
  </table>
  </dd>
</dl>
<p>Adds packed signed 64-bit integers from source vector lhs and corresponding bits of source vector rhs and stores the packed integer result in the destination vector. When an individual result is too large to be represented in 64 bits (overflow), the result is wrapped around and the low 64 bits are written to the destination vector (that is, the carry is ignored). You must control the range of values operated upon to prevent undetected overflow conditions. </p>
<dl class="section return"><dt>Returns</dt><dd>Result of the addition operation.</dd></dl>

</div>
</div>
<a id="ac2806b69010a6c29265ba69245fe2690" name="ac2806b69010a6c29265ba69245fe2690"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2806b69010a6c29265ba69245fe2690">&#9670;&#160;</a></span>Fill()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Fill </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a></td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf74b865400e6500a074e13baedd4f61" name="aaf74b865400e6500a074e13baedd4f61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf74b865400e6500a074e13baedd4f61">&#9670;&#160;</a></span>Load()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Load </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *</td>          <td class="paramname"><span class="paramname"><em>src</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab0fed60b3776d9289dc33cc346dc3b39" name="ab0fed60b3776d9289dc33cc346dc3b39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0fed60b3776d9289dc33cc346dc3b39">&#9670;&#160;</a></span>Mul()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Mul </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>a</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>b</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a027b7981345ad795dafd755434993bfc" name="a027b7981345ad795dafd755434993bfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a027b7981345ad795dafd755434993bfc">&#9670;&#160;</a></span>Store()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Store </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *</td>          <td class="paramname"><span class="paramname"><em>dest</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>src</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a55c929866f3d8b448d9dfb0100ac5d14" name="a55c929866f3d8b448d9dfb0100ac5d14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55c929866f3d8b448d9dfb0100ac5d14">&#9670;&#160;</a></span>Sub()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Sub </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>lhs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>rhs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtracts int64 vectors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lhs</td><td>int64 vector used for the left-hand side of the operation</td></tr>
    <tr><td class="paramname">rhs</td><td>int64 vector used for the right-hand side of the operation</td></tr>
  </table>
  </dd>
</dl>
<p>Subtracts packed signed 64-bit integers of the second source vector rhs from corresponding bits of the first source vector lhs. When an individual result is too large to be represented in 64 bits (overflow), the result is wrapped around and the low 64 bits are written to the destination vector (that is, the carry is ignored). </p>
<p>You must control the range of values operated upon to prevent undetected overflow conditions. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the result of the subtraction operation.</dd></dl>

</div>
</div>
<a id="a8d55d7ff616305e3556c334c3809cf66" name="a8d55d7ff616305e3556c334c3809cf66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d55d7ff616305e3556c334c3809cf66">&#9670;&#160;</a></span>UnaligedStore()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::UnaligedStore </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *</td>          <td class="paramname"><span class="paramname"><em>dest</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a></td>          <td class="paramname"><span class="paramname"><em>src</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abb3f1519f440dfc44ccecbebba38ec07" name="abb3f1519f440dfc44ccecbebba38ec07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb3f1519f440dfc44ccecbebba38ec07">&#9670;&#160;</a></span>UnalignedLoad()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::UnalignedLoad </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> *</td>          <td class="paramname"><span class="paramname"><em>src</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aabbc26cb0a6505ce1b9a5d9e307467c5" name="aabbc26cb0a6505ce1b9a5d9e307467c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabbc26cb0a6505ce1b9a5d9e307467c5">&#9670;&#160;</a></span>Zero()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="#abebfff937fd76c5e3358c080b1a51f97">SIMDType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Zero </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a2b809bc09cdf6258dc42c8bb3ff89150" name="a2b809bc09cdf6258dc42c8bb3ff89150"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b809bc09cdf6258dc42c8bb3ff89150">&#9670;&#160;</a></span>AlignAs</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::AlignAs = DataTypeTraits::AlignAs</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a81d2f9b499004f99917f40ac0b253926" name="a81d2f9b499004f99917f40ac0b253926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81d2f9b499004f99917f40ac0b253926">&#9670;&#160;</a></span>Capacity</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Capacity = <a class="el" href="#a0f0830c85d19e98512db0fffbc900a2a">UseShortSIMDType</a> ? 2 : ( ( N + 3 ) &amp; static_cast&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>&gt;( -4 ) )</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a878b313d8618a18fb2e005b869de96ce" name="a878b313d8618a18fb2e005b869de96ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a878b313d8618a18fb2e005b869de96ce">&#9670;&#160;</a></span>Id</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml#a81f751d1a95891a5fac3a87d2b2fc77f">DataType</a> <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::Id = DataTypeTraits::Id</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae81e45feecfcf44768033874a8e0d50b" name="ae81e45feecfcf44768033874a8e0d50b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae81e45feecfcf44768033874a8e0d50b">&#9670;&#160;</a></span>SIMDIterations</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::SIMDIterations = ( <a class="el" href="#a81d2f9b499004f99917f40ac0b253926">Capacity</a> * sizeof( <a class="el" href="#afaae4b38bb8d6bc856fabccaeece8cd0">Type</a> ) ) / <a class="el" href="#adf9898a02da59d4e83ad3edccb9e26f4">SIMDTypeSize</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adf9898a02da59d4e83ad3edccb9e26f4" name="adf9898a02da59d4e83ad3edccb9e26f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf9898a02da59d4e83ad3edccb9e26f4">&#9670;&#160;</a></span>SIMDTypeSize</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::SIMDTypeSize = DataTypeTraits::Size</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0f0830c85d19e98512db0fffbc900a2a" name="a0f0830c85d19e98512db0fffbc900a2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f0830c85d19e98512db0fffbc900a2a">&#9670;&#160;</a></span>UseShortSIMDType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits.xhtml">Harlinn::Common::Core::SIMD::Traits</a>&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a934f1e669bbe888bfa94af14a3647296">Int64</a>, N &gt;::UseShortSIMDType = N &lt;= 2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_s_i_m_d_8h.xhtml">HCCSIMD.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_s_i_m_d.xhtml">SIMD</a></li><li class="navelem"><a class="el" href="struct_harlinn_1_1_common_1_1_core_1_1_s_i_m_d_1_1_traits_3_01_int64_00_01_n_01_4.xhtml">Traits&lt; Int64, N &gt;</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
