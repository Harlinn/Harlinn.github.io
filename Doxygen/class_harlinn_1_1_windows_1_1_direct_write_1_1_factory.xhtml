<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::DirectWrite::Factory Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::DirectWrite::Factory Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HWDWrite.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::DirectWrite::Factory:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory__inherit__graph.svg" width="176" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::DirectWrite::Factory:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory__coll__graph.svg" width="176" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac423402d067c0cd7b2ac2221a5c27223" id="r_ac423402d067c0cd7b2ac2221a5c27223"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac423402d067c0cd7b2ac2221a5c27223">Base</a></td></tr>
<tr class="separator:ac423402d067c0cd7b2ac2221a5c27223"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa59c0cdea0194ce66f73d477126e40bc"><td class="memItemLeft" align="right" valign="top">typedef IUnknown&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa59c0cdea0194ce66f73d477126e40bc">InterfaceType</a></td></tr>
<tr class="separator:aa59c0cdea0194ce66f73d477126e40bc inherit pub_types_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afbe4babe6c8cc22f98aa746281d665e1" id="r_afbe4babe6c8cc22f98aa746281d665e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afbe4babe6c8cc22f98aa746281d665e1">Factory</a> (DWRITE_FACTORY_TYPE factoryType)</td></tr>
<tr class="separator:afbe4babe6c8cc22f98aa746281d665e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4132ab41891e33f19102229785d2cf" id="r_aad4132ab41891e33f19102229785d2cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aad4132ab41891e33f19102229785d2cf">GetSystemFontCollection</a> (IDWriteFontCollection **fontCollection, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> checkForUpdates=FALSE)</td></tr>
<tr class="separator:aad4132ab41891e33f19102229785d2cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dcbedb5ce65b0c543aad4aae6eff1c3" id="r_a8dcbedb5ce65b0c543aad4aae6eff1c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_collection.xhtml">FontCollection</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8dcbedb5ce65b0c543aad4aae6eff1c3">GetSystemFontCollection</a> (bool checkForUpdates=false)</td></tr>
<tr class="separator:a8dcbedb5ce65b0c543aad4aae6eff1c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e450fd50973301f06c0ad7cec25899d" id="r_a4e450fd50973301f06c0ad7cec25899d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4e450fd50973301f06c0ad7cec25899d">CreateCustomFontCollection</a> (IDWriteFontCollectionLoader *collectionLoader, void const *collectionKey, UINT32 collectionKeySize, IDWriteFontCollection **fontCollection)</td></tr>
<tr class="separator:a4e450fd50973301f06c0ad7cec25899d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0e986384c061d1705dada655b93bf72" id="r_ab0e986384c061d1705dada655b93bf72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_collection.xhtml">FontCollection</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab0e986384c061d1705dada655b93bf72">CreateCustomFontCollection</a> (IDWriteFontCollectionLoader *collectionLoader, void const *collectionKey, UINT32 collectionKeySize)</td></tr>
<tr class="separator:ab0e986384c061d1705dada655b93bf72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3bf95ecbb073ea21b239558b9a2dcaa" id="r_aa3bf95ecbb073ea21b239558b9a2dcaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa3bf95ecbb073ea21b239558b9a2dcaa">RegisterFontCollectionLoader</a> (IDWriteFontCollectionLoader *fontCollectionLoader)</td></tr>
<tr class="separator:aa3bf95ecbb073ea21b239558b9a2dcaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89d495069132b523894befe17e80c908" id="r_a89d495069132b523894befe17e80c908"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a89d495069132b523894befe17e80c908">UnregisterFontCollectionLoader</a> (IDWriteFontCollectionLoader *fontCollectionLoader)</td></tr>
<tr class="separator:a89d495069132b523894befe17e80c908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bcd558d5ef1bf6c662b0d267b40b3b6" id="r_a1bcd558d5ef1bf6c662b0d267b40b3b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1bcd558d5ef1bf6c662b0d267b40b3b6">CreateFontFileReference</a> (WCHAR const *filePath, FILETIME const *lastWriteTime, IDWriteFontFile **fontFile)</td></tr>
<tr class="separator:a1bcd558d5ef1bf6c662b0d267b40b3b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c8cacc311e00d323fde7fd97a66daa4" id="r_a5c8cacc311e00d323fde7fd97a66daa4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_file.xhtml">FontFile</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c8cacc311e00d323fde7fd97a66daa4">CreateFontFileReference</a> (WCHAR const *filePath, FILETIME const *lastWriteTime=nullptr)</td></tr>
<tr class="separator:a5c8cacc311e00d323fde7fd97a66daa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63072f48d49ebd784643023a364610e9" id="r_a63072f48d49ebd784643023a364610e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a63072f48d49ebd784643023a364610e9">CreateCustomFontFileReference</a> (void const *fontFileReferenceKey, UINT32 fontFileReferenceKeySize, IDWriteFontFileLoader *fontFileLoader, IDWriteFontFile **fontFile)</td></tr>
<tr class="separator:a63072f48d49ebd784643023a364610e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c48b17643a137abda894d8a4cacb781" id="r_a5c48b17643a137abda894d8a4cacb781"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_file.xhtml">FontFile</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c48b17643a137abda894d8a4cacb781">CreateCustomFontFileReference</a> (void const *fontFileReferenceKey, UINT32 fontFileReferenceKeySize, IDWriteFontFileLoader *fontFileLoader)</td></tr>
<tr class="separator:a5c48b17643a137abda894d8a4cacb781"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a655995dc76893553821ef42d18147e" id="r_a7a655995dc76893553821ef42d18147e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7a655995dc76893553821ef42d18147e">CreateFontFace</a> (DWRITE_FONT_FACE_TYPE fontFaceType, UINT32 numberOfFiles, IDWriteFontFile *const *fontFiles, UINT32 faceIndex, DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags, IDWriteFontFace **fontFace)</td></tr>
<tr class="separator:a7a655995dc76893553821ef42d18147e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a438bf9e4f90379d3f3d6a68284c4846c" id="r_a438bf9e4f90379d3f3d6a68284c4846c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_face.xhtml">FontFace</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a438bf9e4f90379d3f3d6a68284c4846c">CreateFontFace</a> (DWRITE_FONT_FACE_TYPE fontFaceType, UINT32 numberOfFiles, IDWriteFontFile *const *fontFiles, UINT32 faceIndex, DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags)</td></tr>
<tr class="separator:a438bf9e4f90379d3f3d6a68284c4846c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06081dd0f4f2b7be4736122b33ab32df" id="r_a06081dd0f4f2b7be4736122b33ab32df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a06081dd0f4f2b7be4736122b33ab32df">CreateRenderingParams</a> (IDWriteRenderingParams **renderingParams)</td></tr>
<tr class="separator:a06081dd0f4f2b7be4736122b33ab32df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80b085a111abc01a07f27392bd8610ae" id="r_a80b085a111abc01a07f27392bd8610ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_rendering_params.xhtml">RenderingParams</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a80b085a111abc01a07f27392bd8610ae">CreateRenderingParams</a> ()</td></tr>
<tr class="separator:a80b085a111abc01a07f27392bd8610ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a027f53cc14934d5e84d60a099400d5ba" id="r_a027f53cc14934d5e84d60a099400d5ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a027f53cc14934d5e84d60a099400d5ba">CreateMonitorRenderingParams</a> (HMONITOR monitor, IDWriteRenderingParams **renderingParams)</td></tr>
<tr class="separator:a027f53cc14934d5e84d60a099400d5ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a9b032cb01408500f815157b97a8f61" id="r_a0a9b032cb01408500f815157b97a8f61"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_rendering_params.xhtml">RenderingParams</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0a9b032cb01408500f815157b97a8f61">CreateMonitorRenderingParams</a> (HMONITOR monitor)</td></tr>
<tr class="separator:a0a9b032cb01408500f815157b97a8f61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3b80396fd4626e9374fe2d749fdbcd2" id="r_ac3b80396fd4626e9374fe2d749fdbcd2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac3b80396fd4626e9374fe2d749fdbcd2">CreateCustomRenderingParams</a> (FLOAT gamma, FLOAT enhancedContrast, FLOAT clearTypeLevel, DWRITE_PIXEL_GEOMETRY pixelGeometry, DWRITE_RENDERING_MODE renderingMode, IDWriteRenderingParams **renderingParams)</td></tr>
<tr class="separator:ac3b80396fd4626e9374fe2d749fdbcd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a879758fd046008d8a90f523933c4fad4" id="r_a879758fd046008d8a90f523933c4fad4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_rendering_params.xhtml">RenderingParams</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a879758fd046008d8a90f523933c4fad4">CreateCustomRenderingParams</a> (FLOAT gamma, FLOAT enhancedContrast, FLOAT clearTypeLevel, DWRITE_PIXEL_GEOMETRY pixelGeometry, DWRITE_RENDERING_MODE renderingMode)</td></tr>
<tr class="separator:a879758fd046008d8a90f523933c4fad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67945f6754713f990b2d95365c3e301" id="r_ae67945f6754713f990b2d95365c3e301"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae67945f6754713f990b2d95365c3e301">RegisterFontFileLoader</a> (IDWriteFontFileLoader *fontFileLoader)</td></tr>
<tr class="separator:ae67945f6754713f990b2d95365c3e301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a522543db1ed8b0bcef9788605f8ed6b9" id="r_a522543db1ed8b0bcef9788605f8ed6b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a522543db1ed8b0bcef9788605f8ed6b9">UnregisterFontFileLoader</a> (IDWriteFontFileLoader *fontFileLoader)</td></tr>
<tr class="separator:a522543db1ed8b0bcef9788605f8ed6b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bd2fa73108b6a031f70b94cf3c67886" id="r_a7bd2fa73108b6a031f70b94cf3c67886"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7bd2fa73108b6a031f70b94cf3c67886">CreateTextFormat</a> (WCHAR const *fontFamilyName, IDWriteFontCollection *fontCollection, DWRITE_FONT_WEIGHT fontWeight, DWRITE_FONT_STYLE fontStyle, DWRITE_FONT_STRETCH fontStretch, FLOAT fontSize, WCHAR const *localeName, IDWriteTextFormat **textFormat)</td></tr>
<tr class="separator:a7bd2fa73108b6a031f70b94cf3c67886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af979ca9b437df6af743355475ce97732" id="r_af979ca9b437df6af743355475ce97732"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_format.xhtml">TextFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af979ca9b437df6af743355475ce97732">CreateTextFormat</a> (WCHAR const *fontFamilyName, IDWriteFontCollection *fontCollection, DWRITE_FONT_WEIGHT fontWeight, DWRITE_FONT_STYLE fontStyle, DWRITE_FONT_STRETCH fontStretch, FLOAT fontSize, WCHAR const *localeName)</td></tr>
<tr class="separator:af979ca9b437df6af743355475ce97732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c956f86fa37b79244b722da93d339b0" id="r_a3c956f86fa37b79244b722da93d339b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_format.xhtml">TextFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c956f86fa37b79244b722da93d339b0">CreateTextFormat</a> (WCHAR const *fontFamilyName, FLOAT fontSize)</td></tr>
<tr class="separator:a3c956f86fa37b79244b722da93d339b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b26dc17b98e57ca0a795441f072b1ca" id="r_a0b26dc17b98e57ca0a795441f072b1ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b26dc17b98e57ca0a795441f072b1ca">CreateTypography</a> (IDWriteTypography **typography)</td></tr>
<tr class="separator:a0b26dc17b98e57ca0a795441f072b1ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8c06e14c2b8740bdf4b09c70579dfa7" id="r_ae8c06e14c2b8740bdf4b09c70579dfa7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_typography.xhtml">Typography</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8c06e14c2b8740bdf4b09c70579dfa7">CreateTypography</a> ()</td></tr>
<tr class="separator:ae8c06e14c2b8740bdf4b09c70579dfa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af032cb08d7aa6a98cb6ed87f3e48b8a5" id="r_af032cb08d7aa6a98cb6ed87f3e48b8a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af032cb08d7aa6a98cb6ed87f3e48b8a5">GetGdiInterop</a> (IDWriteGdiInterop **gdiInterop)</td></tr>
<tr class="separator:af032cb08d7aa6a98cb6ed87f3e48b8a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66f60fabd973f7e95c661d9a79c781b1" id="r_a66f60fabd973f7e95c661d9a79c781b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_gdi_interop.xhtml">GdiInterop</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a66f60fabd973f7e95c661d9a79c781b1">GetGdiInterop</a> ()</td></tr>
<tr class="separator:a66f60fabd973f7e95c661d9a79c781b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018ec77e1dd032990a2af5abd0f1c7a9" id="r_a018ec77e1dd032990a2af5abd0f1c7a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a018ec77e1dd032990a2af5abd0f1c7a9">CreateTextLayout</a> (WCHAR const *string, UINT32 stringLength, IDWriteTextFormat *textFormat, FLOAT maxWidth, FLOAT maxHeight, IDWriteTextLayout **textLayout)</td></tr>
<tr class="separator:a018ec77e1dd032990a2af5abd0f1c7a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39df63ec7534aef10624120ef667cfe6" id="r_a39df63ec7534aef10624120ef667cfe6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_layout.xhtml">TextLayout</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a39df63ec7534aef10624120ef667cfe6">CreateTextLayout</a> (WCHAR const *string, UINT32 stringLength, IDWriteTextFormat *textFormat, FLOAT maxWidth, FLOAT maxHeight)</td></tr>
<tr class="separator:a39df63ec7534aef10624120ef667cfe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a871caf36f3845b4b4441dc24029b5c84" id="r_a871caf36f3845b4b4441dc24029b5c84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a871caf36f3845b4b4441dc24029b5c84">CreateGdiCompatibleTextLayout</a> (WCHAR const *string, UINT32 stringLength, IDWriteTextFormat *textFormat, FLOAT layoutWidth, FLOAT layoutHeight, FLOAT pixelsPerDip, DWRITE_MATRIX const *transform, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> useGdiNatural, IDWriteTextLayout **textLayout)</td></tr>
<tr class="separator:a871caf36f3845b4b4441dc24029b5c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c4bac9eba26f2238a940183c46b5deb" id="r_a1c4bac9eba26f2238a940183c46b5deb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_layout.xhtml">TextLayout</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c4bac9eba26f2238a940183c46b5deb">CreateGdiCompatibleTextLayout</a> (WCHAR const *string, UINT32 stringLength, IDWriteTextFormat *textFormat, FLOAT layoutWidth, FLOAT layoutHeight, FLOAT pixelsPerDip, DWRITE_MATRIX const *transform, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> useGdiNatural)</td></tr>
<tr class="separator:a1c4bac9eba26f2238a940183c46b5deb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a781a5a215327b2b4db54a94ddf33bdf8" id="r_a781a5a215327b2b4db54a94ddf33bdf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a781a5a215327b2b4db54a94ddf33bdf8">CreateEllipsisTrimmingSign</a> (IDWriteTextFormat *textFormat, IDWriteInlineObject **trimmingSign)</td></tr>
<tr class="separator:a781a5a215327b2b4db54a94ddf33bdf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5353f1fe30151d37b75e95073f88ee4b" id="r_a5353f1fe30151d37b75e95073f88ee4b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_inline_object.xhtml">InlineObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5353f1fe30151d37b75e95073f88ee4b">CreateEllipsisTrimmingSign</a> (IDWriteTextFormat *textFormat)</td></tr>
<tr class="separator:a5353f1fe30151d37b75e95073f88ee4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa62e36aadd8249cc1922c14db4d7f090" id="r_aa62e36aadd8249cc1922c14db4d7f090"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa62e36aadd8249cc1922c14db4d7f090">CreateTextAnalyzer</a> (IDWriteTextAnalyzer **textAnalyzer)</td></tr>
<tr class="separator:aa62e36aadd8249cc1922c14db4d7f090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea45ebb9677d83b1bf78f6b7edcc2dbf" id="r_aea45ebb9677d83b1bf78f6b7edcc2dbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_analyzer.xhtml">TextAnalyzer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aea45ebb9677d83b1bf78f6b7edcc2dbf">CreateTextAnalyzer</a> ()</td></tr>
<tr class="separator:aea45ebb9677d83b1bf78f6b7edcc2dbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6746287156a4ab90e3e3b21a46d43f22" id="r_a6746287156a4ab90e3e3b21a46d43f22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6746287156a4ab90e3e3b21a46d43f22">CreateNumberSubstitution</a> (DWRITE_NUMBER_SUBSTITUTION_METHOD substitutionMethod, WCHAR const *localeName, <a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a> ignoreUserOverride, IDWriteNumberSubstitution **numberSubstitution)</td></tr>
<tr class="separator:a6746287156a4ab90e3e3b21a46d43f22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2abfc96701b3d88aef4cd29351f7f1b3" id="r_a2abfc96701b3d88aef4cd29351f7f1b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2abfc96701b3d88aef4cd29351f7f1b3">CreateGlyphRunAnalysis</a> (DWRITE_GLYPH_RUN const *glyphRun, FLOAT pixelsPerDip, DWRITE_MATRIX const *transform, DWRITE_RENDERING_MODE renderingMode, DWRITE_MEASURING_MODE measuringMode, FLOAT baselineOriginX, FLOAT baselineOriginY, IDWriteGlyphRunAnalysis **glyphRunAnalysis)</td></tr>
<tr class="separator:a2abfc96701b3d88aef4cd29351f7f1b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac23ffad03a2b079c324435a5d03701de" id="r_ac23ffad03a2b079c324435a5d03701de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_w_def_8h.xhtml#afef48e77e08fbd01c5e087508f4bccef">HW_EXPORT</a> <a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_glyph_run_analysis.xhtml">GlyphRunAnalysis</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac23ffad03a2b079c324435a5d03701de">CreateGlyphRunAnalysis</a> (DWRITE_GLYPH_RUN const *glyphRun, FLOAT pixelsPerDip, DWRITE_MATRIX const *transform, DWRITE_RENDERING_MODE renderingMode, DWRITE_MEASURING_MODE measuringMode, FLOAT baselineOriginX, FLOAT baselineOriginY)</td></tr>
<tr class="separator:ac23ffad03a2b079c324435a5d03701de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a78d4334dbb99c84ee4954abdb6d81aac"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a78d4334dbb99c84ee4954abdb6d81aac">Unknown</a> () noexcept</td></tr>
<tr class="separator:a78d4334dbb99c84ee4954abdb6d81aac inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a69f5ff7035196e173687a01e4888796b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a69f5ff7035196e173687a01e4888796b">Unknown</a> (IUnknown *unknown, bool addref=false) noexcept</td></tr>
<tr class="separator:a69f5ff7035196e173687a01e4888796b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aa320e15ec964b306c01f06c65f991687"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aa320e15ec964b306c01f06c65f991687">Unknown</a> (REFIID iid, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;unknown, bool throwIfNoInterface=true)</td></tr>
<tr class="separator:aa320e15ec964b306c01f06c65f991687 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae8f6ba8af5c4e29bdc1a31df670749db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae8f6ba8af5c4e29bdc1a31df670749db">Unknown</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:ae8f6ba8af5c4e29bdc1a31df670749db inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aaa34bfd7783fe6f4b538c0bc2cf255da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aaa34bfd7783fe6f4b538c0bc2cf255da">Unknown</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:aaa34bfd7783fe6f4b538c0bc2cf255da inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a0340a6160ee8df2afb43636ea3c2cc96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a0340a6160ee8df2afb43636ea3c2cc96">~Unknown</a> () noexcept</td></tr>
<tr class="separator:a0340a6160ee8df2afb43636ea3c2cc96 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aea7776e184fcacef15f15492989bad20"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aea7776e184fcacef15f15492989bad20">operator bool</a> () const noexcept</td></tr>
<tr class="separator:aea7776e184fcacef15f15492989bad20 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aac6386bbbc56d38a37341426fb2d0ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aac6386bbbc56d38a37341426fb2d0ebb">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:aac6386bbbc56d38a37341426fb2d0ebb inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a68c193e8294db3a000d989810705ffae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a68c193e8294db3a000d989810705ffae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a68c193e8294db3a000d989810705ffae inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_afa13c9df3b6057efc9f641ba7b25e802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#afa13c9df3b6057efc9f641ba7b25e802">swap</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) noexcept</td></tr>
<tr class="separator:afa13c9df3b6057efc9f641ba7b25e802 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a96ec3ddd5df9f671a8841e44ea4d9e36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a96ec3ddd5df9f671a8841e44ea4d9e36">ResetPtr</a> (IUnknown *other=nullptr, bool addRef=false) noexcept</td></tr>
<tr class="separator:a96ec3ddd5df9f671a8841e44ea4d9e36 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ab6adcf32990746f7310545d358aabca3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ab6adcf32990746f7310545d358aabca3">operator=</a> (nullptr_t)</td></tr>
<tr class="separator:ab6adcf32990746f7310545d358aabca3 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae6cdb2a4774d98a5df8c20ff00e7cc09"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae6cdb2a4774d98a5df8c20ff00e7cc09">Detach</a> ()</td></tr>
<tr class="separator:ae6cdb2a4774d98a5df8c20ff00e7cc09 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_af6772461121e3555b96aa27b64ed98c8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T &gt;</td></tr>
<tr class="memitem:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#af6772461121e3555b96aa27b64ed98c8">As</a> () const</td></tr>
<tr class="separator:af6772461121e3555b96aa27b64ed98c8 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a533ecb31b6dc440f37be17d984a46f9b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a533ecb31b6dc440f37be17d984a46f9b">Is</a> () const noexcept</td></tr>
<tr class="separator:a533ecb31b6dc440f37be17d984a46f9b inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a4937fd8f5f7f2936ca5d615a9b564c76"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown_ptr.xhtml">UnknownPtr</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a4937fd8f5f7f2936ca5d615a9b564c76">As</a> () const</td></tr>
<tr class="separator:a4937fd8f5f7f2936ca5d615a9b564c76 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a63fe5f2f8ff88fa57f1f6f28a25c3434"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a63fe5f2f8ff88fa57f1f6f28a25c3434">Is</a> () const noexcept</td></tr>
<tr class="memdesc:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function can be used to detect if an object supports a particular COM interface derived from IUnknown.  <br /></td></tr>
<tr class="separator:a63fe5f2f8ff88fa57f1f6f28a25c3434 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a7be8f6723282945fd05ba1192f31c655"><td class="memTemplParams" colspan="2">template&lt;typename T  = IUnknown&gt; </td></tr>
<tr class="memitem:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a7be8f6723282945fd05ba1192f31c655">GetInterfacePointer</a> () const noexcept</td></tr>
<tr class="separator:a7be8f6723282945fd05ba1192f31c655 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ae99f7606e4d988d7e42823011cc1d582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ae99f7606e4d988d7e42823011cc1d582">QueryInterface</a> (REFIID riid, void **itf) const</td></tr>
<tr class="memdesc:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries a COM object for a pointer to one of its interface; identifying the interface by a reference to its interface identifier (IID). If the COM object implements the interface, then it returns a pointer to that interface after calling IUnknown::AddRef on it.  <br /></td></tr>
<tr class="separator:ae99f7606e4d988d7e42823011cc1d582 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a8c4e069cda382fce78ae58cb6da46714"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;IUnknown, T&gt;</td></tr>
<tr class="memitem:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a8c4e069cda382fce78ae58cb6da46714">QueryInterface</a> (T **itf) const</td></tr>
<tr class="separator:a8c4e069cda382fce78ae58cb6da46714 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2e4b0e32a3c8ccb4761874eb894e6a23"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2e4b0e32a3c8ccb4761874eb894e6a23">operator==</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a2e4b0e32a3c8ccb4761874eb894e6a23 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a767edfb442d605bef709a7ae919d3ddd"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a767edfb442d605bef709a7ae919d3ddd">operator!=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> &amp;other) const noexcept</td></tr>
<tr class="separator:a767edfb442d605bef709a7ae919d3ddd inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2d105bec2461e4604138e28bb50666a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2d105bec2461e4604138e28bb50666a0">operator==</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:a2d105bec2461e4604138e28bb50666a0 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_ad8551309727841a5f812a239e1e53e1a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#ad8551309727841a5f812a239e1e53e1a">operator!=</a> (const IUnknown *other) const noexcept</td></tr>
<tr class="separator:ad8551309727841a5f812a239e1e53e1a inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a53934808e8bc16aae6c312e16200f38c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a53934808e8bc16aae6c312e16200f38c">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a53934808e8bc16aae6c312e16200f38c inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a2a04fc32e5cb30da5304d5ba698ffcd2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a2a04fc32e5cb30da5304d5ba698ffcd2">CoCreateInstanceFromClassId</a> (const wchar_t *clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a2a04fc32e5cb30da5304d5ba698ffcd2 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_acd974cb14b75e77172186c55df46a6c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#acd974cb14b75e77172186c55df46a6c4">CoCreateInstanceFromClassId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;clsid, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:acd974cb14b75e77172186c55df46a6c4 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a40f9f85791fedb8b6c441ed11cd89d6a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a40f9f85791fedb8b6c441ed11cd89d6a">CoCreateInstanceFromProgId</a> (const wchar_t *progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a40f9f85791fedb8b6c441ed11cd89d6a inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a846f601b5b267cbc515797fdbc11718b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a846f601b5b267cbc515797fdbc11718b">CoCreateInstanceFromProgId</a> (const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> &amp;progId, DWORD classContext=CLSCTX_INPROC_SERVER)</td></tr>
<tr class="separator:a846f601b5b267cbc515797fdbc11718b inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_aee525bdbb1fd840a8645b8f81fdbe947"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; <br />
requires std::is_base_of_v&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a>, T&gt;</td></tr>
<tr class="memitem:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#aee525bdbb1fd840a8645b8f81fdbe947">CoCreateInstanceFromDll</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_module_handle.xhtml">ModuleHandle</a> &amp;dll, const <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aeda58257f3f008fc31abc56e9c8635feacd880fe2ccbc139f0c0780f873ad5b3d">CLSID</a> &amp;clsid)</td></tr>
<tr class="separator:aee525bdbb1fd840a8645b8f81fdbe947 inherit pub_static_methods_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Harlinn::Common::Core::Unknown</a></td></tr>
<tr class="memitem:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown" id="r_a5dc7a66bd9d439796518ca9cd60643d4"><td class="memItemLeft" align="right" valign="top">IUnknown *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml#a5dc7a66bd9d439796518ca9cd60643d4">unknown_</a></td></tr>
<tr class="separator:a5dc7a66bd9d439796518ca9cd60643d4 inherit pro_attribs_class_harlinn_1_1_common_1_1_core_1_1_unknown"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ac423402d067c0cd7b2ac2221a5c27223" name="ac423402d067c0cd7b2ac2221a5c27223"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac423402d067c0cd7b2ac2221a5c27223">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_unknown.xhtml">Unknown</a> <a class="el" href="#ac423402d067c0cd7b2ac2221a5c27223">Harlinn::Windows::DirectWrite::Factory::Base</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="afbe4babe6c8cc22f98aa746281d665e1" name="afbe4babe6c8cc22f98aa746281d665e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbe4babe6c8cc22f98aa746281d665e1">&#9670;&#160;</a></span>Factory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Windows::DirectWrite::Factory::Factory </td>
          <td>(</td>
          <td class="paramtype">DWRITE_FACTORY_TYPE</td>          <td class="paramname"><span class="paramname"><em>factoryType</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab0e986384c061d1705dada655b93bf72" name="ab0e986384c061d1705dada655b93bf72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0e986384c061d1705dada655b93bf72">&#9670;&#160;</a></span>CreateCustomFontCollection() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_collection.xhtml">FontCollection</a> Harlinn::Windows::DirectWrite::Factory::CreateCustomFontCollection </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontCollectionLoader *</td>          <td class="paramname"><span class="paramname"><em>collectionLoader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void const *</td>          <td class="paramname"><span class="paramname"><em>collectionKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>collectionKeySize</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4e450fd50973301f06c0ad7cec25899d" name="a4e450fd50973301f06c0ad7cec25899d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e450fd50973301f06c0ad7cec25899d">&#9670;&#160;</a></span>CreateCustomFontCollection() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateCustomFontCollection </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontCollectionLoader *</td>          <td class="paramname"><span class="paramname"><em>collectionLoader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void const *</td>          <td class="paramname"><span class="paramname"><em>collectionKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>collectionKeySize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontCollection **</td>          <td class="paramname"><span class="paramname"><em>fontCollection</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c48b17643a137abda894d8a4cacb781" name="a5c48b17643a137abda894d8a4cacb781"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c48b17643a137abda894d8a4cacb781">&#9670;&#160;</a></span>CreateCustomFontFileReference() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_file.xhtml">FontFile</a> Harlinn::Windows::DirectWrite::Factory::CreateCustomFontFileReference </td>
          <td>(</td>
          <td class="paramtype">void const *</td>          <td class="paramname"><span class="paramname"><em>fontFileReferenceKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>fontFileReferenceKeySize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFileLoader *</td>          <td class="paramname"><span class="paramname"><em>fontFileLoader</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a63072f48d49ebd784643023a364610e9" name="a63072f48d49ebd784643023a364610e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63072f48d49ebd784643023a364610e9">&#9670;&#160;</a></span>CreateCustomFontFileReference() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateCustomFontFileReference </td>
          <td>(</td>
          <td class="paramtype">void const *</td>          <td class="paramname"><span class="paramname"><em>fontFileReferenceKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>fontFileReferenceKeySize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFileLoader *</td>          <td class="paramname"><span class="paramname"><em>fontFileLoader</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFile **</td>          <td class="paramname"><span class="paramname"><em>fontFile</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a879758fd046008d8a90f523933c4fad4" name="a879758fd046008d8a90f523933c4fad4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a879758fd046008d8a90f523933c4fad4">&#9670;&#160;</a></span>CreateCustomRenderingParams() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_rendering_params.xhtml">RenderingParams</a> Harlinn::Windows::DirectWrite::Factory::CreateCustomRenderingParams </td>
          <td>(</td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>gamma</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>enhancedContrast</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>clearTypeLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_PIXEL_GEOMETRY</td>          <td class="paramname"><span class="paramname"><em>pixelGeometry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_RENDERING_MODE</td>          <td class="paramname"><span class="paramname"><em>renderingMode</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac3b80396fd4626e9374fe2d749fdbcd2" name="ac3b80396fd4626e9374fe2d749fdbcd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3b80396fd4626e9374fe2d749fdbcd2">&#9670;&#160;</a></span>CreateCustomRenderingParams() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateCustomRenderingParams </td>
          <td>(</td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>gamma</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>enhancedContrast</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>clearTypeLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_PIXEL_GEOMETRY</td>          <td class="paramname"><span class="paramname"><em>pixelGeometry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_RENDERING_MODE</td>          <td class="paramname"><span class="paramname"><em>renderingMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteRenderingParams **</td>          <td class="paramname"><span class="paramname"><em>renderingParams</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5353f1fe30151d37b75e95073f88ee4b" name="a5353f1fe30151d37b75e95073f88ee4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5353f1fe30151d37b75e95073f88ee4b">&#9670;&#160;</a></span>CreateEllipsisTrimmingSign() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_inline_object.xhtml">InlineObject</a> Harlinn::Windows::DirectWrite::Factory::CreateEllipsisTrimmingSign </td>
          <td>(</td>
          <td class="paramtype">IDWriteTextFormat *</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a781a5a215327b2b4db54a94ddf33bdf8" name="a781a5a215327b2b4db54a94ddf33bdf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a781a5a215327b2b4db54a94ddf33bdf8">&#9670;&#160;</a></span>CreateEllipsisTrimmingSign() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateEllipsisTrimmingSign </td>
          <td>(</td>
          <td class="paramtype">IDWriteTextFormat *</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteInlineObject **</td>          <td class="paramname"><span class="paramname"><em>trimmingSign</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a438bf9e4f90379d3f3d6a68284c4846c" name="a438bf9e4f90379d3f3d6a68284c4846c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a438bf9e4f90379d3f3d6a68284c4846c">&#9670;&#160;</a></span>CreateFontFace() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_face.xhtml">FontFace</a> Harlinn::Windows::DirectWrite::Factory::CreateFontFace </td>
          <td>(</td>
          <td class="paramtype">DWRITE_FONT_FACE_TYPE</td>          <td class="paramname"><span class="paramname"><em>fontFaceType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>numberOfFiles</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFile *const *</td>          <td class="paramname"><span class="paramname"><em>fontFiles</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>faceIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_SIMULATIONS</td>          <td class="paramname"><span class="paramname"><em>fontFaceSimulationFlags</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7a655995dc76893553821ef42d18147e" name="a7a655995dc76893553821ef42d18147e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a655995dc76893553821ef42d18147e">&#9670;&#160;</a></span>CreateFontFace() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateFontFace </td>
          <td>(</td>
          <td class="paramtype">DWRITE_FONT_FACE_TYPE</td>          <td class="paramname"><span class="paramname"><em>fontFaceType</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>numberOfFiles</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFile *const *</td>          <td class="paramname"><span class="paramname"><em>fontFiles</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>faceIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_SIMULATIONS</td>          <td class="paramname"><span class="paramname"><em>fontFaceSimulationFlags</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFace **</td>          <td class="paramname"><span class="paramname"><em>fontFace</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1bcd558d5ef1bf6c662b0d267b40b3b6" name="a1bcd558d5ef1bf6c662b0d267b40b3b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bcd558d5ef1bf6c662b0d267b40b3b6">&#9670;&#160;</a></span>CreateFontFileReference() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateFontFileReference </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>filePath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME const *</td>          <td class="paramname"><span class="paramname"><em>lastWriteTime</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontFile **</td>          <td class="paramname"><span class="paramname"><em>fontFile</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c8cacc311e00d323fde7fd97a66daa4" name="a5c8cacc311e00d323fde7fd97a66daa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c8cacc311e00d323fde7fd97a66daa4">&#9670;&#160;</a></span>CreateFontFileReference() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_file.xhtml">FontFile</a> Harlinn::Windows::DirectWrite::Factory::CreateFontFileReference </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>filePath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILETIME const *</td>          <td class="paramname"><span class="paramname"><em>lastWriteTime</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1c4bac9eba26f2238a940183c46b5deb" name="a1c4bac9eba26f2238a940183c46b5deb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c4bac9eba26f2238a940183c46b5deb">&#9670;&#160;</a></span>CreateGdiCompatibleTextLayout() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_layout.xhtml">TextLayout</a> Harlinn::Windows::DirectWrite::Factory::CreateGdiCompatibleTextLayout </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>string</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>stringLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextFormat *</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>layoutWidth</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>layoutHeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>pixelsPerDip</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_MATRIX const *</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>useGdiNatural</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a871caf36f3845b4b4441dc24029b5c84" name="a871caf36f3845b4b4441dc24029b5c84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a871caf36f3845b4b4441dc24029b5c84">&#9670;&#160;</a></span>CreateGdiCompatibleTextLayout() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateGdiCompatibleTextLayout </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>string</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>stringLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextFormat *</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>layoutWidth</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>layoutHeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>pixelsPerDip</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_MATRIX const *</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>useGdiNatural</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextLayout **</td>          <td class="paramname"><span class="paramname"><em>textLayout</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac23ffad03a2b079c324435a5d03701de" name="ac23ffad03a2b079c324435a5d03701de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac23ffad03a2b079c324435a5d03701de">&#9670;&#160;</a></span>CreateGlyphRunAnalysis() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_glyph_run_analysis.xhtml">GlyphRunAnalysis</a> Harlinn::Windows::DirectWrite::Factory::CreateGlyphRunAnalysis </td>
          <td>(</td>
          <td class="paramtype">DWRITE_GLYPH_RUN const *</td>          <td class="paramname"><span class="paramname"><em>glyphRun</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>pixelsPerDip</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_MATRIX const *</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_RENDERING_MODE</td>          <td class="paramname"><span class="paramname"><em>renderingMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_MEASURING_MODE</td>          <td class="paramname"><span class="paramname"><em>measuringMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>baselineOriginX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>baselineOriginY</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2abfc96701b3d88aef4cd29351f7f1b3" name="a2abfc96701b3d88aef4cd29351f7f1b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2abfc96701b3d88aef4cd29351f7f1b3">&#9670;&#160;</a></span>CreateGlyphRunAnalysis() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateGlyphRunAnalysis </td>
          <td>(</td>
          <td class="paramtype">DWRITE_GLYPH_RUN const *</td>          <td class="paramname"><span class="paramname"><em>glyphRun</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>pixelsPerDip</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_MATRIX const *</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_RENDERING_MODE</td>          <td class="paramname"><span class="paramname"><em>renderingMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_MEASURING_MODE</td>          <td class="paramname"><span class="paramname"><em>measuringMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>baselineOriginX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>baselineOriginY</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteGlyphRunAnalysis **</td>          <td class="paramname"><span class="paramname"><em>glyphRunAnalysis</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0a9b032cb01408500f815157b97a8f61" name="a0a9b032cb01408500f815157b97a8f61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a9b032cb01408500f815157b97a8f61">&#9670;&#160;</a></span>CreateMonitorRenderingParams() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_rendering_params.xhtml">RenderingParams</a> Harlinn::Windows::DirectWrite::Factory::CreateMonitorRenderingParams </td>
          <td>(</td>
          <td class="paramtype">HMONITOR</td>          <td class="paramname"><span class="paramname"><em>monitor</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a027f53cc14934d5e84d60a099400d5ba" name="a027f53cc14934d5e84d60a099400d5ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a027f53cc14934d5e84d60a099400d5ba">&#9670;&#160;</a></span>CreateMonitorRenderingParams() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateMonitorRenderingParams </td>
          <td>(</td>
          <td class="paramtype">HMONITOR</td>          <td class="paramname"><span class="paramname"><em>monitor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteRenderingParams **</td>          <td class="paramname"><span class="paramname"><em>renderingParams</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6746287156a4ab90e3e3b21a46d43f22" name="a6746287156a4ab90e3e3b21a46d43f22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6746287156a4ab90e3e3b21a46d43f22">&#9670;&#160;</a></span>CreateNumberSubstitution()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateNumberSubstitution </td>
          <td>(</td>
          <td class="paramtype">DWRITE_NUMBER_SUBSTITUTION_METHOD</td>          <td class="paramname"><span class="paramname"><em>substitutionMethod</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>localeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>ignoreUserOverride</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteNumberSubstitution **</td>          <td class="paramname"><span class="paramname"><em>numberSubstitution</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a80b085a111abc01a07f27392bd8610ae" name="a80b085a111abc01a07f27392bd8610ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80b085a111abc01a07f27392bd8610ae">&#9670;&#160;</a></span>CreateRenderingParams() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_rendering_params.xhtml">RenderingParams</a> Harlinn::Windows::DirectWrite::Factory::CreateRenderingParams </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a06081dd0f4f2b7be4736122b33ab32df" name="a06081dd0f4f2b7be4736122b33ab32df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06081dd0f4f2b7be4736122b33ab32df">&#9670;&#160;</a></span>CreateRenderingParams() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateRenderingParams </td>
          <td>(</td>
          <td class="paramtype">IDWriteRenderingParams **</td>          <td class="paramname"><span class="paramname"><em>renderingParams</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea45ebb9677d83b1bf78f6b7edcc2dbf" name="aea45ebb9677d83b1bf78f6b7edcc2dbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea45ebb9677d83b1bf78f6b7edcc2dbf">&#9670;&#160;</a></span>CreateTextAnalyzer() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_analyzer.xhtml">TextAnalyzer</a> Harlinn::Windows::DirectWrite::Factory::CreateTextAnalyzer </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa62e36aadd8249cc1922c14db4d7f090" name="aa62e36aadd8249cc1922c14db4d7f090"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa62e36aadd8249cc1922c14db4d7f090">&#9670;&#160;</a></span>CreateTextAnalyzer() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateTextAnalyzer </td>
          <td>(</td>
          <td class="paramtype">IDWriteTextAnalyzer **</td>          <td class="paramname"><span class="paramname"><em>textAnalyzer</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c956f86fa37b79244b722da93d339b0" name="a3c956f86fa37b79244b722da93d339b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c956f86fa37b79244b722da93d339b0">&#9670;&#160;</a></span>CreateTextFormat() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_format.xhtml">TextFormat</a> Harlinn::Windows::DirectWrite::Factory::CreateTextFormat </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>fontFamilyName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>fontSize</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af979ca9b437df6af743355475ce97732" name="af979ca9b437df6af743355475ce97732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af979ca9b437df6af743355475ce97732">&#9670;&#160;</a></span>CreateTextFormat() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_format.xhtml">TextFormat</a> Harlinn::Windows::DirectWrite::Factory::CreateTextFormat </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>fontFamilyName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontCollection *</td>          <td class="paramname"><span class="paramname"><em>fontCollection</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_WEIGHT</td>          <td class="paramname"><span class="paramname"><em>fontWeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_STYLE</td>          <td class="paramname"><span class="paramname"><em>fontStyle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_STRETCH</td>          <td class="paramname"><span class="paramname"><em>fontStretch</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>fontSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>localeName</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7bd2fa73108b6a031f70b94cf3c67886" name="a7bd2fa73108b6a031f70b94cf3c67886"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bd2fa73108b6a031f70b94cf3c67886">&#9670;&#160;</a></span>CreateTextFormat() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateTextFormat </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>fontFamilyName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteFontCollection *</td>          <td class="paramname"><span class="paramname"><em>fontCollection</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_WEIGHT</td>          <td class="paramname"><span class="paramname"><em>fontWeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_STYLE</td>          <td class="paramname"><span class="paramname"><em>fontStyle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWRITE_FONT_STRETCH</td>          <td class="paramname"><span class="paramname"><em>fontStretch</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>fontSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>localeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextFormat **</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a39df63ec7534aef10624120ef667cfe6" name="a39df63ec7534aef10624120ef667cfe6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39df63ec7534aef10624120ef667cfe6">&#9670;&#160;</a></span>CreateTextLayout() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_text_layout.xhtml">TextLayout</a> Harlinn::Windows::DirectWrite::Factory::CreateTextLayout </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>string</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>stringLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextFormat *</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>maxWidth</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>maxHeight</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a018ec77e1dd032990a2af5abd0f1c7a9" name="a018ec77e1dd032990a2af5abd0f1c7a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a018ec77e1dd032990a2af5abd0f1c7a9">&#9670;&#160;</a></span>CreateTextLayout() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateTextLayout </td>
          <td>(</td>
          <td class="paramtype">WCHAR const *</td>          <td class="paramname"><span class="paramname"><em>string</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>stringLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextFormat *</td>          <td class="paramname"><span class="paramname"><em>textFormat</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>maxWidth</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FLOAT</td>          <td class="paramname"><span class="paramname"><em>maxHeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDWriteTextLayout **</td>          <td class="paramname"><span class="paramname"><em>textLayout</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae8c06e14c2b8740bdf4b09c70579dfa7" name="ae8c06e14c2b8740bdf4b09c70579dfa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8c06e14c2b8740bdf4b09c70579dfa7">&#9670;&#160;</a></span>CreateTypography() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_typography.xhtml">Typography</a> Harlinn::Windows::DirectWrite::Factory::CreateTypography </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b26dc17b98e57ca0a795441f072b1ca" name="a0b26dc17b98e57ca0a795441f072b1ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b26dc17b98e57ca0a795441f072b1ca">&#9670;&#160;</a></span>CreateTypography() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::CreateTypography </td>
          <td>(</td>
          <td class="paramtype">IDWriteTypography **</td>          <td class="paramname"><span class="paramname"><em>typography</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a66f60fabd973f7e95c661d9a79c781b1" name="a66f60fabd973f7e95c661d9a79c781b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66f60fabd973f7e95c661d9a79c781b1">&#9670;&#160;</a></span>GetGdiInterop() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_gdi_interop.xhtml">GdiInterop</a> Harlinn::Windows::DirectWrite::Factory::GetGdiInterop </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af032cb08d7aa6a98cb6ed87f3e48b8a5" name="af032cb08d7aa6a98cb6ed87f3e48b8a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af032cb08d7aa6a98cb6ed87f3e48b8a5">&#9670;&#160;</a></span>GetGdiInterop() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::GetGdiInterop </td>
          <td>(</td>
          <td class="paramtype">IDWriteGdiInterop **</td>          <td class="paramname"><span class="paramname"><em>gdiInterop</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8dcbedb5ce65b0c543aad4aae6eff1c3" name="a8dcbedb5ce65b0c543aad4aae6eff1c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dcbedb5ce65b0c543aad4aae6eff1c3">&#9670;&#160;</a></span>GetSystemFontCollection() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_font_collection.xhtml">FontCollection</a> Harlinn::Windows::DirectWrite::Factory::GetSystemFontCollection </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>checkForUpdates</em></span><span class="paramdefsep"> = </span><span class="paramdefval">false</span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aad4132ab41891e33f19102229785d2cf" name="aad4132ab41891e33f19102229785d2cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad4132ab41891e33f19102229785d2cf">&#9670;&#160;</a></span>GetSystemFontCollection() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::GetSystemFontCollection </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontCollection **</td>          <td class="paramname"><span class="paramname"><em>fontCollection</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="_h_c_c_date_time_8cpp.xhtml#a8663a698628cc67791708eda36b484a7">BOOL</a></td>          <td class="paramname"><span class="paramname"><em>checkForUpdates</em></span><span class="paramdefsep"> = </span><span class="paramdefval">FALSE</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa3bf95ecbb073ea21b239558b9a2dcaa" name="aa3bf95ecbb073ea21b239558b9a2dcaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3bf95ecbb073ea21b239558b9a2dcaa">&#9670;&#160;</a></span>RegisterFontCollectionLoader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::RegisterFontCollectionLoader </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontCollectionLoader *</td>          <td class="paramname"><span class="paramname"><em>fontCollectionLoader</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae67945f6754713f990b2d95365c3e301" name="ae67945f6754713f990b2d95365c3e301"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae67945f6754713f990b2d95365c3e301">&#9670;&#160;</a></span>RegisterFontFileLoader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::RegisterFontFileLoader </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontFileLoader *</td>          <td class="paramname"><span class="paramname"><em>fontFileLoader</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a89d495069132b523894befe17e80c908" name="a89d495069132b523894befe17e80c908"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89d495069132b523894befe17e80c908">&#9670;&#160;</a></span>UnregisterFontCollectionLoader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::UnregisterFontCollectionLoader </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontCollectionLoader *</td>          <td class="paramname"><span class="paramname"><em>fontCollectionLoader</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a522543db1ed8b0bcef9788605f8ed6b9" name="a522543db1ed8b0bcef9788605f8ed6b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a522543db1ed8b0bcef9788605f8ed6b9">&#9670;&#160;</a></span>UnregisterFontFileLoader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a> &amp; Harlinn::Windows::DirectWrite::Factory::UnregisterFontFileLoader </td>
          <td>(</td>
          <td class="paramtype">IDWriteFontFileLoader *</td>          <td class="paramname"><span class="paramname"><em>fontFileLoader</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_h_w_d_write_8h.xhtml">HWDWrite.h</a></li>
<li><a class="el" href="_h_w_d_write_8cpp.xhtml">HWDWrite.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_direct_write.xhtml">DirectWrite</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_direct_write_1_1_factory.xhtml">Factory</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
