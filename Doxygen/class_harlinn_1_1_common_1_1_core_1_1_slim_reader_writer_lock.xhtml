<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::SlimReaderWriterLock Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::SlimReaderWriterLock Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Slim reader/writer (SRW) locks enable the threads of a single process to access shared resources; they are optimized for speed and occupy very little memory. Slim reader-writer locks cannot be shared across processes.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCSync.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6d2d065b19b6b53ec81d38778791260c" id="r_a6d2d065b19b6b53ec81d38778791260c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d2d065b19b6b53ec81d38778791260c">SlimReaderWriterLock</a> () noexcept</td></tr>
<tr class="separator:a6d2d065b19b6b53ec81d38778791260c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38bfab7809cf59d2481bbeb5cad3a820" id="r_a38bfab7809cf59d2481bbeb5cad3a820"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a38bfab7809cf59d2481bbeb5cad3a820">SlimReaderWriterLock</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;other)=delete</td></tr>
<tr class="separator:a38bfab7809cf59d2481bbeb5cad3a820"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8a20c7ff3c11b38a02a4987e42f45ee" id="r_ad8a20c7ff3c11b38a02a4987e42f45ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8a20c7ff3c11b38a02a4987e42f45ee">SlimReaderWriterLock</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:ad8a20c7ff3c11b38a02a4987e42f45ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef05b75b811bb80ab6037594efc3ca7e" id="r_aef05b75b811bb80ab6037594efc3ca7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef05b75b811bb80ab6037594efc3ca7e">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;other)=delete</td></tr>
<tr class="separator:aef05b75b811bb80ab6037594efc3ca7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57e12e90c97d03d88661d9304f2bff8a" id="r_a57e12e90c97d03d88661d9304f2bff8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a57e12e90c97d03d88661d9304f2bff8a">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:a57e12e90c97d03d88661d9304f2bff8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a834f3e56de2911e9d6f663c8f00475e7" id="r_a834f3e56de2911e9d6f663c8f00475e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a834f3e56de2911e9d6f663c8f00475e7">AcquireExclusive</a> () const</td></tr>
<tr class="memdesc:a834f3e56de2911e9d6f663c8f00475e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acquires a slim reader/writer (SRW) lock in exclusive mode.  <br /></td></tr>
<tr class="separator:a834f3e56de2911e9d6f663c8f00475e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8509aac2f5a35778647d2fcd08e04c42" id="r_a8509aac2f5a35778647d2fcd08e04c42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8509aac2f5a35778647d2fcd08e04c42">lock</a> () const</td></tr>
<tr class="memdesc:a8509aac2f5a35778647d2fcd08e04c42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acquires a slim reader/writer (SRW) lock in exclusive mode.  <br /></td></tr>
<tr class="separator:a8509aac2f5a35778647d2fcd08e04c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61776b7649a34a0ede2c3e9627aeb3fd" id="r_a61776b7649a34a0ede2c3e9627aeb3fd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61776b7649a34a0ede2c3e9627aeb3fd">AcquireShared</a> () const</td></tr>
<tr class="memdesc:a61776b7649a34a0ede2c3e9627aeb3fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acquires a slim reader/writer (SRW) lock in shared mode.  <br /></td></tr>
<tr class="separator:a61776b7649a34a0ede2c3e9627aeb3fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b94923f860b8d2d9bba1de4f965e17" id="r_a94b94923f860b8d2d9bba1de4f965e17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a94b94923f860b8d2d9bba1de4f965e17">lock_shared</a> () const</td></tr>
<tr class="memdesc:a94b94923f860b8d2d9bba1de4f965e17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acquires a slim reader/writer (SRW) lock in shared mode.  <br /></td></tr>
<tr class="separator:a94b94923f860b8d2d9bba1de4f965e17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d5e9736220c8a9a47fba4e204405299" id="r_a0d5e9736220c8a9a47fba4e204405299"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d5e9736220c8a9a47fba4e204405299">TryAcquireExclusive</a> () const</td></tr>
<tr class="memdesc:a0d5e9736220c8a9a47fba4e204405299"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempts to acquire a slim reader/writer (SRW) lock in exclusive mode. If the call is successful, the calling thread takes ownership of the lock.  <br /></td></tr>
<tr class="separator:a0d5e9736220c8a9a47fba4e204405299"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1914654c39101bd8642b5e04df814d12" id="r_a1914654c39101bd8642b5e04df814d12"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1914654c39101bd8642b5e04df814d12">try_lock</a> () const</td></tr>
<tr class="memdesc:a1914654c39101bd8642b5e04df814d12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempts to acquire a slim reader/writer (SRW) lock in exclusive mode. If the call is successful, the calling thread takes ownership of the lock.  <br /></td></tr>
<tr class="separator:a1914654c39101bd8642b5e04df814d12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a90e3abda650e02b024b4caa8884ea5" id="r_a5a90e3abda650e02b024b4caa8884ea5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5a90e3abda650e02b024b4caa8884ea5">TryAcquireShared</a> () const</td></tr>
<tr class="memdesc:a5a90e3abda650e02b024b4caa8884ea5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempts to acquire a slim reader/writer (SRW) lock in shared mode. If the call is successful, the calling thread takes ownership of the lock.  <br /></td></tr>
<tr class="separator:a5a90e3abda650e02b024b4caa8884ea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae88e1e2614a21b43fd80ea61b979a85a" id="r_ae88e1e2614a21b43fd80ea61b979a85a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae88e1e2614a21b43fd80ea61b979a85a">try_lock_shared</a> () const</td></tr>
<tr class="memdesc:ae88e1e2614a21b43fd80ea61b979a85a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempts to acquire a slim reader/writer (SRW) lock in shared mode. If the call is successful, the calling thread takes ownership of the lock.  <br /></td></tr>
<tr class="separator:ae88e1e2614a21b43fd80ea61b979a85a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5900ab7112aba3c18d3577479ceb0e0" id="r_ae5900ab7112aba3c18d3577479ceb0e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae5900ab7112aba3c18d3577479ceb0e0">ReleaseExclusive</a> () const</td></tr>
<tr class="memdesc:ae5900ab7112aba3c18d3577479ceb0e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases a slim reader/writer (SRW) lock that was acquired in exclusive mode.  <br /></td></tr>
<tr class="separator:ae5900ab7112aba3c18d3577479ceb0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6481f3348440f036cdeb8042fc61d085" id="r_a6481f3348440f036cdeb8042fc61d085"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6481f3348440f036cdeb8042fc61d085">unlock</a> () const</td></tr>
<tr class="memdesc:a6481f3348440f036cdeb8042fc61d085"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases a slim reader/writer (SRW) lock that was acquired in exclusive mode.  <br /></td></tr>
<tr class="separator:a6481f3348440f036cdeb8042fc61d085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ac18888a45fc125fd2a6661e5beeae8" id="r_a3ac18888a45fc125fd2a6661e5beeae8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3ac18888a45fc125fd2a6661e5beeae8">ReleaseShared</a> () const</td></tr>
<tr class="memdesc:a3ac18888a45fc125fd2a6661e5beeae8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases a slim reader/writer (SRW) lock that was acquired in shared mode.  <br /></td></tr>
<tr class="separator:a3ac18888a45fc125fd2a6661e5beeae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bc318d0ab9f1300ef12ab89ba9d6735" id="r_a5bc318d0ab9f1300ef12ab89ba9d6735"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5bc318d0ab9f1300ef12ab89ba9d6735">unlock_shared</a> () const</td></tr>
<tr class="memdesc:a5bc318d0ab9f1300ef12ab89ba9d6735"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases a slim reader/writer (SRW) lock that was acquired in shared mode.  <br /></td></tr>
<tr class="separator:a5bc318d0ab9f1300ef12ab89ba9d6735"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a69655262e3bb24a4f4ffacfd5b9ae2ee" id="r_a69655262e3bb24a4f4ffacfd5b9ae2ee"><td class="memItemLeft" align="right" valign="top">SRWLOCK&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a69655262e3bb24a4f4ffacfd5b9ae2ee">lock_</a></td></tr>
<tr class="separator:a69655262e3bb24a4f4ffacfd5b9ae2ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ab270e49e575fdf0fe1a4f2ee911df116" id="r_ab270e49e575fdf0fe1a4f2ee911df116"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab270e49e575fdf0fe1a4f2ee911df116">ConditionVariable</a></td></tr>
<tr class="separator:ab270e49e575fdf0fe1a4f2ee911df116"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Slim reader/writer (SRW) locks enable the threads of a single process to access shared resources; they are optimized for speed and occupy very little memory. Slim reader-writer locks cannot be shared across processes. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6d2d065b19b6b53ec81d38778791260c" name="a6d2d065b19b6b53ec81d38778791260c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d2d065b19b6b53ec81d38778791260c">&#9670;&#160;</a></span>SlimReaderWriterLock() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::SlimReaderWriterLock::SlimReaderWriterLock </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a38bfab7809cf59d2481bbeb5cad3a820" name="a38bfab7809cf59d2481bbeb5cad3a820"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38bfab7809cf59d2481bbeb5cad3a820">&#9670;&#160;</a></span>SlimReaderWriterLock() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::SlimReaderWriterLock::SlimReaderWriterLock </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad8a20c7ff3c11b38a02a4987e42f45ee" name="ad8a20c7ff3c11b38a02a4987e42f45ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8a20c7ff3c11b38a02a4987e42f45ee">&#9670;&#160;</a></span>SlimReaderWriterLock() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::SlimReaderWriterLock::SlimReaderWriterLock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a834f3e56de2911e9d6f663c8f00475e7" name="a834f3e56de2911e9d6f663c8f00475e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a834f3e56de2911e9d6f663c8f00475e7">&#9670;&#160;</a></span>AcquireExclusive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::AcquireExclusive </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Acquires a slim reader/writer (SRW) lock in exclusive mode. </p>

</div>
</div>
<a id="a61776b7649a34a0ede2c3e9627aeb3fd" name="a61776b7649a34a0ede2c3e9627aeb3fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61776b7649a34a0ede2c3e9627aeb3fd">&#9670;&#160;</a></span>AcquireShared()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::AcquireShared </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Acquires a slim reader/writer (SRW) lock in shared mode. </p>

</div>
</div>
<a id="a8509aac2f5a35778647d2fcd08e04c42" name="a8509aac2f5a35778647d2fcd08e04c42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8509aac2f5a35778647d2fcd08e04c42">&#9670;&#160;</a></span>lock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::lock </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Acquires a slim reader/writer (SRW) lock in exclusive mode. </p>

</div>
</div>
<a id="a94b94923f860b8d2d9bba1de4f965e17" name="a94b94923f860b8d2d9bba1de4f965e17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94b94923f860b8d2d9bba1de4f965e17">&#9670;&#160;</a></span>lock_shared()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::lock_shared </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Acquires a slim reader/writer (SRW) lock in shared mode. </p>

</div>
</div>
<a id="aef05b75b811bb80ab6037594efc3ca7e" name="aef05b75b811bb80ab6037594efc3ca7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef05b75b811bb80ab6037594efc3ca7e">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp; Harlinn::Common::Core::SlimReaderWriterLock::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a57e12e90c97d03d88661d9304f2bff8a" name="a57e12e90c97d03d88661d9304f2bff8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57e12e90c97d03d88661d9304f2bff8a">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp; Harlinn::Common::Core::SlimReaderWriterLock::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a> &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5900ab7112aba3c18d3577479ceb0e0" name="ae5900ab7112aba3c18d3577479ceb0e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5900ab7112aba3c18d3577479ceb0e0">&#9670;&#160;</a></span>ReleaseExclusive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::ReleaseExclusive </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Releases a slim reader/writer (SRW) lock that was acquired in exclusive mode. </p>

</div>
</div>
<a id="a3ac18888a45fc125fd2a6661e5beeae8" name="a3ac18888a45fc125fd2a6661e5beeae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ac18888a45fc125fd2a6661e5beeae8">&#9670;&#160;</a></span>ReleaseShared()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::ReleaseShared </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Releases a slim reader/writer (SRW) lock that was acquired in shared mode. </p>

</div>
</div>
<a id="a1914654c39101bd8642b5e04df814d12" name="a1914654c39101bd8642b5e04df814d12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1914654c39101bd8642b5e04df814d12">&#9670;&#160;</a></span>try_lock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::SlimReaderWriterLock::try_lock </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attempts to acquire a slim reader/writer (SRW) lock in exclusive mode. If the call is successful, the calling thread takes ownership of the lock. </p>
<dl class="section return"><dt>Returns</dt><dd>If the lock is successfully acquired, the return value is true.</dd></dl>

</div>
</div>
<a id="ae88e1e2614a21b43fd80ea61b979a85a" name="ae88e1e2614a21b43fd80ea61b979a85a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae88e1e2614a21b43fd80ea61b979a85a">&#9670;&#160;</a></span>try_lock_shared()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::SlimReaderWriterLock::try_lock_shared </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attempts to acquire a slim reader/writer (SRW) lock in shared mode. If the call is successful, the calling thread takes ownership of the lock. </p>
<dl class="section return"><dt>Returns</dt><dd>If the lock is successfully acquired, the return value is true.</dd></dl>

</div>
</div>
<a id="a0d5e9736220c8a9a47fba4e204405299" name="a0d5e9736220c8a9a47fba4e204405299"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d5e9736220c8a9a47fba4e204405299">&#9670;&#160;</a></span>TryAcquireExclusive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::SlimReaderWriterLock::TryAcquireExclusive </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attempts to acquire a slim reader/writer (SRW) lock in exclusive mode. If the call is successful, the calling thread takes ownership of the lock. </p>
<dl class="section return"><dt>Returns</dt><dd>If the lock is successfully acquired, the return value is true.</dd></dl>

</div>
</div>
<a id="a5a90e3abda650e02b024b4caa8884ea5" name="a5a90e3abda650e02b024b4caa8884ea5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a90e3abda650e02b024b4caa8884ea5">&#9670;&#160;</a></span>TryAcquireShared()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Harlinn::Common::Core::SlimReaderWriterLock::TryAcquireShared </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attempts to acquire a slim reader/writer (SRW) lock in shared mode. If the call is successful, the calling thread takes ownership of the lock. </p>
<dl class="section return"><dt>Returns</dt><dd>If the lock is successfully acquired, the return value is true.</dd></dl>

</div>
</div>
<a id="a6481f3348440f036cdeb8042fc61d085" name="a6481f3348440f036cdeb8042fc61d085"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6481f3348440f036cdeb8042fc61d085">&#9670;&#160;</a></span>unlock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::unlock </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Releases a slim reader/writer (SRW) lock that was acquired in exclusive mode. </p>

</div>
</div>
<a id="a5bc318d0ab9f1300ef12ab89ba9d6735" name="a5bc318d0ab9f1300ef12ab89ba9d6735"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bc318d0ab9f1300ef12ab89ba9d6735">&#9670;&#160;</a></span>unlock_shared()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::SlimReaderWriterLock::unlock_shared </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Releases a slim reader/writer (SRW) lock that was acquired in shared mode. </p>

</div>
</div>
<h2 class="groupheader">Friends And Related Symbol Documentation</h2>
<a id="ab270e49e575fdf0fe1a4f2ee911df116" name="ab270e49e575fdf0fe1a4f2ee911df116"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab270e49e575fdf0fe1a4f2ee911df116">&#9670;&#160;</a></span>ConditionVariable</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_condition_variable.xhtml">ConditionVariable</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a69655262e3bb24a4f4ffacfd5b9ae2ee" name="a69655262e3bb24a4f4ffacfd5b9ae2ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69655262e3bb24a4f4ffacfd5b9ae2ee">&#9670;&#160;</a></span>lock_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SRWLOCK Harlinn::Common::Core::SlimReaderWriterLock::lock_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_sync_8h.xhtml">HCCSync.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_slim_reader_writer_lock.xhtml">SlimReaderWriterLock</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
