<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a58bdc0e2d3454d1641e4dce241ced6f5">Base</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#a698139e7096326c80bb81c6e9e05b939">ConstPointerIterator</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#a57d976acd6bc92bcae41470fc8e8e9ec">ConstPointerIterator</a>(pointer ptr) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#ae4eae753a7acb279ceade9e7911bf71f">ConstPointerIterator</a>(const ConstPointerIterator &amp;other, const difference_type offset) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ad9defd4e8437bf3b926cc695845a56fb">ContainerType</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#aa2f5f4718e3bfa7bf189521bdaf70873">difference_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ae6fbaa2c1c1ee43587b0cde7b0d59941">iterator_category</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#aba03e9f062c4d210c91152f5dd8f1ac4">iterator_concept</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a4dace37b90ed6da26ff1c5bbfcec4bb9">operator*</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a7a689f3d25932f27fa80c9087a5a88cc">operator+</a>(const difference_type offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a6736c87d81f071db6aa7cd2c0f6cd513">operator+</a>(const difference_type lhs, PointerIterator rhs) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a51e375f02cc300da5d5ab8093544413a">operator++</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#aee172cdd6d27c588342cc7aa0e7d8d25">operator++</a>(int) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a9ffa57b9d3f3d0a8f9c9c993b88fb586">operator+=</a>(const difference_type offset) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ab8723957f72e5869b4bcf159199b6a9c">operator-</a>(const difference_type offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ac553e4592e36ec118714a93c292f6715">operator-</a>(const ConstPointerIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ab42c0e177a1074f47f7014c19c457785">operator--</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a4158b90e0b9d6ce7e9b366e5fcfde26a">operator--</a>(int) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#abfbe00091c11c393ffbe4dc3c32290ab">operator-=</a>(const difference_type offset) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#add893138c2210de33c67d5f85bc42c2a">operator-&gt;</a>() const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#ac0eaca79cb14b0e7d8c72ae2b9a42e6d">operator&lt;=&gt;</a>(const ConstPointerIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#aa5896f2824bc8ecbfea7b05ad0a4390c">operator==</a>(const ConstPointerIterator &amp;other) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a2fd9d3562e31ff5394e8565692909838">operator[]</a>(const difference_type offset) const noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#a43a937801ebbea5f4e1e8a8856e6d1bc">Pointer</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a4d7ebe3a873944d7b1222156dc0c9d7d">pointer</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#af63c7f932f11994e6018648facf10302">PointerIterator</a>() noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ab76fd11586f5f37879b97f706c6e7c12">PointerIterator</a>(pointer ptr) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a629e19bbe998a28e44c059f60c6f5d65">PointerIterator</a>(const PointerIterator &amp;other, const difference_type offset) noexcept</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml#a68336f231698a36c5fdb97e3a6ebd64a">ptr_</a></td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_const_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::ConstPointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#ad98d46c27652e31a8e657811741313be">reference</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml#a6725deb6bec9d8d5fce55a4522db48ca">value_type</a> typedef</td><td class="entry"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_pointer_iterator.xhtml">Harlinn::Common::Core::Internal::PointerIterator&lt; ContainerT &gt;</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
