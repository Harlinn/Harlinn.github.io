<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::IO::Sockets::Address Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::IO::Sockets::Address Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Provides a generic mechanism for specifying a transport address.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCSocket.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aca8e5ca1f430bdc410a348193026b2ec" id="r_aca8e5ca1f430bdc410a348193026b2ec"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca8e5ca1f430bdc410a348193026b2ec">Address</a> () noexcept</td></tr>
<tr class="separator:aca8e5ca1f430bdc410a348193026b2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6770fd841209174b09d3a743b35e3e2b" id="r_a6770fd841209174b09d3a743b35e3e2b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6770fd841209174b09d3a743b35e3e2b">Address</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">AddressFamily</a> addressFamily, const wchar_t *addressString)</td></tr>
<tr class="memdesc:a6770fd841209174b09d3a743b35e3e2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Address</a> object by converting zero-terminated string according to the specified address family.  <br /></td></tr>
<tr class="separator:a6770fd841209174b09d3a743b35e3e2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14826be7fe12ca83da592542ca3e6801" id="r_a14826be7fe12ca83da592542ca3e6801"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a14826be7fe12ca83da592542ca3e6801">Address</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">AddressFamily</a> addressFamily, const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml">ProtocolInfo</a> &amp;protocolInfo, const wchar_t *addressString)</td></tr>
<tr class="memdesc:a14826be7fe12ca83da592542ca3e6801"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Address</a> object by converting zero-terminated string according to the specified address family and <code><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml" title="Used to store or retrieve complete information for a given protocol.">ProtocolInfo</a></code>.  <br /></td></tr>
<tr class="separator:a14826be7fe12ca83da592542ca3e6801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7a1f4b1fd68d10ddb76e2792ac23335" id="r_ac7a1f4b1fd68d10ddb76e2792ac23335"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7a1f4b1fd68d10ddb76e2792ac23335">Address</a> (const struct sockaddr *addr, size_t addrlen)</td></tr>
<tr class="memdesc:ac7a1f4b1fd68d10ddb76e2792ac23335"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Address</a> object from the provided <code>sockaddr</code> structure.  <br /></td></tr>
<tr class="separator:ac7a1f4b1fd68d10ddb76e2792ac23335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c08612a60f8b6aec8d31e72c4188e09" id="r_a1c08612a60f8b6aec8d31e72c4188e09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c08612a60f8b6aec8d31e72c4188e09">Address</a> (const wchar_t *nodeName, const wchar_t *serviceName, const ADDRINFOW *hints=nullptr)</td></tr>
<tr class="separator:a1c08612a60f8b6aec8d31e72c4188e09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2589c45796afb79546f55c2383070eca" id="r_a2589c45796afb79546f55c2383070eca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2589c45796afb79546f55c2383070eca">Address</a> (const wchar_t *nodeName, <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a> portNumber, const ADDRINFOW *hints=nullptr)</td></tr>
<tr class="separator:a2589c45796afb79546f55c2383070eca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa759b7b9a1ea5066c1d76bcb770430a1" id="r_aa759b7b9a1ea5066c1d76bcb770430a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa759b7b9a1ea5066c1d76bcb770430a1">Address</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a> portNumber, const ADDRINFOW *hints=nullptr)</td></tr>
<tr class="separator:aa759b7b9a1ea5066c1d76bcb770430a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ec590c41dd28081e772d4cc7d96d30" id="r_a29ec590c41dd28081e772d4cc7d96d30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a29ec590c41dd28081e772d4cc7d96d30">Assign</a> (const struct sockaddr *addr, int addrlen) noexcept</td></tr>
<tr class="separator:a29ec590c41dd28081e772d4cc7d96d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5f64a0b0eef36dba7a390e12c183c07" id="r_ae5f64a0b0eef36dba7a390e12c183c07"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae5f64a0b0eef36dba7a390e12c183c07">Reset</a> ()</td></tr>
<tr class="separator:ae5f64a0b0eef36dba7a390e12c183c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa81a2247c257ed5dffd1b6aad04edbea" id="r_aa81a2247c257ed5dffd1b6aad04edbea"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa81a2247c257ed5dffd1b6aad04edbea">length</a> () const noexcept</td></tr>
<tr class="separator:aa81a2247c257ed5dffd1b6aad04edbea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ec6b7f747abf938b7b7b265ffa3147" id="r_ab8ec6b7f747abf938b7b7b265ffa3147"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab8ec6b7f747abf938b7b7b265ffa3147">SetLength</a> (int newLength) noexcept</td></tr>
<tr class="separator:ab8ec6b7f747abf938b7b7b265ffa3147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37684657b7143983bb1109f2713a2b89" id="r_a37684657b7143983bb1109f2713a2b89"><td class="memItemLeft" align="right" valign="top">const sockaddr *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a37684657b7143983bb1109f2713a2b89">data</a> () const noexcept</td></tr>
<tr class="separator:a37684657b7143983bb1109f2713a2b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61a8a5aa740c4357ab4e4292e07bd84b" id="r_a61a8a5aa740c4357ab4e4292e07bd84b"><td class="memItemLeft" align="right" valign="top">sockaddr *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61a8a5aa740c4357ab4e4292e07bd84b">data</a> () noexcept</td></tr>
<tr class="separator:a61a8a5aa740c4357ab4e4292e07bd84b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2ab7e3029420a9349853945a99a2b46" id="r_af2ab7e3029420a9349853945a99a2b46"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">AddressFamily</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af2ab7e3029420a9349853945a99a2b46">Family</a> () const noexcept</td></tr>
<tr class="separator:af2ab7e3029420a9349853945a99a2b46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40e695b0ebcc7dd1205089d58fe6a1d5" id="r_a40e695b0ebcc7dd1205089d58fe6a1d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_h_c_c_def_8h.xhtml#afb06ae686742fde98e6427c4a1e2206c">HCC_EXPORT</a> <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a40e695b0ebcc7dd1205089d58fe6a1d5">ToString</a> () const</td></tr>
<tr class="separator:a40e695b0ebcc7dd1205089d58fe6a1d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:aac322e19a5cb00a15f1e4d0c495c0a81" id="r_aac322e19a5cb00a15f1e4d0c495c0a81"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac322e19a5cb00a15f1e4d0c495c0a81">DataSize</a> = sizeof( SOCKADDR_STORAGE )</td></tr>
<tr class="separator:aac322e19a5cb00a15f1e4d0c495c0a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a59ec07a24c5293d6a17ea28ce12841fb" id="r_a59ec07a24c5293d6a17ea28ce12841fb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a59ec07a24c5293d6a17ea28ce12841fb">length_</a></td></tr>
<tr class="separator:a59ec07a24c5293d6a17ea28ce12841fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0e3370552fa185b8dbf79462a100040" id="r_aa0e3370552fa185b8dbf79462a100040"><td class="memItemLeft" align="right" valign="top">SOCKADDR_STORAGE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa0e3370552fa185b8dbf79462a100040">storage_</a></td></tr>
<tr class="separator:aa0e3370552fa185b8dbf79462a100040"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ab510887d735ee73ab1cb598c66260e87" id="r_ab510887d735ee73ab1cb598c66260e87"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab510887d735ee73ab1cb598c66260e87">Socket</a></td></tr>
<tr class="separator:ab510887d735ee73ab1cb598c66260e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa80a12f6642efee4fcb7f9cf984d9ada" id="r_aa80a12f6642efee4fcb7f9cf984d9ada"><td class="memTemplParams" colspan="2">template&lt;typename DerivedT &gt; </td></tr>
<tr class="memitem:aa80a12f6642efee4fcb7f9cf984d9ada"><td class="memTemplItemLeft" align="right" valign="top">class&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aa80a12f6642efee4fcb7f9cf984d9ada">SocketHandler</a></td></tr>
<tr class="separator:aa80a12f6642efee4fcb7f9cf984d9ada"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Provides a generic mechanism for specifying a transport address. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aca8e5ca1f430bdc410a348193026b2ec" name="aca8e5ca1f430bdc410a348193026b2ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca8e5ca1f430bdc410a348193026b2ec">&#9670;&#160;</a></span>Address() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6770fd841209174b09d3a743b35e3e2b" name="a6770fd841209174b09d3a743b35e3e2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6770fd841209174b09d3a743b35e3e2b">&#9670;&#160;</a></span>Address() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">AddressFamily</a></td>          <td class="paramname"><span class="paramname"><em>addressFamily</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>addressString</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Address</a> object by converting zero-terminated string according to the specified address family. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">addressFamily</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>The address family of the network address pointed to by the <code>addressString</code> parameter. </p>
<p>An exception is thrown if <code>addressFamily</code> is not equal to <code><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19afa09cff3d658a0661030195ca83ab363">AddressFamily::INetV4</a></code> or <code><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19a30db084e704f53ce7fb6138cf6db667c">AddressFamily::INetV6</a></code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">addressString</td><td>A pointer to the zero-terminated string that contains the network address in standard text form to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a14826be7fe12ca83da592542ca3e6801" name="a14826be7fe12ca83da592542ca3e6801"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14826be7fe12ca83da592542ca3e6801">&#9670;&#160;</a></span>Address() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">AddressFamily</a></td>          <td class="paramname"><span class="paramname"><em>addressFamily</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml">ProtocolInfo</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>protocolInfo</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>addressString</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Address</a> object by converting zero-terminated string according to the specified address family and <code><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml" title="Used to store or retrieve complete information for a given protocol.">ProtocolInfo</a></code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">addressFamily</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>The address family of the network address pointed to by the <code>addressString</code> parameter. </p>
<p>An exception is thrown if <code>addressFamily</code> is not equal to <code><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19afa09cff3d658a0661030195ca83ab363">AddressFamily::INetV4</a></code> or <code><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19a30db084e704f53ce7fb6138cf6db667c">AddressFamily::INetV6</a></code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">protocolInfo</td><td>A reference to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml" title="Used to store or retrieve complete information for a given protocol.">ProtocolInfo</a> object associated with the provider to be used. </td></tr>
    <tr><td class="paramname">addressString</td><td>A pointer to the zero-terminated string that contains the network address in standard text form to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac7a1f4b1fd68d10ddb76e2792ac23335" name="ac7a1f4b1fd68d10ddb76e2792ac23335"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7a1f4b1fd68d10ddb76e2792ac23335">&#9670;&#160;</a></span>Address() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramtype">const struct sockaddr *</td>          <td class="paramname"><span class="paramname"><em>addr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>addrlen</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes a new <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Address</a> object from the provided <code>sockaddr</code> structure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">addr</td><td>A pointer to the <code>sockaddr</code> structure containing the address to copy. </td></tr>
    <tr><td class="paramname">addrlen</td><td>The length, in bytes, of the information in the provided <code>sockaddr</code> structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1c08612a60f8b6aec8d31e72c4188e09" name="a1c08612a60f8b6aec8d31e72c4188e09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c08612a60f8b6aec8d31e72c4188e09">&#9670;&#160;</a></span>Address() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>nodeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>serviceName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ADDRINFOW *</td>          <td class="paramname"><span class="paramname"><em>hints</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2589c45796afb79546f55c2383070eca" name="a2589c45796afb79546f55c2383070eca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2589c45796afb79546f55c2383070eca">&#9670;&#160;</a></span>Address() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *</td>          <td class="paramname"><span class="paramname"><em>nodeName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a></td>          <td class="paramname"><span class="paramname"><em>portNumber</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ADDRINFOW *</td>          <td class="paramname"><span class="paramname"><em>hints</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa759b7b9a1ea5066c1d76bcb770430a1" name="aa759b7b9a1ea5066c1d76bcb770430a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa759b7b9a1ea5066c1d76bcb770430a1">&#9670;&#160;</a></span>Address() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::Address::Address </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a16d9ed304994b417f1b60c1431408c7e">UInt16</a></td>          <td class="paramname"><span class="paramname"><em>portNumber</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ADDRINFOW *</td>          <td class="paramname"><span class="paramname"><em>hints</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a29ec590c41dd28081e772d4cc7d96d30" name="a29ec590c41dd28081e772d4cc7d96d30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29ec590c41dd28081e772d4cc7d96d30">&#9670;&#160;</a></span>Assign()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::Address::Assign </td>
          <td>(</td>
          <td class="paramtype">const struct sockaddr *</td>          <td class="paramname"><span class="paramname"><em>addr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>addrlen</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a37684657b7143983bb1109f2713a2b89" name="a37684657b7143983bb1109f2713a2b89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37684657b7143983bb1109f2713a2b89">&#9670;&#160;</a></span>data() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const sockaddr * Harlinn::Common::Core::IO::Sockets::Address::data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61a8a5aa740c4357ab4e4292e07bd84b" name="a61a8a5aa740c4357ab4e4292e07bd84b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61a8a5aa740c4357ab4e4292e07bd84b">&#9670;&#160;</a></span>data() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sockaddr * Harlinn::Common::Core::IO::Sockets::Address::data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af2ab7e3029420a9349853945a99a2b46" name="af2ab7e3029420a9349853945a99a2b46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2ab7e3029420a9349853945a99a2b46">&#9670;&#160;</a></span>Family()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">AddressFamily</a> Harlinn::Common::Core::IO::Sockets::Address::Family </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa81a2247c257ed5dffd1b6aad04edbea" name="aa81a2247c257ed5dffd1b6aad04edbea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa81a2247c257ed5dffd1b6aad04edbea">&#9670;&#160;</a></span>length()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::IO::Sockets::Address::length </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5f64a0b0eef36dba7a390e12c183c07" name="ae5f64a0b0eef36dba7a390e12c183c07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5f64a0b0eef36dba7a390e12c183c07">&#9670;&#160;</a></span>Reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::Address::Reset </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab8ec6b7f747abf938b7b7b265ffa3147" name="ab8ec6b7f747abf938b7b7b265ffa3147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8ec6b7f747abf938b7b7b265ffa3147">&#9670;&#160;</a></span>SetLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::Address::SetLength </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>newLength</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a40e695b0ebcc7dd1205089d58fe6a1d5" name="a40e695b0ebcc7dd1205089d58fe6a1d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40e695b0ebcc7dd1205089d58fe6a1d5">&#9670;&#160;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a7b2b8eb82c826297870ffb50d3739060">WideString</a> Harlinn::Common::Core::IO::Sockets::Address::ToString </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Symbol Documentation</h2>
<a id="ab510887d735ee73ab1cb598c66260e87" name="ab510887d735ee73ab1cb598c66260e87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab510887d735ee73ab1cb598c66260e87">&#9670;&#160;</a></span>Socket</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml">Socket</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa80a12f6642efee4fcb7f9cf984d9ada" name="aa80a12f6642efee4fcb7f9cf984d9ada"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa80a12f6642efee4fcb7f9cf984d9ada">&#9670;&#160;</a></span>SocketHandler</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket_handler.xhtml">SocketHandler</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aac322e19a5cb00a15f1e4d0c495c0a81" name="aac322e19a5cb00a15f1e4d0c495c0a81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac322e19a5cb00a15f1e4d0c495c0a81">&#9670;&#160;</a></span>DataSize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t Harlinn::Common::Core::IO::Sockets::Address::DataSize = sizeof( SOCKADDR_STORAGE )</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a59ec07a24c5293d6a17ea28ce12841fb" name="a59ec07a24c5293d6a17ea28ce12841fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59ec07a24c5293d6a17ea28ce12841fb">&#9670;&#160;</a></span>length_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::IO::Sockets::Address::length_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa0e3370552fa185b8dbf79462a100040" name="aa0e3370552fa185b8dbf79462a100040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0e3370552fa185b8dbf79462a100040">&#9670;&#160;</a></span>storage_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SOCKADDR_STORAGE Harlinn::Common::Core::IO::Sockets::Address::storage_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="_h_c_c_socket_8h.xhtml">HCCSocket.h</a></li>
<li><a class="el" href="_h_c_c_socket_8cpp.xhtml">HCCSocket.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml">IO</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml">Sockets</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml">Address</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
