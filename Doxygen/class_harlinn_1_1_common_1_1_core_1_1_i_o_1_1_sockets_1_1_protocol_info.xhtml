<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::IO::Sockets::ProtocolInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::IO::Sockets::ProtocolInfo Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Used to store or retrieve complete information for a given protocol.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HCCSocket.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a41e19aee6cbe0b306ad28cdeac1244f5" id="r_a41e19aee6cbe0b306ad28cdeac1244f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a41e19aee6cbe0b306ad28cdeac1244f5">ProtocolInfo</a> ()</td></tr>
<tr class="separator:a41e19aee6cbe0b306ad28cdeac1244f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6698793d3d63bd511313e9e0a67ee61" id="r_aa6698793d3d63bd511313e9e0a67ee61"><td class="memItemLeft" align="right" valign="top">const WSAPROTOCOL_INFOW *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa6698793d3d63bd511313e9e0a67ee61">data</a> () const</td></tr>
<tr class="separator:aa6698793d3d63bd511313e9e0a67ee61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9dd204351e84d575a522467ff3e6e83" id="r_af9dd204351e84d575a522467ff3e6e83"><td class="memItemLeft" align="right" valign="top">WSAPROTOCOL_INFOW *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af9dd204351e84d575a522467ff3e6e83">data</a> ()</td></tr>
<tr class="separator:af9dd204351e84d575a522467ff3e6e83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaecc9dfbfb2d790bee697e00beb06181" id="r_aaecc9dfbfb2d790bee697e00beb06181"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a9c5e107a7ef19d3e220621a076c8b33a">Sockets::ServiceFlags1</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaecc9dfbfb2d790bee697e00beb06181">ServiceFlags1</a> () const noexcept</td></tr>
<tr class="memdesc:aaecc9dfbfb2d790bee697e00beb06181"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a bit-mask that describes the services provided by the protocol.  <br /></td></tr>
<tr class="separator:aaecc9dfbfb2d790bee697e00beb06181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a416112f67034001f5db5c4407295f025" id="r_a416112f67034001f5db5c4407295f025"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a416112f67034001f5db5c4407295f025">SetServiceFlags1</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a9c5e107a7ef19d3e220621a076c8b33a">Sockets::ServiceFlags1</a> value) noexcept</td></tr>
<tr class="memdesc:a416112f67034001f5db5c4407295f025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a bit-mask that describes the services provided by the protocol.  <br /></td></tr>
<tr class="separator:a416112f67034001f5db5c4407295f025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa41a8233f1904fd10363a2582b5ccf5d" id="r_aa41a8233f1904fd10363a2582b5ccf5d"><td class="memItemLeft" align="right" valign="top">constexpr DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa41a8233f1904fd10363a2582b5ccf5d">ServiceFlags2</a> () const noexcept</td></tr>
<tr class="memdesc:aa41a8233f1904fd10363a2582b5ccf5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for additional protocol-attribute definitions.  <br /></td></tr>
<tr class="separator:aa41a8233f1904fd10363a2582b5ccf5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3044d8d358e28db50531b66ae007b84e" id="r_a3044d8d358e28db50531b66ae007b84e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3044d8d358e28db50531b66ae007b84e">SetServiceFlags2</a> (DWORD value) noexcept</td></tr>
<tr class="memdesc:a3044d8d358e28db50531b66ae007b84e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for additional protocol-attribute definitions.  <br /></td></tr>
<tr class="separator:a3044d8d358e28db50531b66ae007b84e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a949713b22ad194698ca2e28d48c384" id="r_a8a949713b22ad194698ca2e28d48c384"><td class="memItemLeft" align="right" valign="top">constexpr DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a949713b22ad194698ca2e28d48c384">ServiceFlags3</a> () const noexcept</td></tr>
<tr class="memdesc:a8a949713b22ad194698ca2e28d48c384"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for additional protocol-attribute definitions.  <br /></td></tr>
<tr class="separator:a8a949713b22ad194698ca2e28d48c384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3070aea29ed37bc4adb043e4dc82844e" id="r_a3070aea29ed37bc4adb043e4dc82844e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3070aea29ed37bc4adb043e4dc82844e">SetServiceFlags3</a> (DWORD value) noexcept</td></tr>
<tr class="memdesc:a3070aea29ed37bc4adb043e4dc82844e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for additional protocol-attribute definitions.  <br /></td></tr>
<tr class="separator:a3070aea29ed37bc4adb043e4dc82844e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a513a50f825a4f11c5a35c4322e2487fe" id="r_a513a50f825a4f11c5a35c4322e2487fe"><td class="memItemLeft" align="right" valign="top">constexpr DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a513a50f825a4f11c5a35c4322e2487fe">ServiceFlags4</a> () const noexcept</td></tr>
<tr class="memdesc:a513a50f825a4f11c5a35c4322e2487fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for additional protocol-attribute definitions.  <br /></td></tr>
<tr class="separator:a513a50f825a4f11c5a35c4322e2487fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fb26bb616b1e5977f20ec68758e8b3" id="r_a92fb26bb616b1e5977f20ec68758e8b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a92fb26bb616b1e5977f20ec68758e8b3">SetServiceFlags4</a> (DWORD value) noexcept</td></tr>
<tr class="memdesc:a92fb26bb616b1e5977f20ec68758e8b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for additional protocol-attribute definitions.  <br /></td></tr>
<tr class="separator:a92fb26bb616b1e5977f20ec68758e8b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fcb161ac6509167bfcb69ad8c6748c9" id="r_a6fcb161ac6509167bfcb69ad8c6748c9"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#abde02eabe1ba7437e30e11da3c03c775">Sockets::ProviderFlags</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6fcb161ac6509167bfcb69ad8c6748c9">ProviderFlags</a> () const noexcept</td></tr>
<tr class="memdesc:a6fcb161ac6509167bfcb69ad8c6748c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a set of flags that provides information on how this protocol is represented in the Winsock catalog.  <br /></td></tr>
<tr class="separator:a6fcb161ac6509167bfcb69ad8c6748c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac81ec04f0f54be434f91146b0ed47d5f" id="r_ac81ec04f0f54be434f91146b0ed47d5f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac81ec04f0f54be434f91146b0ed47d5f">SetProviderFlags</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#abde02eabe1ba7437e30e11da3c03c775">Sockets::ProviderFlags</a> flags) noexcept</td></tr>
<tr class="separator:ac81ec04f0f54be434f91146b0ed47d5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a800543fef66a73ccc413a1ac91a195bb" id="r_a800543fef66a73ccc413a1ac91a195bb"><td class="memItemLeft" align="right" valign="top">constexpr const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a800543fef66a73ccc413a1ac91a195bb">ProviderId</a> () const noexcept</td></tr>
<tr class="memdesc:a800543fef66a73ccc413a1ac91a195bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a globally unique identifier (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml" title="Represents a globally unique identifier (GUID).">Guid</a>) assigned to the provider by the service provider vendor. This value is useful for instances where more than one service provider is able to implement a particular protocol. An application can use the ProviderId member to distinguish between providers that might otherwise be indistinguishable.  <br /></td></tr>
<tr class="separator:a800543fef66a73ccc413a1ac91a195bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12277db7baafa47cf8fe2fcf973d719" id="r_ad12277db7baafa47cf8fe2fcf973d719"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad12277db7baafa47cf8fe2fcf973d719">SetProviderId</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;value) noexcept</td></tr>
<tr class="separator:ad12277db7baafa47cf8fe2fcf973d719"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad70d235a81a4e33e145819364c746727" id="r_ad70d235a81a4e33e145819364c746727"><td class="memItemLeft" align="right" valign="top">constexpr DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad70d235a81a4e33e145819364c746727">CatalogEntryId</a> () const noexcept</td></tr>
<tr class="memdesc:ad70d235a81a4e33e145819364c746727"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique identifier assigned by the WS2_32.DLL for each WSAPROTOCOL_INFO structure.  <br /></td></tr>
<tr class="separator:ad70d235a81a4e33e145819364c746727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c962ecde41bc681c88be6ade4a02d0b" id="r_a8c962ecde41bc681c88be6ade4a02d0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c962ecde41bc681c88be6ade4a02d0b">SetCatalogEntryId</a> (DWORD value) noexcept</td></tr>
<tr class="separator:a8c962ecde41bc681c88be6ade4a02d0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8bb6110736810da73cdc3d2320314d3" id="r_ac8bb6110736810da73cdc3d2320314d3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_chain.xhtml">Sockets::ProtocolChain</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac8bb6110736810da73cdc3d2320314d3">ProtocolChain</a> () const noexcept</td></tr>
<tr class="memdesc:ac8bb6110736810da73cdc3d2320314d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a reference to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_chain.xhtml" title="The ProtocolChain associated with the protocol. If the length of the chain is 0, this ProtocolInfo en...">ProtocolChain</a> associated with the protocol.  <br /></td></tr>
<tr class="separator:ac8bb6110736810da73cdc3d2320314d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a509ad1c440bf6b4c6c2a37a569df5b03" id="r_a509ad1c440bf6b4c6c2a37a569df5b03"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a509ad1c440bf6b4c6c2a37a569df5b03">Version</a> () const noexcept</td></tr>
<tr class="memdesc:a509ad1c440bf6b4c6c2a37a569df5b03"><td class="mdescLeft">&#160;</td><td class="mdescRight">The protocol version identifier.  <br /></td></tr>
<tr class="separator:a509ad1c440bf6b4c6c2a37a569df5b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3fb73ea3b0e9f76d0ac7ea412698684" id="r_ad3fb73ea3b0e9f76d0ac7ea412698684"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">Sockets::AddressFamily</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad3fb73ea3b0e9f76d0ac7ea412698684">AddressFamily</a> () const noexcept</td></tr>
<tr class="memdesc:ad3fb73ea3b0e9f76d0ac7ea412698684"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a value to pass as the address family parameter to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function in order to open a socket for this protocol. This value also uniquely defines the structure of a protocol address for a <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Sockets::Address</a> object used by the protocol.  <br /></td></tr>
<tr class="separator:ad3fb73ea3b0e9f76d0ac7ea412698684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af04bfc0fa3f2b787529432620a4bcdc8" id="r_af04bfc0fa3f2b787529432620a4bcdc8"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af04bfc0fa3f2b787529432620a4bcdc8">MaxSocketAddressLength</a> () const noexcept</td></tr>
<tr class="memdesc:af04bfc0fa3f2b787529432620a4bcdc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum address length, in bytes.  <br /></td></tr>
<tr class="separator:af04bfc0fa3f2b787529432620a4bcdc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eba1c9853d786ce6254c9a56c26b9ec" id="r_a6eba1c9853d786ce6254c9a56c26b9ec"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6eba1c9853d786ce6254c9a56c26b9ec">MinSocketAddressLength</a> () const noexcept</td></tr>
<tr class="memdesc:a6eba1c9853d786ce6254c9a56c26b9ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">The minimum address length, in bytes.  <br /></td></tr>
<tr class="separator:a6eba1c9853d786ce6254c9a56c26b9ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1938c63d6e7c08a5d461a1c65036b9c2" id="r_a1938c63d6e7c08a5d461a1c65036b9c2"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a41c18c45f9aec288e310cc192f2e0b22">Sockets::SocketType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1938c63d6e7c08a5d461a1c65036b9c2">SocketType</a> () const noexcept</td></tr>
<tr class="memdesc:a1938c63d6e7c08a5d461a1c65036b9c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the value to pass as the socket type parameter to the to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function in order to open a socket for this protocol.  <br /></td></tr>
<tr class="separator:a1938c63d6e7c08a5d461a1c65036b9c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4153b96008ccb663a5242d766cb7a38d" id="r_a4153b96008ccb663a5242d766cb7a38d"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a07f3d621b4627a07bc6a6e36b0d53eb5">Sockets::ProtocolType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4153b96008ccb663a5242d766cb7a38d">ProtocolType</a> () const noexcept</td></tr>
<tr class="memdesc:a4153b96008ccb663a5242d766cb7a38d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the value to pass as the protocol parameter to the to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function in order to open a socket for this protocol.  <br /></td></tr>
<tr class="separator:a4153b96008ccb663a5242d766cb7a38d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4ec7e26589ff7ea1c8cf2b9f0567256" id="r_ac4ec7e26589ff7ea1c8cf2b9f0567256"><td class="memItemLeft" align="right" valign="top">constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac4ec7e26589ff7ea1c8cf2b9f0567256">ProtocolMaxOffset</a> () const noexcept</td></tr>
<tr class="memdesc:ac4ec7e26589ff7ea1c8cf2b9f0567256"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum value that may be added to the numeric value of the result of the <a class="el" href="#a815deb6a7639e86add30dbc77df8ee21" title="The human-readable name identifying the protocol.">Protocol( )</a> member function when supplying a value for the protocolType parameter of the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function. Not all protocols allow a range of values. When this is the case ProtocolMaxOffset returns is zero.  <br /></td></tr>
<tr class="separator:ac4ec7e26589ff7ea1c8cf2b9f0567256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1496c715e5c67f97c33721bebd644e60" id="r_a1496c715e5c67f97c33721bebd644e60"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#ae467fae8df9e5b5b39153e25cee4e81d">Sockets::NetworkByteOrder</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1496c715e5c67f97c33721bebd644e60">NetworkByteOrder</a> () const noexcept</td></tr>
<tr class="memdesc:a1496c715e5c67f97c33721bebd644e60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a value that indicates either big-endian or little-endian with the values <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#ae467fae8df9e5b5b39153e25cee4e81da2ce7a92ae43763828ac4acb4560c2a5b">NetworkByteOrder::BigEndian</a> and <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#ae467fae8df9e5b5b39153e25cee4e81da3c0ba6b22b526d7fd50c3026435a8c02">NetworkByteOrder::LittleEndian</a> respectively.  <br /></td></tr>
<tr class="separator:a1496c715e5c67f97c33721bebd644e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91dd23339a67dac58fb89f8c97afc1c2" id="r_a91dd23339a67dac58fb89f8c97afc1c2"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a6eeb794e0d6763e8c9f4408cc1b419e0">Sockets::SecurityProtocol</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91dd23339a67dac58fb89f8c97afc1c2">SecurityScheme</a> () const noexcept</td></tr>
<tr class="memdesc:a91dd23339a67dac58fb89f8c97afc1c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of security scheme employed (if any). A value of <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a6eeb794e0d6763e8c9f4408cc1b419e0a6adf97f83acf6453d4a6a4b1070f3754">SecurityProtocol::None</a> is used for protocols that do not incorporate security provisions.  <br /></td></tr>
<tr class="separator:a91dd23339a67dac58fb89f8c97afc1c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9994b063b052baeeb8854d274c8fb1c6" id="r_a9994b063b052baeeb8854d274c8fb1c6"><td class="memItemLeft" align="right" valign="top">constexpr DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9994b063b052baeeb8854d274c8fb1c6">MessageSize</a> () const noexcept</td></tr>
<tr class="separator:a9994b063b052baeeb8854d274c8fb1c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9e3c650019b8a0c038563a86fd9c58" id="r_a7d9e3c650019b8a0c038563a86fd9c58"><td class="memItemLeft" align="right" valign="top">constexpr DWORD&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7d9e3c650019b8a0c038563a86fd9c58">ProviderReserved</a> () const noexcept</td></tr>
<tr class="memdesc:a7d9e3c650019b8a0c038563a86fd9c58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for use by service providers.  <br /></td></tr>
<tr class="separator:a7d9e3c650019b8a0c038563a86fd9c58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a815deb6a7639e86add30dbc77df8ee21" id="r_a815deb6a7639e86add30dbc77df8ee21"><td class="memItemLeft" align="right" valign="top">const wchar_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a815deb6a7639e86add30dbc77df8ee21">Protocol</a> () const noexcept</td></tr>
<tr class="memdesc:a815deb6a7639e86add30dbc77df8ee21"><td class="mdescLeft">&#160;</td><td class="mdescRight">The human-readable name identifying the protocol.  <br /></td></tr>
<tr class="separator:a815deb6a7639e86add30dbc77df8ee21"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a9e8b0aaedbcf65a3f11fc640558d3cdb" id="r_a9e8b0aaedbcf65a3f11fc640558d3cdb"><td class="memItemLeft" align="right" valign="top">WSAPROTOCOL_INFOW&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9e8b0aaedbcf65a3f11fc640558d3cdb">data_</a></td></tr>
<tr class="separator:a9e8b0aaedbcf65a3f11fc640558d3cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Used to store or retrieve complete information for a given protocol. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a41e19aee6cbe0b306ad28cdeac1244f5" name="a41e19aee6cbe0b306ad28cdeac1244f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41e19aee6cbe0b306ad28cdeac1244f5">&#9670;&#160;</a></span>ProtocolInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProtocolInfo </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad3fb73ea3b0e9f76d0ac7ea412698684" name="ad3fb73ea3b0e9f76d0ac7ea412698684"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3fb73ea3b0e9f76d0ac7ea412698684">&#9670;&#160;</a></span>AddressFamily()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">Sockets::AddressFamily</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::AddressFamily </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a value to pass as the address family parameter to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function in order to open a socket for this protocol. This value also uniquely defines the structure of a protocol address for a <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_address.xhtml" title="Provides a generic mechanism for specifying a transport address.">Sockets::Address</a> object used by the protocol. </p>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#af395a3acb64247117d47181425e02e19">Sockets::AddressFamily</a> value for the protocol. </dd></dl>

</div>
</div>
<a id="ad70d235a81a4e33e145819364c746727" name="ad70d235a81a4e33e145819364c746727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad70d235a81a4e33e145819364c746727">&#9670;&#160;</a></span>CatalogEntryId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::Sockets::ProtocolInfo::CatalogEntryId </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A unique identifier assigned by the WS2_32.DLL for each WSAPROTOCOL_INFO structure. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a id="af9dd204351e84d575a522467ff3e6e83" name="af9dd204351e84d575a522467ff3e6e83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9dd204351e84d575a522467ff3e6e83">&#9670;&#160;</a></span>data() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">WSAPROTOCOL_INFOW * Harlinn::Common::Core::IO::Sockets::ProtocolInfo::data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6698793d3d63bd511313e9e0a67ee61" name="aa6698793d3d63bd511313e9e0a67ee61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6698793d3d63bd511313e9e0a67ee61">&#9670;&#160;</a></span>data() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const WSAPROTOCOL_INFOW * Harlinn::Common::Core::IO::Sockets::ProtocolInfo::data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af04bfc0fa3f2b787529432620a4bcdc8" name="af04bfc0fa3f2b787529432620a4bcdc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af04bfc0fa3f2b787529432620a4bcdc8">&#9670;&#160;</a></span>MaxSocketAddressLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::IO::Sockets::ProtocolInfo::MaxSocketAddressLength </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The maximum address length, in bytes. </p>
<dl class="section return"><dt>Returns</dt><dd>The maximum address length, in bytes. </dd></dl>

</div>
</div>
<a id="a9994b063b052baeeb8854d274c8fb1c6" name="a9994b063b052baeeb8854d274c8fb1c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9994b063b052baeeb8854d274c8fb1c6">&#9670;&#160;</a></span>MessageSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::Sockets::ProtocolInfo::MessageSize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The maximum message size, in bytes, supported by the protocol. This is the maximum size that can be sent from any of the host's local interfaces. For protocols that do not support message framing, the actual maximum that can be sent to a given address may be less. There is no standard provision to determine the maximum inbound message size. The following special values are defined. </p>
<ul>
<li>
0: The protocol is stream-oriented and hence the concept of message size is not relevant.  </li>
<li>
1: The maximum outbound (send) message size is dependent on the underlying network MTU (maximum sized transmission unit) and hence cannot be known until after a socket is bound. Applications should use <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#afc8c6abac99666341e346417fdedfcd6" title="Returns the maximum outbound message size for message-oriented sockets supported by the protocol....">Socket::MaxMessageSize( )</a> to retrieve the maximum outbound message size after the socket has been bound to a local address.  </li>
<li>
0xFFFFFFFF: The protocol is message-oriented, but there is no maximum limit to the size of messages that may be transmitted.  </li>
</ul>
<dl class="section return"><dt>Returns</dt><dd>The maximum message size. </dd></dl>

</div>
</div>
<a id="a6eba1c9853d786ce6254c9a56c26b9ec" name="a6eba1c9853d786ce6254c9a56c26b9ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6eba1c9853d786ce6254c9a56c26b9ec">&#9670;&#160;</a></span>MinSocketAddressLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::IO::Sockets::ProtocolInfo::MinSocketAddressLength </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The minimum address length, in bytes. </p>
<dl class="section return"><dt>Returns</dt><dd>The minimum address length, in bytes. </dd></dl>

</div>
</div>
<a id="a1496c715e5c67f97c33721bebd644e60" name="a1496c715e5c67f97c33721bebd644e60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1496c715e5c67f97c33721bebd644e60">&#9670;&#160;</a></span>NetworkByteOrder()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#ae467fae8df9e5b5b39153e25cee4e81d">Sockets::NetworkByteOrder</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::NetworkByteOrder </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a value that indicates either big-endian or little-endian with the values <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#ae467fae8df9e5b5b39153e25cee4e81da2ce7a92ae43763828ac4acb4560c2a5b">NetworkByteOrder::BigEndian</a> and <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#ae467fae8df9e5b5b39153e25cee4e81da3c0ba6b22b526d7fd50c3026435a8c02">NetworkByteOrder::LittleEndian</a> respectively. </p>
<dl class="section return"><dt>Returns</dt><dd>The network byte order for the protocol. </dd></dl>

</div>
</div>
<a id="a815deb6a7639e86add30dbc77df8ee21" name="a815deb6a7639e86add30dbc77df8ee21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a815deb6a7639e86add30dbc77df8ee21">&#9670;&#160;</a></span>Protocol()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const wchar_t * Harlinn::Common::Core::IO::Sockets::ProtocolInfo::Protocol </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The human-readable name identifying the protocol. </p>
<dl class="section return"><dt>Returns</dt><dd>The name of the protocol. </dd></dl>

</div>
</div>
<a id="ac8bb6110736810da73cdc3d2320314d3" name="ac8bb6110736810da73cdc3d2320314d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8bb6110736810da73cdc3d2320314d3">&#9670;&#160;</a></span>ProtocolChain()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_chain.xhtml">Sockets::ProtocolChain</a> &amp; Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProtocolChain </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a reference to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_chain.xhtml" title="The ProtocolChain associated with the protocol. If the length of the chain is 0, this ProtocolInfo en...">ProtocolChain</a> associated with the protocol. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_chain.xhtml" title="The ProtocolChain associated with the protocol. If the length of the chain is 0, this ProtocolInfo en...">ProtocolChain</a>. </dd></dl>

</div>
</div>
<a id="ac4ec7e26589ff7ea1c8cf2b9f0567256" name="ac4ec7e26589ff7ea1c8cf2b9f0567256"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4ec7e26589ff7ea1c8cf2b9f0567256">&#9670;&#160;</a></span>ProtocolMaxOffset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProtocolMaxOffset </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The maximum value that may be added to the numeric value of the result of the <a class="el" href="#a815deb6a7639e86add30dbc77df8ee21" title="The human-readable name identifying the protocol.">Protocol( )</a> member function when supplying a value for the protocolType parameter of the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function. Not all protocols allow a range of values. When this is the case ProtocolMaxOffset returns is zero. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a id="a4153b96008ccb663a5242d766cb7a38d" name="a4153b96008ccb663a5242d766cb7a38d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4153b96008ccb663a5242d766cb7a38d">&#9670;&#160;</a></span>ProtocolType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a07f3d621b4627a07bc6a6e36b0d53eb5">Sockets::ProtocolType</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProtocolType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the value to pass as the protocol parameter to the to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function in order to open a socket for this protocol. </p>
<dl class="section return"><dt>Returns</dt><dd>The protocol value for the protocol. </dd></dl>

</div>
</div>
<a id="a6fcb161ac6509167bfcb69ad8c6748c9" name="a6fcb161ac6509167bfcb69ad8c6748c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fcb161ac6509167bfcb69ad8c6748c9">&#9670;&#160;</a></span>ProviderFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#abde02eabe1ba7437e30e11da3c03c775">Sockets::ProviderFlags</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProviderFlags </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a set of flags that provides information on how this protocol is represented in the Winsock catalog. </p>
<dl class="section return"><dt>Returns</dt><dd>A bit-mask of values from the <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#abde02eabe1ba7437e30e11da3c03c775">Sockets::ProviderFlags</a> enumeration. </dd></dl>

</div>
</div>
<a id="a800543fef66a73ccc413a1ac91a195bb" name="a800543fef66a73ccc413a1ac91a195bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a800543fef66a73ccc413a1ac91a195bb">&#9670;&#160;</a></span>ProviderId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp; Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProviderId </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a globally unique identifier (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml" title="Represents a globally unique identifier (GUID).">Guid</a>) assigned to the provider by the service provider vendor. This value is useful for instances where more than one service provider is able to implement a particular protocol. An application can use the ProviderId member to distinguish between providers that might otherwise be indistinguishable. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a id="a7d9e3c650019b8a0c038563a86fd9c58" name="a7d9e3c650019b8a0c038563a86fd9c58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d9e3c650019b8a0c038563a86fd9c58">&#9670;&#160;</a></span>ProviderReserved()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ProviderReserved </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for use by service providers. </p>

</div>
</div>
<a id="a91dd23339a67dac58fb89f8c97afc1c2" name="a91dd23339a67dac58fb89f8c97afc1c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91dd23339a67dac58fb89f8c97afc1c2">&#9670;&#160;</a></span>SecurityScheme()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a6eeb794e0d6763e8c9f4408cc1b419e0">Sockets::SecurityProtocol</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SecurityScheme </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The type of security scheme employed (if any). A value of <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a6eeb794e0d6763e8c9f4408cc1b419e0a6adf97f83acf6453d4a6a4b1070f3754">SecurityProtocol::None</a> is used for protocols that do not incorporate security provisions. </p>
<dl class="section return"><dt>Returns</dt><dd>The type of security scheme </dd></dl>

</div>
</div>
<a id="aaecc9dfbfb2d790bee697e00beb06181" name="aaecc9dfbfb2d790bee697e00beb06181"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaecc9dfbfb2d790bee697e00beb06181">&#9670;&#160;</a></span>ServiceFlags1()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a9c5e107a7ef19d3e220621a076c8b33a">Sockets::ServiceFlags1</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ServiceFlags1 </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a bit-mask that describes the services provided by the protocol. </p>
<dl class="section return"><dt>Returns</dt><dd>A bit-mask of values from the <code><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a9c5e107a7ef19d3e220621a076c8b33a">Sockets::ServiceFlags1</a></code> enumeration. </dd></dl>

</div>
</div>
<a id="aa41a8233f1904fd10363a2582b5ccf5d" name="aa41a8233f1904fd10363a2582b5ccf5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa41a8233f1904fd10363a2582b5ccf5d">&#9670;&#160;</a></span>ServiceFlags2()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ServiceFlags2 </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for additional protocol-attribute definitions. </p>

</div>
</div>
<a id="a8a949713b22ad194698ca2e28d48c384" name="a8a949713b22ad194698ca2e28d48c384"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a949713b22ad194698ca2e28d48c384">&#9670;&#160;</a></span>ServiceFlags3()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ServiceFlags3 </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for additional protocol-attribute definitions. </p>

</div>
</div>
<a id="a513a50f825a4f11c5a35c4322e2487fe" name="a513a50f825a4f11c5a35c4322e2487fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a513a50f825a4f11c5a35c4322e2487fe">&#9670;&#160;</a></span>ServiceFlags4()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DWORD Harlinn::Common::Core::IO::Sockets::ProtocolInfo::ServiceFlags4 </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for additional protocol-attribute definitions. </p>

</div>
</div>
<a id="a8c962ecde41bc681c88be6ade4a02d0b" name="a8c962ecde41bc681c88be6ade4a02d0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c962ecde41bc681c88be6ade4a02d0b">&#9670;&#160;</a></span>SetCatalogEntryId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetCatalogEntryId </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac81ec04f0f54be434f91146b0ed47d5f" name="ac81ec04f0f54be434f91146b0ed47d5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac81ec04f0f54be434f91146b0ed47d5f">&#9670;&#160;</a></span>SetProviderFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetProviderFlags </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#abde02eabe1ba7437e30e11da3c03c775">Sockets::ProviderFlags</a></td>          <td class="paramname"><span class="paramname"><em>flags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad12277db7baafa47cf8fe2fcf973d719" name="ad12277db7baafa47cf8fe2fcf973d719"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad12277db7baafa47cf8fe2fcf973d719">&#9670;&#160;</a></span>SetProviderId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetProviderId </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_guid.xhtml">Guid</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a416112f67034001f5db5c4407295f025" name="a416112f67034001f5db5c4407295f025"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a416112f67034001f5db5c4407295f025">&#9670;&#160;</a></span>SetServiceFlags1()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetServiceFlags1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a9c5e107a7ef19d3e220621a076c8b33a">Sockets::ServiceFlags1</a></td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a bit-mask that describes the services provided by the protocol. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>A bit-mask of values from the <code><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a9c5e107a7ef19d3e220621a076c8b33a">Sockets::ServiceFlags1</a></code> enumeration. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3044d8d358e28db50531b66ae007b84e" name="a3044d8d358e28db50531b66ae007b84e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3044d8d358e28db50531b66ae007b84e">&#9670;&#160;</a></span>SetServiceFlags2()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetServiceFlags2 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for additional protocol-attribute definitions. </p>

</div>
</div>
<a id="a3070aea29ed37bc4adb043e4dc82844e" name="a3070aea29ed37bc4adb043e4dc82844e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3070aea29ed37bc4adb043e4dc82844e">&#9670;&#160;</a></span>SetServiceFlags3()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetServiceFlags3 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for additional protocol-attribute definitions. </p>

</div>
</div>
<a id="a92fb26bb616b1e5977f20ec68758e8b3" name="a92fb26bb616b1e5977f20ec68758e8b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92fb26bb616b1e5977f20ec68758e8b3">&#9670;&#160;</a></span>SetServiceFlags4()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SetServiceFlags4 </td>
          <td>(</td>
          <td class="paramtype">DWORD</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reserved for additional protocol-attribute definitions. </p>

</div>
</div>
<a id="a1938c63d6e7c08a5d461a1c65036b9c2" name="a1938c63d6e7c08a5d461a1c65036b9c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1938c63d6e7c08a5d461a1c65036b9c2">&#9670;&#160;</a></span>SocketType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml#a41c18c45f9aec288e310cc192f2e0b22">Sockets::SocketType</a> Harlinn::Common::Core::IO::Sockets::ProtocolInfo::SocketType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the value to pass as the socket type parameter to the to the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml" title="Represents a socket descriptor that is bound to a specific transport-service provider.">Socket</a> constructor or the <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_socket.xhtml#a6d3a17c5c2324de7f37b005d0c5d53f1">Socket::Open</a> function in order to open a socket for this protocol. </p>
<dl class="section return"><dt>Returns</dt><dd>The socket type value for the protocol. </dd></dl>

</div>
</div>
<a id="a509ad1c440bf6b4c6c2a37a569df5b03" name="a509ad1c440bf6b4c6c2a37a569df5b03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a509ad1c440bf6b4c6c2a37a569df5b03">&#9670;&#160;</a></span>Version()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Harlinn::Common::Core::IO::Sockets::ProtocolInfo::Version </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The protocol version identifier. </p>
<dl class="section return"><dt>Returns</dt><dd>The protocol version identifier </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a9e8b0aaedbcf65a3f11fc640558d3cdb" name="a9e8b0aaedbcf65a3f11fc640558d3cdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e8b0aaedbcf65a3f11fc640558d3cdb">&#9670;&#160;</a></span>data_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">WSAPROTOCOL_INFOW Harlinn::Common::Core::IO::Sockets::ProtocolInfo::data_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_socket_8h.xhtml">HCCSocket.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o.xhtml">IO</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets.xhtml">Sockets</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_i_o_1_1_sockets_1_1_protocol_info.xhtml">ProtocolInfo</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
