<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase&lt; DerivedT, InterfaceT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase&lt; DerivedT, InterfaceT &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Basic implementation of ID2D1SimplifiedGeometrySink.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;HWGraphics.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase&lt; DerivedT, InterfaceT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base__inherit__graph.svg" width="1447" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase&lt; DerivedT, InterfaceT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base__coll__graph.svg" width="571" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af778cf1840bbf080f2b0f5cf0e52172a" id="r_af778cf1840bbf080f2b0f5cf0e52172a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af778cf1840bbf080f2b0f5cf0e52172a">Base</a> = IUnknownImplementation&lt;<a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt;DerivedT, InterfaceT&gt;, ID2D1SimplifiedGeometrySink, InterfaceT&gt;</td></tr>
<tr class="separator:af778cf1840bbf080f2b0f5cf0e52172a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b3443a6b05a89059d90a21f78972347" id="r_a1b3443a6b05a89059d90a21f78972347"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1b3443a6b05a89059d90a21f78972347">DerivedType</a> = DerivedT</td></tr>
<tr class="separator:a1b3443a6b05a89059d90a21f78972347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a621f24ac15bc29bf0408463e8c3a7f2a" id="r_a621f24ac15bc29bf0408463e8c3a7f2a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a621f24ac15bc29bf0408463e8c3a7f2a">InterfaceType</a> = InterfaceT</td></tr>
<tr class="separator:a621f24ac15bc29bf0408463e8c3a7f2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aaf858ef2b0b65cca347c349b7c6f38a6" id="r_aaf858ef2b0b65cca347c349b7c6f38a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf858ef2b0b65cca347c349b7c6f38a6">HandleSetFillMode</a> (D2D1_FILL_MODE fillMode)</td></tr>
<tr class="separator:aaf858ef2b0b65cca347c349b7c6f38a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0c9ecbae5efc8782f0864c8e45882f2" id="r_aa0c9ecbae5efc8782f0864c8e45882f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa0c9ecbae5efc8782f0864c8e45882f2">HandleSetSegmentFlags</a> (D2D1_PATH_SEGMENT vertexFlags)</td></tr>
<tr class="separator:aa0c9ecbae5efc8782f0864c8e45882f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3fba84e1acf55bc6419617e968ce19b" id="r_aa3fba84e1acf55bc6419617e968ce19b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa3fba84e1acf55bc6419617e968ce19b">HandleBeginFigure</a> (D2D1_POINT_2F startPoint, D2D1_FIGURE_BEGIN figureBegin)</td></tr>
<tr class="separator:aa3fba84e1acf55bc6419617e968ce19b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4e106249304c647b2affe1f3dc4750a" id="r_ad4e106249304c647b2affe1f3dc4750a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad4e106249304c647b2affe1f3dc4750a">HandleAddLines</a> (_In_reads_(pointsCount) CONST D2D1_POINT_2F *points, UINT32 pointsCount)</td></tr>
<tr class="separator:ad4e106249304c647b2affe1f3dc4750a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5c81a6963900023892b2f70afffb330" id="r_ae5c81a6963900023892b2f70afffb330"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae5c81a6963900023892b2f70afffb330">HandleAddBeziers</a> (_In_reads_(beziersCount) CONST D2D1_BEZIER_SEGMENT *beziers, UINT32 beziersCount)</td></tr>
<tr class="separator:ae5c81a6963900023892b2f70afffb330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3d02af37d65744084001d3e032993de" id="r_ae3d02af37d65744084001d3e032993de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae3d02af37d65744084001d3e032993de">HandleEndFigure</a> (D2D1_FIGURE_END figureEnd)</td></tr>
<tr class="separator:ae3d02af37d65744084001d3e032993de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a22693b608d87f22f8a30f3f25d70f1" id="r_a4a22693b608d87f22f8a30f3f25d70f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4a22693b608d87f22f8a30f3f25d70f1">HandleClose</a> ()</td></tr>
<tr class="separator:a4a22693b608d87f22f8a30f3f25d70f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a66e8eada3e6d171cf3af4f42075401aa" id="r_a66e8eada3e6d171cf3af4f42075401aa"><td class="memItemLeft" align="right" valign="top">virtual void STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a66e8eada3e6d171cf3af4f42075401aa">SetFillMode</a> (D2D1_FILL_MODE fillMode) override</td></tr>
<tr class="separator:a66e8eada3e6d171cf3af4f42075401aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a5fd451ea16b4ba0e57a238a9f52c6" id="r_a77a5fd451ea16b4ba0e57a238a9f52c6"><td class="memItemLeft" align="right" valign="top">virtual void STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a77a5fd451ea16b4ba0e57a238a9f52c6">SetSegmentFlags</a> (D2D1_PATH_SEGMENT vertexFlags) override</td></tr>
<tr class="separator:a77a5fd451ea16b4ba0e57a238a9f52c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6f2514593e343c35c252ecda8241f5b" id="r_ab6f2514593e343c35c252ecda8241f5b"><td class="memItemLeft" align="right" valign="top">virtual void STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6f2514593e343c35c252ecda8241f5b">BeginFigure</a> (D2D1_POINT_2F startPoint, D2D1_FIGURE_BEGIN figureBegin) override</td></tr>
<tr class="separator:ab6f2514593e343c35c252ecda8241f5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8363e307cce5883994973c4fcc1e8a57" id="r_a8363e307cce5883994973c4fcc1e8a57"><td class="memItemLeft" align="right" valign="top">virtual void STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8363e307cce5883994973c4fcc1e8a57">AddLines</a> (_In_reads_(pointsCount) CONST D2D1_POINT_2F *points, UINT32 pointsCount) override</td></tr>
<tr class="separator:a8363e307cce5883994973c4fcc1e8a57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88034c31ec72fc04b2047c06a67fdf2a" id="r_a88034c31ec72fc04b2047c06a67fdf2a"><td class="memItemLeft" align="right" valign="top">virtual void STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a88034c31ec72fc04b2047c06a67fdf2a">AddBeziers</a> (_In_reads_(beziersCount) CONST D2D1_BEZIER_SEGMENT *beziers, UINT32 beziersCount) override</td></tr>
<tr class="separator:a88034c31ec72fc04b2047c06a67fdf2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bf20ef80175d2ffca79491784b7e34c" id="r_a8bf20ef80175d2ffca79491784b7e34c"><td class="memItemLeft" align="right" valign="top">virtual void STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8bf20ef80175d2ffca79491784b7e34c">EndFigure</a> (D2D1_FIGURE_END figureEnd) override</td></tr>
<tr class="separator:a8bf20ef80175d2ffca79491784b7e34c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6511b18a8e48ced813f0c95ab9d85559" id="r_a6511b18a8e48ced813f0c95ab9d85559"><td class="memItemLeft" align="right" valign="top">virtual HRESULT STDAPICALLTYPE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6511b18a8e48ced813f0c95ab9d85559">Close</a> () override</td></tr>
<tr class="separator:a6511b18a8e48ced813f0c95ab9d85559"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename DerivedT, typename InterfaceT = ID2D1SimplifiedGeometrySink&gt;<br />
class Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase&lt; DerivedT, InterfaceT &gt;</div><p>Basic implementation of ID2D1SimplifiedGeometrySink. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">DerivedT</td><td></td></tr>
    <tr><td class="paramname">InterfaceT</td><td></td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="af778cf1840bbf080f2b0f5cf0e52172a" name="af778cf1840bbf080f2b0f5cf0e52172a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af778cf1840bbf080f2b0f5cf0e52172a">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::Base = IUnknownImplementation&lt;<a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt;DerivedT, InterfaceT&gt;, ID2D1SimplifiedGeometrySink, InterfaceT&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1b3443a6b05a89059d90a21f78972347" name="a1b3443a6b05a89059d90a21f78972347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b3443a6b05a89059d90a21f78972347">&#9670;&#160;</a></span>DerivedType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::DerivedType = DerivedT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a621f24ac15bc29bf0408463e8c3a7f2a" name="a621f24ac15bc29bf0408463e8c3a7f2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a621f24ac15bc29bf0408463e8c3a7f2a">&#9670;&#160;</a></span>InterfaceType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::InterfaceType = InterfaceT</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a88034c31ec72fc04b2047c06a67fdf2a" name="a88034c31ec72fc04b2047c06a67fdf2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88034c31ec72fc04b2047c06a67fdf2a">&#9670;&#160;</a></span>AddBeziers()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::AddBeziers </td>
          <td>(</td>
          <td class="paramtype">_In_reads_(beziersCount) CONST D2D1_BEZIER_SEGMENT *</td>          <td class="paramname"><span class="paramname"><em>beziers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>beziersCount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8363e307cce5883994973c4fcc1e8a57" name="a8363e307cce5883994973c4fcc1e8a57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8363e307cce5883994973c4fcc1e8a57">&#9670;&#160;</a></span>AddLines()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::AddLines </td>
          <td>(</td>
          <td class="paramtype">_In_reads_(pointsCount) CONST D2D1_POINT_2F *</td>          <td class="paramname"><span class="paramname"><em>points</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>pointsCount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab6f2514593e343c35c252ecda8241f5b" name="ab6f2514593e343c35c252ecda8241f5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6f2514593e343c35c252ecda8241f5b">&#9670;&#160;</a></span>BeginFigure()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::BeginFigure </td>
          <td>(</td>
          <td class="paramtype">D2D1_POINT_2F</td>          <td class="paramname"><span class="paramname"><em>startPoint</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D2D1_FIGURE_BEGIN</td>          <td class="paramname"><span class="paramname"><em>figureBegin</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6511b18a8e48ced813f0c95ab9d85559" name="a6511b18a8e48ced813f0c95ab9d85559"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6511b18a8e48ced813f0c95ab9d85559">&#9670;&#160;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual HRESULT STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::Close </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8bf20ef80175d2ffca79491784b7e34c" name="a8bf20ef80175d2ffca79491784b7e34c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bf20ef80175d2ffca79491784b7e34c">&#9670;&#160;</a></span>EndFigure()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::EndFigure </td>
          <td>(</td>
          <td class="paramtype">D2D1_FIGURE_END</td>          <td class="paramname"><span class="paramname"><em>figureEnd</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5c81a6963900023892b2f70afffb330" name="ae5c81a6963900023892b2f70afffb330"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5c81a6963900023892b2f70afffb330">&#9670;&#160;</a></span>HandleAddBeziers()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleAddBeziers </td>
          <td>(</td>
          <td class="paramtype">_In_reads_(beziersCount) CONST D2D1_BEZIER_SEGMENT *</td>          <td class="paramname"><span class="paramname"><em>beziers</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>beziersCount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad4e106249304c647b2affe1f3dc4750a" name="ad4e106249304c647b2affe1f3dc4750a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4e106249304c647b2affe1f3dc4750a">&#9670;&#160;</a></span>HandleAddLines()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleAddLines </td>
          <td>(</td>
          <td class="paramtype">_In_reads_(pointsCount) CONST D2D1_POINT_2F *</td>          <td class="paramname"><span class="paramname"><em>points</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UINT32</td>          <td class="paramname"><span class="paramname"><em>pointsCount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa3fba84e1acf55bc6419617e968ce19b" name="aa3fba84e1acf55bc6419617e968ce19b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3fba84e1acf55bc6419617e968ce19b">&#9670;&#160;</a></span>HandleBeginFigure()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleBeginFigure </td>
          <td>(</td>
          <td class="paramtype">D2D1_POINT_2F</td>          <td class="paramname"><span class="paramname"><em>startPoint</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D2D1_FIGURE_BEGIN</td>          <td class="paramname"><span class="paramname"><em>figureBegin</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4a22693b608d87f22f8a30f3f25d70f1" name="a4a22693b608d87f22f8a30f3f25d70f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a22693b608d87f22f8a30f3f25d70f1">&#9670;&#160;</a></span>HandleClose()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleClose </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae3d02af37d65744084001d3e032993de" name="ae3d02af37d65744084001d3e032993de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3d02af37d65744084001d3e032993de">&#9670;&#160;</a></span>HandleEndFigure()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleEndFigure </td>
          <td>(</td>
          <td class="paramtype">D2D1_FIGURE_END</td>          <td class="paramname"><span class="paramname"><em>figureEnd</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf858ef2b0b65cca347c349b7c6f38a6" name="aaf858ef2b0b65cca347c349b7c6f38a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf858ef2b0b65cca347c349b7c6f38a6">&#9670;&#160;</a></span>HandleSetFillMode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleSetFillMode </td>
          <td>(</td>
          <td class="paramtype">D2D1_FILL_MODE</td>          <td class="paramname"><span class="paramname"><em>fillMode</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa0c9ecbae5efc8782f0864c8e45882f2" name="aa0c9ecbae5efc8782f0864c8e45882f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0c9ecbae5efc8782f0864c8e45882f2">&#9670;&#160;</a></span>HandleSetSegmentFlags()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::HandleSetSegmentFlags </td>
          <td>(</td>
          <td class="paramtype">D2D1_PATH_SEGMENT</td>          <td class="paramname"><span class="paramname"><em>vertexFlags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a66e8eada3e6d171cf3af4f42075401aa" name="a66e8eada3e6d171cf3af4f42075401aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66e8eada3e6d171cf3af4f42075401aa">&#9670;&#160;</a></span>SetFillMode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::SetFillMode </td>
          <td>(</td>
          <td class="paramtype">D2D1_FILL_MODE</td>          <td class="paramname"><span class="paramname"><em>fillMode</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a77a5fd451ea16b4ba0e57a238a9f52c6" name="a77a5fd451ea16b4ba0e57a238a9f52c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77a5fd451ea16b4ba0e57a238a9f52c6">&#9670;&#160;</a></span>SetSegmentFlags()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename DerivedT , typename InterfaceT  = ID2D1SimplifiedGeometrySink&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void STDAPICALLTYPE <a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">Harlinn::Windows::Graphics::ID2D1SimplifiedGeometrySinkImplementationBase</a>&lt; DerivedT, InterfaceT &gt;::SetSegmentFlags </td>
          <td>(</td>
          <td class="paramtype">D2D1_PATH_SEGMENT</td>          <td class="paramname"><span class="paramname"><em>vertexFlags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_w_graphics_8h.xhtml">HWGraphics.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows.xhtml">Windows</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_windows_1_1_graphics.xhtml">Graphics</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_windows_1_1_graphics_1_1_i_d2_d1_simplified_geometry_sink_implementation_base.xhtml">ID2D1SimplifiedGeometrySinkImplementationBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
