<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Tuple&lt; T, Types... &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_tuple_3_01_t_00_01_types_8_8_8_01_4.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_tuple_3_01_t_00_01_types_8_8_8_01_4-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Tuple&lt; T, Types... &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCTuple.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Tuple&lt; T, Types... &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_tuple_3_01_t_00_01_types_8_8_8_01_4__inherit__graph.svg" width="195" height="272"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::Tuple&lt; T, Types... &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_tuple_3_01_t_00_01_types_8_8_8_01_4__coll__graph.svg" width="195" height="272"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aca31937e5796ff1044f2cbc3feca631b" id="r_aca31937e5796ff1044f2cbc3feca631b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca31937e5796ff1044f2cbc3feca631b">Base</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base.xhtml">Internal::TupleBase</a>&lt;0, T, Types...&gt;</td></tr>
<tr class="separator:aca31937e5796ff1044f2cbc3feca631b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af38e17a987b2518f31030f14ab10b8be" id="r_af38e17a987b2518f31030f14ab10b8be"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af38e17a987b2518f31030f14ab10b8be">Tuple</a> () noexcept</td></tr>
<tr class="separator:af38e17a987b2518f31030f14ab10b8be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8593a4b85e295f75eff617425e57c9d1" id="r_a8593a4b85e295f75eff617425e57c9d1"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8593a4b85e295f75eff617425e57c9d1">Tuple</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;other) noexcept=default</td></tr>
<tr class="separator:a8593a4b85e295f75eff617425e57c9d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af329a66c1c08eccebe3d7d224c8037b5" id="r_af329a66c1c08eccebe3d7d224c8037b5"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af329a66c1c08eccebe3d7d224c8037b5">Tuple</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;&amp;other) noexcept=default</td></tr>
<tr class="separator:af329a66c1c08eccebe3d7d224c8037b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668d0954727783b5959c643ad9228e90" id="r_a668d0954727783b5959c643ad9228e90"><td class="memTemplParams" colspan="2">template&lt;typename Arg , typename... Args&gt; <br />
requires ( std::is_same_v&lt;std::remove_cvref_t&lt;Arg&gt;, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt;T, Types...&gt;&gt; == false )</td></tr>
<tr class="memitem:a668d0954727783b5959c643ad9228e90"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a668d0954727783b5959c643ad9228e90">Tuple</a> (Arg &amp;&amp;arg, Args &amp;&amp;... args) noexcept</td></tr>
<tr class="separator:a668d0954727783b5959c643ad9228e90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a125fa99dd43e1c644a5e680b70a8ca26" id="r_a125fa99dd43e1c644a5e680b70a8ca26"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a125fa99dd43e1c644a5e680b70a8ca26">operator=</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;other)=default</td></tr>
<tr class="separator:a125fa99dd43e1c644a5e680b70a8ca26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad39bfccdeafa2732e8abb57f5db2c8ae" id="r_ad39bfccdeafa2732e8abb57f5db2c8ae"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad39bfccdeafa2732e8abb57f5db2c8ae">operator=</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;&amp;other) noexcept=default</td></tr>
<tr class="separator:ad39bfccdeafa2732e8abb57f5db2c8ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a12b3e324762db44f25e6cbc5cee8b5" id="r_a9a12b3e324762db44f25e6cbc5cee8b5"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a12b3e324762db44f25e6cbc5cee8b5">operator&lt;=&gt;</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp;) const =default</td></tr>
<tr class="separator:a9a12b3e324762db44f25e6cbc5cee8b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa8264a47b555d8cca8d8a7c00177728" id="r_aaa8264a47b555d8cca8d8a7c00177728"><td class="memItemLeft" align="right" valign="top">constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa8264a47b555d8cca8d8a7c00177728">size</a> () const noexcept</td></tr>
<tr class="separator:aaa8264a47b555d8cca8d8a7c00177728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1213970046b219e714f16d7e9ffd0b76" id="r_a1213970046b219e714f16d7e9ffd0b76"><td class="memItemLeft" align="right" valign="top">constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1213970046b219e714f16d7e9ffd0b76">ByteSize</a> () const noexcept</td></tr>
<tr class="separator:a1213970046b219e714f16d7e9ffd0b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base.xhtml">Harlinn::Common::Core::Internal::TupleBase&lt; 0, T, Types... &gt;</a></td></tr>
<tr class="memitem:a561b6a93773070c13bfdcf37ab43ec22 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base" id="r_a561b6a93773070c13bfdcf37ab43ec22"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base.xhtml#a561b6a93773070c13bfdcf37ab43ec22">operator&lt;=&gt;</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base.xhtml">TupleBase</a> &amp;) const=default</td></tr>
<tr class="separator:a561b6a93773070c13bfdcf37ab43ec22 inherit pub_methods_class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a266ea0b1794467b2efc626f5f01957b6" id="r_a266ea0b1794467b2efc626f5f01957b6"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a266ea0b1794467b2efc626f5f01957b6">Size</a> = 1 + sizeof...( Types )</td></tr>
<tr class="separator:a266ea0b1794467b2efc626f5f01957b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aca31937e5796ff1044f2cbc3feca631b" name="aca31937e5796ff1044f2cbc3feca631b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca31937e5796ff1044f2cbc3feca631b">&#9670;&#160;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::Base = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_internal_1_1_tuple_base.xhtml">Internal::TupleBase</a>&lt;0, T, Types...&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af38e17a987b2518f31030f14ab10b8be" name="af38e17a987b2518f31030f14ab10b8be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af38e17a987b2518f31030f14ab10b8be">&#9670;&#160;</a></span>Tuple() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::Tuple </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8593a4b85e295f75eff617425e57c9d1" name="a8593a4b85e295f75eff617425e57c9d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8593a4b85e295f75eff617425e57c9d1">&#9670;&#160;</a></span>Tuple() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::Tuple </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; T, Types... &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af329a66c1c08eccebe3d7d224c8037b5" name="af329a66c1c08eccebe3d7d224c8037b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af329a66c1c08eccebe3d7d224c8037b5">&#9670;&#160;</a></span>Tuple() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::Tuple </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; T, Types... &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a668d0954727783b5959c643ad9228e90" name="a668d0954727783b5959c643ad9228e90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a668d0954727783b5959c643ad9228e90">&#9670;&#160;</a></span>Tuple() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<div class="memtemplate">
template&lt;typename Arg , typename... Args&gt; <br />
requires ( std::is_same_v&lt;std::remove_cvref_t&lt;Arg&gt;, <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt;T, Types...&gt;&gt; == false )</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::Tuple </td>
          <td>(</td>
          <td class="paramtype">Arg &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>arg</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...</td>          <td class="paramname"><span class="paramname"><em>args</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1213970046b219e714f16d7e9ffd0b76" name="a1213970046b219e714f16d7e9ffd0b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1213970046b219e714f16d7e9ffd0b76">&#9670;&#160;</a></span>ByteSize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::ByteSize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9a12b3e324762db44f25e6cbc5cee8b5" name="a9a12b3e324762db44f25e6cbc5cee8b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a12b3e324762db44f25e6cbc5cee8b5">&#9670;&#160;</a></span>operator&lt;=&gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::operator&lt;=&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; T, Types... &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a125fa99dd43e1c644a5e680b70a8ca26" name="a125fa99dd43e1c644a5e680b70a8ca26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a125fa99dd43e1c644a5e680b70a8ca26">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; T, Types... &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad39bfccdeafa2732e8abb57f5db2c8ae" name="ad39bfccdeafa2732e8abb57f5db2c8ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad39bfccdeafa2732e8abb57f5db2c8ae">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a> &amp; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Tuple</a>&lt; T, Types... &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa8264a47b555d8cca8d8a7c00177728" name="aaa8264a47b555d8cca8d8a7c00177728"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa8264a47b555d8cca8d8a7c00177728">&#9670;&#160;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::size </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a266ea0b1794467b2efc626f5f01957b6" name="a266ea0b1794467b2efc626f5f01957b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a266ea0b1794467b2efc626f5f01957b6">&#9670;&#160;</a></span>Size</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename ... Types&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple.xhtml">Harlinn::Common::Core::Tuple</a>&lt; T, Types... &gt;::Size = 1 + sizeof...( Types )</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_tuple_8h.xhtml">HCCTuple.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_tuple_3_01_t_00_01_types_8_8_8_01_4.xhtml">Tuple&lt; T, Types... &gt;</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
