<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Harlinn.Windows: Harlinn::Common::Core::Ese::InitializedInstanceOptions Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Harlinn.Windows<span id="projectnumber">&#160;0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Harlinn::Common::Core::Ese::InitializedInstanceOptions Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;HCCEseOptions.h&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Harlinn::Common::Core::Ese::InitializedInstanceOptions:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options__inherit__graph.svg" width="220" height="154"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Harlinn::Common::Core::Ese::InitializedInstanceOptions:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options__coll__graph.svg" width="220" height="154"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a99e127b16fc50e77e322fe45e1253e95" id="r_a99e127b16fc50e77e322fe45e1253e95"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a99e127b16fc50e77e322fe45e1253e95">Element</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_xml_1_1_dom_1_1_element.xhtml">Xml::Dom::Element</a></td></tr>
<tr class="separator:a99e127b16fc50e77e322fe45e1253e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2073d220475c0b2413acd1c28e6c1e5d" id="r_a2073d220475c0b2413acd1c28e6c1e5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2073d220475c0b2413acd1c28e6c1e5d">InitializedInstanceOptions</a> ()</td></tr>
<tr class="separator:a2073d220475c0b2413acd1c28e6c1e5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783c48ac0911429c3f279d9f382e0218" id="r_a783c48ac0911429c3f279d9f382e0218"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a783c48ac0911429c3f279d9f382e0218">ReadFrom</a> (const <a class="el" href="#a99e127b16fc50e77e322fe45e1253e95">Element</a> &amp;element)</td></tr>
<tr class="separator:a783c48ac0911429c3f279d9f382e0218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac16b967f10cb1e451925b0920a6ae2d5" id="r_ac16b967f10cb1e451925b0920a6ae2d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac16b967f10cb1e451925b0920a6ae2d5">ApplyTo</a> (const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_instance.xhtml">Ese::Instance</a> &amp;instance)</td></tr>
<tr class="separator:ac16b967f10cb1e451925b0920a6ae2d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca4e14560bdedb1967aa8762a18495ef" id="r_aca4e14560bdedb1967aa8762a18495ef"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca4e14560bdedb1967aa8762a18495ef">SnapshotTimeout</a> () const</td></tr>
<tr class="separator:aca4e14560bdedb1967aa8762a18495ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af93f3ece96eff78fdba67ae814f4dd90" id="r_af93f3ece96eff78fdba67ae814f4dd90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af93f3ece96eff78fdba67ae814f4dd90">SetSnapshotTimeout</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> snapshotTimeout)</td></tr>
<tr class="separator:af93f3ece96eff78fdba67ae814f4dd90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4839b27212e13b002258f381d62836fb" id="r_a4839b27212e13b002258f381d62836fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4839b27212e13b002258f381d62836fb">SetSnapshotTimeout</a> (const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp;snapshotTimeout)</td></tr>
<tr class="separator:a4839b27212e13b002258f381d62836fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab768edc6dab7dc550d240572d4c2f7d9" id="r_ab768edc6dab7dc550d240572d4c2f7d9"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab768edc6dab7dc550d240572d4c2f7d9">DbExtensionSize</a> () const</td></tr>
<tr class="separator:ab768edc6dab7dc550d240572d4c2f7d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2208ca10d52f126df6eb629dd006aefe" id="r_a2208ca10d52f126df6eb629dd006aefe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2208ca10d52f126df6eb629dd006aefe">SetDbExtensionSize</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> dbExtensionSize)</td></tr>
<tr class="separator:a2208ca10d52f126df6eb629dd006aefe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05489a8b9215888433113983096b85fc" id="r_a05489a8b9215888433113983096b85fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a05489a8b9215888433113983096b85fc">SetDbExtensionSize</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp;dbExtensionSize)</td></tr>
<tr class="separator:a05489a8b9215888433113983096b85fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a9870d3765eb8297ccc3f866c417361" id="r_a8a9870d3765eb8297ccc3f866c417361"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a9870d3765eb8297ccc3f866c417361">EnableOnlineDefrag</a> () const</td></tr>
<tr class="separator:a8a9870d3765eb8297ccc3f866c417361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e5ae41e2805b56e7ff29f87ff0c390" id="r_a43e5ae41e2805b56e7ff29f87ff0c390"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a43e5ae41e2805b56e7ff29f87ff0c390">SetEnableOnlineDefrag</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a> onlineDefragFlags)</td></tr>
<tr class="separator:a43e5ae41e2805b56e7ff29f87ff0c390"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf0cdab787c79146c836aa2e7687a302" id="r_abf0cdab787c79146c836aa2e7687a302"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abf0cdab787c79146c836aa2e7687a302">SetEnableOnlineDefrag</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a> &gt; &amp;onlineDefragFlags)</td></tr>
<tr class="separator:abf0cdab787c79146c836aa2e7687a302"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c24b60c1f010a5d2301f12886191381" id="r_a9c24b60c1f010a5d2301f12886191381"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c24b60c1f010a5d2301f12886191381">RecordUpgradeDirtyLevel</a> () const</td></tr>
<tr class="separator:a9c24b60c1f010a5d2301f12886191381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac14d46987186e8ab7e1a955d791e9deb" id="r_ac14d46987186e8ab7e1a955d791e9deb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac14d46987186e8ab7e1a955d791e9deb">SetRecordUpgradeDirtyLevel</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> recordUpgradeDirtyLevel)</td></tr>
<tr class="separator:ac14d46987186e8ab7e1a955d791e9deb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9a8686535de2fabaffa56ea09428384" id="r_ac9a8686535de2fabaffa56ea09428384"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9a8686535de2fabaffa56ea09428384">SetRecordUpgradeDirtyLevel</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp;recordUpgradeDirtyLevel)</td></tr>
<tr class="separator:ac9a8686535de2fabaffa56ea09428384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87c183889813545c7a56c6e351242ed1" id="r_a87c183889813545c7a56c6e351242ed1"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a87c183889813545c7a56c6e351242ed1">AccessDeniedRetryPeriod</a> () const</td></tr>
<tr class="separator:a87c183889813545c7a56c6e351242ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91337b5fa53fa0d932e378050662f85e" id="r_a91337b5fa53fa0d932e378050662f85e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91337b5fa53fa0d932e378050662f85e">SetAccessDeniedRetryPeriod</a> (<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> accessDeniedRetryPeriod)</td></tr>
<tr class="separator:a91337b5fa53fa0d932e378050662f85e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a811f2cc2220611b656004861b17a9310" id="r_a811f2cc2220611b656004861b17a9310"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a811f2cc2220611b656004861b17a9310">SetAccessDeniedRetryPeriod</a> (const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp;accessDeniedRetryPeriod)</td></tr>
<tr class="separator:a811f2cc2220611b656004861b17a9310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2fc438359c2795efae7fce034c490d" id="r_a3d2fc438359c2795efae7fce034c490d"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; bool &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d2fc438359c2795efae7fce034c490d">IOPriorityLow</a> () const</td></tr>
<tr class="separator:a3d2fc438359c2795efae7fce034c490d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af75df57012ab5cf9b8289e072a620228" id="r_af75df57012ab5cf9b8289e072a620228"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af75df57012ab5cf9b8289e072a620228">SetIOPriorityLow</a> (bool ioPriorityLow)</td></tr>
<tr class="separator:af75df57012ab5cf9b8289e072a620228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a783f749db14e360c45dfacabf8bed" id="r_ae7a783f749db14e360c45dfacabf8bed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae7a783f749db14e360c45dfacabf8bed">SetIOPriorityLow</a> (const std::optional&lt; bool &gt; &amp;ioPriorityLow)</td></tr>
<tr class="separator:ae7a783f749db14e360c45dfacabf8bed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2669067743c906caf8579a42e98d7d4a" id="r_a2669067743c906caf8579a42e98d7d4a"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2669067743c906caf8579a42e98d7d4a">CacheSize</a> () const</td></tr>
<tr class="separator:a2669067743c906caf8579a42e98d7d4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa377a8be7ddef154b69124d110daf8f5" id="r_aa377a8be7ddef154b69124d110daf8f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa377a8be7ddef154b69124d110daf8f5">SetCacheSize</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> cacheSize)</td></tr>
<tr class="separator:aa377a8be7ddef154b69124d110daf8f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8787dfbf91af679b238d8875dcec7408" id="r_a8787dfbf91af679b238d8875dcec7408"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8787dfbf91af679b238d8875dcec7408">SetCacheSize</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;cacheSize)</td></tr>
<tr class="separator:a8787dfbf91af679b238d8875dcec7408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2393f761a6031c98feeb7b1244e756de" id="r_a2393f761a6031c98feeb7b1244e756de"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2393f761a6031c98feeb7b1244e756de">CacheSizeMin</a> () const</td></tr>
<tr class="separator:a2393f761a6031c98feeb7b1244e756de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac965b734cf233250fe3faea9f2269e7d" id="r_ac965b734cf233250fe3faea9f2269e7d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac965b734cf233250fe3faea9f2269e7d">SetCacheSizeMin</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> cacheSizeMin)</td></tr>
<tr class="separator:ac965b734cf233250fe3faea9f2269e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b391d4e3679a960f0d0f7505ae0175" id="r_a13b391d4e3679a960f0d0f7505ae0175"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a13b391d4e3679a960f0d0f7505ae0175">SetCacheSizeMin</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;cacheSizeMin)</td></tr>
<tr class="separator:a13b391d4e3679a960f0d0f7505ae0175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e8f3b3ef6d61535846fe961ba0853e" id="r_a04e8f3b3ef6d61535846fe961ba0853e"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a04e8f3b3ef6d61535846fe961ba0853e">CacheSizeMax</a> () const</td></tr>
<tr class="separator:a04e8f3b3ef6d61535846fe961ba0853e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebbfe2c7b7d8806b398256daa010c824" id="r_aebbfe2c7b7d8806b398256daa010c824"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aebbfe2c7b7d8806b398256daa010c824">SetCacheSizeMax</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> cacheSizeMax)</td></tr>
<tr class="separator:aebbfe2c7b7d8806b398256daa010c824"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad10affc81940e1c301b8eaa190d02add" id="r_ad10affc81940e1c301b8eaa190d02add"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad10affc81940e1c301b8eaa190d02add">SetCacheSizeMax</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;cacheSizeMax)</td></tr>
<tr class="separator:ad10affc81940e1c301b8eaa190d02add"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d2f7dcbd4c3f5d928edbe9954f5e27f" id="r_a9d2f7dcbd4c3f5d928edbe9954f5e27f"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9d2f7dcbd4c3f5d928edbe9954f5e27f">CheckpointDepthMax</a> () const</td></tr>
<tr class="separator:a9d2f7dcbd4c3f5d928edbe9954f5e27f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e8e80afa1c8e160101c6d6174d171ef" id="r_a4e8e80afa1c8e160101c6d6174d171ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4e8e80afa1c8e160101c6d6174d171ef">SetCheckpointDepthMax</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> checkpointDepthMax)</td></tr>
<tr class="separator:a4e8e80afa1c8e160101c6d6174d171ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca100563fa5fb4d08a2156d78d47eb1a" id="r_aca100563fa5fb4d08a2156d78d47eb1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca100563fa5fb4d08a2156d78d47eb1a">SetCheckpointDepthMax</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;checkpointDepthMax)</td></tr>
<tr class="separator:aca100563fa5fb4d08a2156d78d47eb1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab095b37158f68d3eea2f1ab78ed81f2e" id="r_ab095b37158f68d3eea2f1ab78ed81f2e"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab095b37158f68d3eea2f1ab78ed81f2e">CheckpointIOMax</a> () const</td></tr>
<tr class="separator:ab095b37158f68d3eea2f1ab78ed81f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa03af57becd1606a5a3b390748fb381" id="r_aaa03af57becd1606a5a3b390748fb381"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa03af57becd1606a5a3b390748fb381">SetCheckpointIOMax</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> checkpointIOMax)</td></tr>
<tr class="separator:aaa03af57becd1606a5a3b390748fb381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a786c5ef4ceb70d9b57cb795c0231c402" id="r_a786c5ef4ceb70d9b57cb795c0231c402"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a786c5ef4ceb70d9b57cb795c0231c402">SetCheckpointIOMax</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;checkpointIOMax)</td></tr>
<tr class="separator:a786c5ef4ceb70d9b57cb795c0231c402"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f7a4ce6f984125db2222d5d689adca" id="r_ab2f7a4ce6f984125db2222d5d689adca"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab2f7a4ce6f984125db2222d5d689adca">StartFlushThreshold</a> () const</td></tr>
<tr class="separator:ab2f7a4ce6f984125db2222d5d689adca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0bae00133da0b0a10a601129270c1e" id="r_aca0bae00133da0b0a10a601129270c1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca0bae00133da0b0a10a601129270c1e">SetStartFlushThreshold</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> startFlushThreshold)</td></tr>
<tr class="separator:aca0bae00133da0b0a10a601129270c1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8463eb8c3afa7e0775b39b2ce2ea4f" id="r_a9a8463eb8c3afa7e0775b39b2ce2ea4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a8463eb8c3afa7e0775b39b2ce2ea4f">SetStartFlushThreshold</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;startFlushThreshold)</td></tr>
<tr class="separator:a9a8463eb8c3afa7e0775b39b2ce2ea4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a273d0361fc920045a622ed346b5e8ffd" id="r_a273d0361fc920045a622ed346b5e8ffd"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a273d0361fc920045a622ed346b5e8ffd">StopFlushThreshold</a> () const</td></tr>
<tr class="separator:a273d0361fc920045a622ed346b5e8ffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d6126803606f164393422a2429ffc6" id="r_a72d6126803606f164393422a2429ffc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a72d6126803606f164393422a2429ffc6">SetStopFlushThreshold</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> stopFlushThreshold)</td></tr>
<tr class="separator:a72d6126803606f164393422a2429ffc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a3a85bb9eb62757a980d400990a844" id="r_ae8a3a85bb9eb62757a980d400990a844"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8a3a85bb9eb62757a980d400990a844">SetStopFlushThreshold</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;stopFlushThreshold)</td></tr>
<tr class="separator:ae8a3a85bb9eb62757a980d400990a844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca33dbf2c8500657df7247890ddf9fb0" id="r_aca33dbf2c8500657df7247890ddf9fb0"><td class="memItemLeft" align="right" valign="top">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aca33dbf2c8500657df7247890ddf9fb0">CommitDefault</a> () const</td></tr>
<tr class="separator:aca33dbf2c8500657df7247890ddf9fb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1401ebe27f8f68f1fc6dcaa1d313954a" id="r_a1401ebe27f8f68f1fc6dcaa1d313954a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1401ebe27f8f68f1fc6dcaa1d313954a">SetCommitDefault</a> (<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a> transactionFlags)</td></tr>
<tr class="separator:a1401ebe27f8f68f1fc6dcaa1d313954a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a779122d8058a4d2f6eea19ad6f43b99a" id="r_a779122d8058a4d2f6eea19ad6f43b99a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a779122d8058a4d2f6eea19ad6f43b99a">SetCommitDefault</a> (const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a> &gt; &amp;transactionFlags)</td></tr>
<tr class="separator:a779122d8058a4d2f6eea19ad6f43b99a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a5ed4920f72da0e396dc2ae725cda3a78" id="r_a5ed4920f72da0e396dc2ae725cda3a78"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ed4920f72da0e396dc2ae725cda3a78">snapshotTimeout_</a></td></tr>
<tr class="separator:a5ed4920f72da0e396dc2ae725cda3a78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26aad4173976a83472a312d97a5aecb1" id="r_a26aad4173976a83472a312d97a5aecb1"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a26aad4173976a83472a312d97a5aecb1">dbExtensionSize_</a></td></tr>
<tr class="separator:a26aad4173976a83472a312d97a5aecb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57714ba7910c34ce56919ac1879e6dca" id="r_a57714ba7910c34ce56919ac1879e6dca"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a57714ba7910c34ce56919ac1879e6dca">enableOnlineDefrag_</a></td></tr>
<tr class="separator:a57714ba7910c34ce56919ac1879e6dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a895fb55abb800aafee79c52e6922f5cc" id="r_a895fb55abb800aafee79c52e6922f5cc"><td class="memItemLeft" align="right" valign="top">std::optional&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a895fb55abb800aafee79c52e6922f5cc">recordUpgradeDirtyLevel_</a></td></tr>
<tr class="separator:a895fb55abb800aafee79c52e6922f5cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c66f445731875e7eefc2f63229cd247" id="r_a2c66f445731875e7eefc2f63229cd247"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c66f445731875e7eefc2f63229cd247">accessDeniedRetryPeriod_</a></td></tr>
<tr class="separator:a2c66f445731875e7eefc2f63229cd247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f1dfe363c0bed5a920c394bae9da97f" id="r_a2f1dfe363c0bed5a920c394bae9da97f"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f1dfe363c0bed5a920c394bae9da97f">ioPriorityLow_</a></td></tr>
<tr class="separator:a2f1dfe363c0bed5a920c394bae9da97f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafc23384fe30c9ed76cdb47ced581fa4" id="r_aafc23384fe30c9ed76cdb47ced581fa4"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aafc23384fe30c9ed76cdb47ced581fa4">cacheSize_</a></td></tr>
<tr class="separator:aafc23384fe30c9ed76cdb47ced581fa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cad45b1d7f8b07d14aa53114f339987" id="r_a1cad45b1d7f8b07d14aa53114f339987"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1cad45b1d7f8b07d14aa53114f339987">cacheSizeMin_</a></td></tr>
<tr class="separator:a1cad45b1d7f8b07d14aa53114f339987"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a643a970eec3690d937b3c06875c1e173" id="r_a643a970eec3690d937b3c06875c1e173"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a643a970eec3690d937b3c06875c1e173">cacheSizeMax_</a></td></tr>
<tr class="separator:a643a970eec3690d937b3c06875c1e173"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a1f2b0e2c8ba0e88d6c815ae743fc80" id="r_a7a1f2b0e2c8ba0e88d6c815ae743fc80"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7a1f2b0e2c8ba0e88d6c815ae743fc80">checkpointDepthMax_</a></td></tr>
<tr class="separator:a7a1f2b0e2c8ba0e88d6c815ae743fc80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ab46bcb58fba78a56d8ae58ef0d5532" id="r_a1ab46bcb58fba78a56d8ae58ef0d5532"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ab46bcb58fba78a56d8ae58ef0d5532">checkpointIOMax_</a></td></tr>
<tr class="separator:a1ab46bcb58fba78a56d8ae58ef0d5532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a628e20a4184ec07b7b6e004f19eecef8" id="r_a628e20a4184ec07b7b6e004f19eecef8"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a628e20a4184ec07b7b6e004f19eecef8">startFlushThreshold_</a></td></tr>
<tr class="separator:a628e20a4184ec07b7b6e004f19eecef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d41a37e3e563c49a5406abb9fee2091" id="r_a0d41a37e3e563c49a5406abb9fee2091"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d41a37e3e563c49a5406abb9fee2091">stopFlushThreshold_</a></td></tr>
<tr class="separator:a0d41a37e3e563c49a5406abb9fee2091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af09e28c7c0e93ea100883557af99bc58" id="r_af09e28c7c0e93ea100883557af99bc58"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af09e28c7c0e93ea100883557af99bc58">commitDefault_</a></td></tr>
<tr class="separator:af09e28c7c0e93ea100883557af99bc58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a99e127b16fc50e77e322fe45e1253e95" name="a99e127b16fc50e77e322fe45e1253e95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99e127b16fc50e77e322fe45e1253e95">&#9670;&#160;</a></span>Element</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="#a99e127b16fc50e77e322fe45e1253e95">Harlinn::Common::Core::Ese::InitializedInstanceOptions::Element</a> = <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_xml_1_1_dom_1_1_element.xhtml">Xml::Dom::Element</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2073d220475c0b2413acd1c28e6c1e5d" name="a2073d220475c0b2413acd1c28e6c1e5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2073d220475c0b2413acd1c28e6c1e5d">&#9670;&#160;</a></span>InitializedInstanceOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Harlinn::Common::Core::Ese::InitializedInstanceOptions::InitializedInstanceOptions </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a87c183889813545c7a56c6e351242ed1" name="a87c183889813545c7a56c6e351242ed1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87c183889813545c7a56c6e351242ed1">&#9670;&#160;</a></span>AccessDeniedRetryPeriod()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::AccessDeniedRetryPeriod </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac16b967f10cb1e451925b0920a6ae2d5" name="ac16b967f10cb1e451925b0920a6ae2d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac16b967f10cb1e451925b0920a6ae2d5">&#9670;&#160;</a></span>ApplyTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::Ese::InitializedInstanceOptions::ApplyTo </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_instance.xhtml">Ese::Instance</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>instance</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2669067743c906caf8579a42e98d7d4a" name="a2669067743c906caf8579a42e98d7d4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2669067743c906caf8579a42e98d7d4a">&#9670;&#160;</a></span>CacheSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::CacheSize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a04e8f3b3ef6d61535846fe961ba0853e" name="a04e8f3b3ef6d61535846fe961ba0853e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04e8f3b3ef6d61535846fe961ba0853e">&#9670;&#160;</a></span>CacheSizeMax()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::CacheSizeMax </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2393f761a6031c98feeb7b1244e756de" name="a2393f761a6031c98feeb7b1244e756de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2393f761a6031c98feeb7b1244e756de">&#9670;&#160;</a></span>CacheSizeMin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::CacheSizeMin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9d2f7dcbd4c3f5d928edbe9954f5e27f" name="a9d2f7dcbd4c3f5d928edbe9954f5e27f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d2f7dcbd4c3f5d928edbe9954f5e27f">&#9670;&#160;</a></span>CheckpointDepthMax()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::CheckpointDepthMax </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab095b37158f68d3eea2f1ab78ed81f2e" name="ab095b37158f68d3eea2f1ab78ed81f2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab095b37158f68d3eea2f1ab78ed81f2e">&#9670;&#160;</a></span>CheckpointIOMax()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::CheckpointIOMax </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca33dbf2c8500657df7247890ddf9fb0" name="aca33dbf2c8500657df7247890ddf9fb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca33dbf2c8500657df7247890ddf9fb0">&#9670;&#160;</a></span>CommitDefault()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::CommitDefault </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab768edc6dab7dc550d240572d4c2f7d9" name="ab768edc6dab7dc550d240572d4c2f7d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab768edc6dab7dc550d240572d4c2f7d9">&#9670;&#160;</a></span>DbExtensionSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::DbExtensionSize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8a9870d3765eb8297ccc3f866c417361" name="a8a9870d3765eb8297ccc3f866c417361"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a9870d3765eb8297ccc3f866c417361">&#9670;&#160;</a></span>EnableOnlineDefrag()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::EnableOnlineDefrag </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d2fc438359c2795efae7fce034c490d" name="a3d2fc438359c2795efae7fce034c490d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d2fc438359c2795efae7fce034c490d">&#9670;&#160;</a></span>IOPriorityLow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; bool &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::IOPriorityLow </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a783c48ac0911429c3f279d9f382e0218" name="a783c48ac0911429c3f279d9f382e0218"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a783c48ac0911429c3f279d9f382e0218">&#9670;&#160;</a></span>ReadFrom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Harlinn::Common::Core::Ese::InitializedInstanceOptions::ReadFrom </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#a99e127b16fc50e77e322fe45e1253e95">Element</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>element</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c24b60c1f010a5d2301f12886191381" name="a9c24b60c1f010a5d2301f12886191381"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c24b60c1f010a5d2301f12886191381">&#9670;&#160;</a></span>RecordUpgradeDirtyLevel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::RecordUpgradeDirtyLevel </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a811f2cc2220611b656004861b17a9310" name="a811f2cc2220611b656004861b17a9310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a811f2cc2220611b656004861b17a9310">&#9670;&#160;</a></span>SetAccessDeniedRetryPeriod() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetAccessDeniedRetryPeriod </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>accessDeniedRetryPeriod</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a91337b5fa53fa0d932e378050662f85e" name="a91337b5fa53fa0d932e378050662f85e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91337b5fa53fa0d932e378050662f85e">&#9670;&#160;</a></span>SetAccessDeniedRetryPeriod() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetAccessDeniedRetryPeriod </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a></td>          <td class="paramname"><span class="paramname"><em>accessDeniedRetryPeriod</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8787dfbf91af679b238d8875dcec7408" name="a8787dfbf91af679b238d8875dcec7408"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8787dfbf91af679b238d8875dcec7408">&#9670;&#160;</a></span>SetCacheSize() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCacheSize </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>cacheSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa377a8be7ddef154b69124d110daf8f5" name="aa377a8be7ddef154b69124d110daf8f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa377a8be7ddef154b69124d110daf8f5">&#9670;&#160;</a></span>SetCacheSize() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCacheSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>cacheSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad10affc81940e1c301b8eaa190d02add" name="ad10affc81940e1c301b8eaa190d02add"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad10affc81940e1c301b8eaa190d02add">&#9670;&#160;</a></span>SetCacheSizeMax() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCacheSizeMax </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>cacheSizeMax</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aebbfe2c7b7d8806b398256daa010c824" name="aebbfe2c7b7d8806b398256daa010c824"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebbfe2c7b7d8806b398256daa010c824">&#9670;&#160;</a></span>SetCacheSizeMax() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCacheSizeMax </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>cacheSizeMax</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a13b391d4e3679a960f0d0f7505ae0175" name="a13b391d4e3679a960f0d0f7505ae0175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13b391d4e3679a960f0d0f7505ae0175">&#9670;&#160;</a></span>SetCacheSizeMin() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCacheSizeMin </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>cacheSizeMin</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac965b734cf233250fe3faea9f2269e7d" name="ac965b734cf233250fe3faea9f2269e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac965b734cf233250fe3faea9f2269e7d">&#9670;&#160;</a></span>SetCacheSizeMin() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCacheSizeMin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>cacheSizeMin</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca100563fa5fb4d08a2156d78d47eb1a" name="aca100563fa5fb4d08a2156d78d47eb1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca100563fa5fb4d08a2156d78d47eb1a">&#9670;&#160;</a></span>SetCheckpointDepthMax() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCheckpointDepthMax </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>checkpointDepthMax</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4e8e80afa1c8e160101c6d6174d171ef" name="a4e8e80afa1c8e160101c6d6174d171ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e8e80afa1c8e160101c6d6174d171ef">&#9670;&#160;</a></span>SetCheckpointDepthMax() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCheckpointDepthMax </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>checkpointDepthMax</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a786c5ef4ceb70d9b57cb795c0231c402" name="a786c5ef4ceb70d9b57cb795c0231c402"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a786c5ef4ceb70d9b57cb795c0231c402">&#9670;&#160;</a></span>SetCheckpointIOMax() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCheckpointIOMax </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>checkpointIOMax</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa03af57becd1606a5a3b390748fb381" name="aaa03af57becd1606a5a3b390748fb381"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa03af57becd1606a5a3b390748fb381">&#9670;&#160;</a></span>SetCheckpointIOMax() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCheckpointIOMax </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>checkpointIOMax</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a779122d8058a4d2f6eea19ad6f43b99a" name="a779122d8058a4d2f6eea19ad6f43b99a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a779122d8058a4d2f6eea19ad6f43b99a">&#9670;&#160;</a></span>SetCommitDefault() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCommitDefault </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>transactionFlags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1401ebe27f8f68f1fc6dcaa1d313954a" name="a1401ebe27f8f68f1fc6dcaa1d313954a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1401ebe27f8f68f1fc6dcaa1d313954a">&#9670;&#160;</a></span>SetCommitDefault() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetCommitDefault </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a></td>          <td class="paramname"><span class="paramname"><em>transactionFlags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a05489a8b9215888433113983096b85fc" name="a05489a8b9215888433113983096b85fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05489a8b9215888433113983096b85fc">&#9670;&#160;</a></span>SetDbExtensionSize() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetDbExtensionSize </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>dbExtensionSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2208ca10d52f126df6eb629dd006aefe" name="a2208ca10d52f126df6eb629dd006aefe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2208ca10d52f126df6eb629dd006aefe">&#9670;&#160;</a></span>SetDbExtensionSize() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetDbExtensionSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a></td>          <td class="paramname"><span class="paramname"><em>dbExtensionSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abf0cdab787c79146c836aa2e7687a302" name="abf0cdab787c79146c836aa2e7687a302"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf0cdab787c79146c836aa2e7687a302">&#9670;&#160;</a></span>SetEnableOnlineDefrag() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetEnableOnlineDefrag </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>onlineDefragFlags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a43e5ae41e2805b56e7ff29f87ff0c390" name="a43e5ae41e2805b56e7ff29f87ff0c390"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43e5ae41e2805b56e7ff29f87ff0c390">&#9670;&#160;</a></span>SetEnableOnlineDefrag() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetEnableOnlineDefrag </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a></td>          <td class="paramname"><span class="paramname"><em>onlineDefragFlags</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af75df57012ab5cf9b8289e072a620228" name="af75df57012ab5cf9b8289e072a620228"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af75df57012ab5cf9b8289e072a620228">&#9670;&#160;</a></span>SetIOPriorityLow() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetIOPriorityLow </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>ioPriorityLow</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae7a783f749db14e360c45dfacabf8bed" name="ae7a783f749db14e360c45dfacabf8bed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7a783f749db14e360c45dfacabf8bed">&#9670;&#160;</a></span>SetIOPriorityLow() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetIOPriorityLow </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; bool &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>ioPriorityLow</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac9a8686535de2fabaffa56ea09428384" name="ac9a8686535de2fabaffa56ea09428384"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9a8686535de2fabaffa56ea09428384">&#9670;&#160;</a></span>SetRecordUpgradeDirtyLevel() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetRecordUpgradeDirtyLevel </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>recordUpgradeDirtyLevel</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac14d46987186e8ab7e1a955d791e9deb" name="ac14d46987186e8ab7e1a955d791e9deb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac14d46987186e8ab7e1a955d791e9deb">&#9670;&#160;</a></span>SetRecordUpgradeDirtyLevel() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetRecordUpgradeDirtyLevel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a></td>          <td class="paramname"><span class="paramname"><em>recordUpgradeDirtyLevel</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4839b27212e13b002258f381d62836fb" name="a4839b27212e13b002258f381d62836fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4839b27212e13b002258f381d62836fb">&#9670;&#160;</a></span>SetSnapshotTimeout() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetSnapshotTimeout </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>snapshotTimeout</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af93f3ece96eff78fdba67ae814f4dd90" name="af93f3ece96eff78fdba67ae814f4dd90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af93f3ece96eff78fdba67ae814f4dd90">&#9670;&#160;</a></span>SetSnapshotTimeout() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetSnapshotTimeout </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a></td>          <td class="paramname"><span class="paramname"><em>snapshotTimeout</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9a8463eb8c3afa7e0775b39b2ce2ea4f" name="a9a8463eb8c3afa7e0775b39b2ce2ea4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a8463eb8c3afa7e0775b39b2ce2ea4f">&#9670;&#160;</a></span>SetStartFlushThreshold() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetStartFlushThreshold </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>startFlushThreshold</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca0bae00133da0b0a10a601129270c1e" name="aca0bae00133da0b0a10a601129270c1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca0bae00133da0b0a10a601129270c1e">&#9670;&#160;</a></span>SetStartFlushThreshold() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetStartFlushThreshold </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>startFlushThreshold</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae8a3a85bb9eb62757a980d400990a844" name="ae8a3a85bb9eb62757a980d400990a844"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8a3a85bb9eb62757a980d400990a844">&#9670;&#160;</a></span>SetStopFlushThreshold() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetStopFlushThreshold </td>
          <td>(</td>
          <td class="paramtype">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>stopFlushThreshold</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a72d6126803606f164393422a2429ffc6" name="a72d6126803606f164393422a2429ffc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72d6126803606f164393422a2429ffc6">&#9670;&#160;</a></span>SetStopFlushThreshold() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a> &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SetStopFlushThreshold </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a></td>          <td class="paramname"><span class="paramname"><em>stopFlushThreshold</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca4e14560bdedb1967aa8762a18495ef" name="aca4e14560bdedb1967aa8762a18495ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca4e14560bdedb1967aa8762a18495ef">&#9670;&#160;</a></span>SnapshotTimeout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::SnapshotTimeout </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab2f7a4ce6f984125db2222d5d689adca" name="ab2f7a4ce6f984125db2222d5d689adca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f7a4ce6f984125db2222d5d689adca">&#9670;&#160;</a></span>StartFlushThreshold()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::StartFlushThreshold </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a273d0361fc920045a622ed346b5e8ffd" name="a273d0361fc920045a622ed346b5e8ffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a273d0361fc920045a622ed346b5e8ffd">&#9670;&#160;</a></span>StopFlushThreshold()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::optional&lt; <a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a> &gt; &amp; Harlinn::Common::Core::Ese::InitializedInstanceOptions::StopFlushThreshold </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a2c66f445731875e7eefc2f63229cd247" name="a2c66f445731875e7eefc2f63229cd247"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c66f445731875e7eefc2f63229cd247">&#9670;&#160;</a></span>accessDeniedRetryPeriod_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::accessDeniedRetryPeriod_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aafc23384fe30c9ed76cdb47ced581fa4" name="aafc23384fe30c9ed76cdb47ced581fa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafc23384fe30c9ed76cdb47ced581fa4">&#9670;&#160;</a></span>cacheSize_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::cacheSize_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a643a970eec3690d937b3c06875c1e173" name="a643a970eec3690d937b3c06875c1e173"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a643a970eec3690d937b3c06875c1e173">&#9670;&#160;</a></span>cacheSizeMax_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::cacheSizeMax_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1cad45b1d7f8b07d14aa53114f339987" name="a1cad45b1d7f8b07d14aa53114f339987"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cad45b1d7f8b07d14aa53114f339987">&#9670;&#160;</a></span>cacheSizeMin_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::cacheSizeMin_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7a1f2b0e2c8ba0e88d6c815ae743fc80" name="a7a1f2b0e2c8ba0e88d6c815ae743fc80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a1f2b0e2c8ba0e88d6c815ae743fc80">&#9670;&#160;</a></span>checkpointDepthMax_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::checkpointDepthMax_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ab46bcb58fba78a56d8ae58ef0d5532" name="a1ab46bcb58fba78a56d8ae58ef0d5532"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ab46bcb58fba78a56d8ae58ef0d5532">&#9670;&#160;</a></span>checkpointIOMax_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::checkpointIOMax_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af09e28c7c0e93ea100883557af99bc58" name="af09e28c7c0e93ea100883557af99bc58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af09e28c7c0e93ea100883557af99bc58">&#9670;&#160;</a></span>commitDefault_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a31fa0420685da795ff5256a40b09bf16">TransactionFlags</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::commitDefault_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a26aad4173976a83472a312d97a5aecb1" name="a26aad4173976a83472a312d97a5aecb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26aad4173976a83472a312d97a5aecb1">&#9670;&#160;</a></span>dbExtensionSize_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::dbExtensionSize_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a57714ba7910c34ce56919ac1879e6dca" name="a57714ba7910c34ce56919ac1879e6dca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57714ba7910c34ce56919ac1879e6dca">&#9670;&#160;</a></span>enableOnlineDefrag_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml#a1e0cbefc7d16645f19647ba018683bdb">OnlineDefragFlags</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::enableOnlineDefrag_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2f1dfe363c0bed5a920c394bae9da97f" name="a2f1dfe363c0bed5a920c394bae9da97f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f1dfe363c0bed5a920c394bae9da97f">&#9670;&#160;</a></span>ioPriorityLow_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#aa879caba763494ad2c3cd321ce4bbdda">Int32</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::ioPriorityLow_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a895fb55abb800aafee79c52e6922f5cc" name="a895fb55abb800aafee79c52e6922f5cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a895fb55abb800aafee79c52e6922f5cc">&#9670;&#160;</a></span>recordUpgradeDirtyLevel_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;long&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::recordUpgradeDirtyLevel_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ed4920f72da0e396dc2ae725cda3a78" name="a5ed4920f72da0e396dc2ae725cda3a78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ed4920f72da0e396dc2ae725cda3a78">&#9670;&#160;</a></span>snapshotTimeout_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_time_span.xhtml">TimeSpan</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::snapshotTimeout_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a628e20a4184ec07b7b6e004f19eecef8" name="a628e20a4184ec07b7b6e004f19eecef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a628e20a4184ec07b7b6e004f19eecef8">&#9670;&#160;</a></span>startFlushThreshold_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::startFlushThreshold_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d41a37e3e563c49a5406abb9fee2091" name="a0d41a37e3e563c49a5406abb9fee2091"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d41a37e3e563c49a5406abb9fee2091">&#9670;&#160;</a></span>stopFlushThreshold_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml#a47d821532420478a9043d9f71d0735d8">UInt64</a>&gt; Harlinn::Common::Core::Ese::InitializedInstanceOptions::stopFlushThreshold_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="_h_c_c_ese_options_8h.xhtml">HCCEseOptions.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_harlinn.xhtml">Harlinn</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common.xhtml">Common</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core.xhtml">Core</a></li><li class="navelem"><a class="el" href="namespace_harlinn_1_1_common_1_1_core_1_1_ese.xhtml">Ese</a></li><li class="navelem"><a class="el" href="class_harlinn_1_1_common_1_1_core_1_1_ese_1_1_initialized_instance_options.xhtml">InitializedInstanceOptions</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
